{"version":3,"file":"component---src-pages-gallery-potg-src-pages-components-summoner-matches-match-detail-tsx-e7a9147cdadb96da7ae3.js","mappings":"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","sources":["webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/champion-image/Champion.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/Detail.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/detail/Gaugebar.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/detail/SummonerSummary.tsx","webpack://portfolio/./src/tools/generator/rank.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Champion.css\";\n\nexport enum SizeType {\n  Small,\n  Large,\n  Detail,\n  Ban,\n}\n\ninterface Props {\n  size: SizeType;\n  src: string;\n}\n\nfunction Champion(props: Props) {\n  // var coverSize: string = \"0\";\n  // var coverRadius: string = \"0\";\n  // var imageSize: string = \"0\";\n\n  // TODO: 컴포넌트 삭제 및 개별 적용\n  var [coverStyle, setCoverStyle] = useState(\"\");\n  var [imageStyle, setImageStyle] = useState(\"\");\n\n  useEffect(() => {\n    switch (props.size) {\n      case SizeType.Large:\n        setCoverStyle(\"cover-large\");\n        setImageStyle(\"image-large\");\n        break;\n      case SizeType.Small:\n        setCoverStyle(\"cover-small\");\n        setImageStyle(\"image-small\");\n        break;\n      case SizeType.Detail:\n        setCoverStyle(\"cover-detail\");\n        setImageStyle(\"image-detail\");\n        break;\n      case SizeType.Ban:\n        setCoverStyle(\"cover-ingameBan\");\n        setImageStyle(\"image-ingameBan\");\n        break;\n    }\n  }, [props.size]);\n\n  return (\n    <div className={coverStyle}>\n      <img className={imageStyle} src={props.src} alt=\"\" />\n    </div>\n  );\n}\n\nexport default Champion;\n","import React from \"react\";\nimport MatchEntity from \"../../../../../../../../../../model/match-entity\";\nimport \"./Detail.css\";\nimport SummonerSummary from \"./detail/SummonerSummary\";\n\ninterface DetailData {\n  match: MatchEntity;\n  currentSummonerPuuid: string;\n}\n\ninterface TeamData {\n  detailData: DetailData;\n  index: number;\n}\n\nconst DetailTeamView = (props: TeamData) => {\n  return (\n    <div className=\"flex-grow\">\n      {props.detailData.match?.teams\n        ?.at(props.index)\n        ?.participants?.map((user) => (\n          <SummonerSummary\n            key={`DetailTeamView_${user.puuid}`}\n            summonerName={user.summonerName}\n            championLevel={user.champLevel}\n            championName={user.championName}\n            currentSummonerPuuid={props.detailData.currentSummonerPuuid}\n            score={{\n              kills: user.kills as number,\n              deaths: user.deaths as number,\n              assists: user.assists as number,\n              wardPlace: user.wardsPlaced as number,\n              totalMinionKills: user.totalMinionsKilled as number,\n              neutralMinionsKills: user.neutralMinionsKilled as number,\n            }}\n            summonerPuuid={user.puuid as string}\n            items={{\n              item0: user.item0 as number,\n              item1: user.item1 as number,\n              item2: user.item2 as number,\n              item3: user.item3 as number,\n              item4: user.item4 as number,\n              item5: user.item5 as number,\n              item6: user.item6 as number,\n            }}\n            position={user.individualPosition as string}\n            summonerTier={1}\n            summonerRank={1}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst GameResultText = ({ isWin }: { isWin: boolean }) => {\n  return (\n    <div\n      className={`ml-2 font-bold text-lg ${\n        isWin ? \"text-blue-500\" : \"text-red-500\"\n      } `}\n    >\n      {isWin ? \"승리\" : \"패배\"}\n    </div>\n  );\n};\n\nconst Detail = (props: DetailData) => {\n  const teams = props.match?.teams;\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex px-2\">\n        <div className=\"flex flex-col flex-grow\">\n          <GameResultText isWin={teams?.at(0)?.win as boolean} />\n        </div>\n        <div className=\"flex-grow\">\n          <GameResultText isWin={teams?.at(1)?.win as boolean} />\n        </div>\n      </div>\n      <div className=\"flex gap-2 p-2\">\n        <DetailTeamView index={0} detailData={props} />\n        <DetailTeamView index={1} detailData={props} />\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\n\nexport interface GaugebarData {\n  max: number;\n  value: number;\n  color?: string;\n}\n\nfunction Gaugebar(props: GaugebarData) {\n  // TODO: 컴포넌트 옮기기\n  return (\n    <div className=\"w-full bg-gray-300 rounded-full h-2\">\n      <div\n        className={`${\n          props.color ? props.color : \"bg-red-500\"\n        } h-2 rounded-full`}\n        style={{\n          width:\n            props.value < 10\n              ? props.value === 0\n                ? props.value\n                : 8\n              : props.value + `%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default Gaugebar;\n","import React from \"react\";\nimport getTierNumberToString from \"../../../../../../../../../../tools/generator/rank\";\nimport Champion, { SizeType } from \"../../../../champion-image/Champion\";\nimport Gaugebar from \"./Gaugebar\";\n\ninterface SummonerData {\n  summonerName: string | null | undefined;\n  championName: string | null | undefined;\n  championLevel: number | null | undefined;\n  score: ScoreData;\n  currentSummonerPuuid: string;\n  summonerPuuid: string;\n  items: ItemCodeData;\n  position: string;\n  summonerTier: number;\n  summonerRank: number;\n}\n\ninterface ScoreData {\n  kills: number;\n  deaths: number;\n  assists: number;\n  wardPlace: number;\n  totalMinionKills: number;\n  neutralMinionsKills: number;\n}\n\ninterface ItemCodeData {\n  item0: number;\n  item1: number;\n  item2: number;\n  item3: number;\n  item4: number;\n  item5: number;\n  item6: number;\n}\n\nconst SummonerSummary = (props: SummonerData) => {\n  const isCurrentUser = props.currentSummonerPuuid === props.summonerPuuid;\n\n  const items = [\n    props?.items?.item0,\n    props?.items?.item1,\n    props?.items?.item2,\n    props?.items?.item6,\n    props?.items?.item3,\n    props?.items?.item4,\n    props?.items?.item5,\n  ];\n\n  return (\n    <div\n      className={`flex gap-2 text-gray-700 p-2 ${\n        isCurrentUser ? \"rounded-lg bg-gray-200\" : \"\"\n      }`}\n    >\n      <div className=\"Detail--Profile gap-2 gap-x-3 grid grid-flow-col items-center\">\n        <div className=\"flex flex-col items-center\">\n          <Champion\n            src={`http://ddragon.leagueoflegends.com/cdn/12.14.1/img/champion/${props.championName}.png`}\n            size={SizeType.Detail}\n          />\n        </div>\n        <div className=\"text-[10px] font-bold text-center\">\n          LV. {props.championLevel}\n        </div>\n        <div\n          className={`text-sm ${\n            isCurrentUser ? \"font-bold\" : \"\"\n          } w-24 text-ellipsis overflow-hidden whitespace-nowrap`}\n        >\n          {props.summonerName}\n        </div>\n        <div className=\"text-[10px] w-24\">\n          {getTierNumberToString(props.summonerTier, props.summonerRank)}\n        </div>\n      </div>\n      <div className=\"flex items-center gap-7\">\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"text-xs text-center\">KDA</div>\n          <div className=\"font-semibold h-6 w-[90px] text-center\">\n            {props?.score?.kills} / {props?.score?.deaths} /{\" \"}\n            {props?.score?.assists}\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-1 w-7 items-center\">\n          <div className=\"text-xs text-center\">\n            {props.position === \"UTILITY\" ? \"와드\" : \"CS\"}\n          </div>\n          <div className=\"font-semibold h-6\">\n            {props.position === \"UTILITY\"\n              ? props.score?.wardPlace\n              : props.score?.totalMinionKills +\n                props.score?.neutralMinionsKills}\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"text-xs text-center\">피해</div>\n          <div className=\"flex w-14 h-6 items-center\">\n            <Gaugebar max={100} value={25} />\n          </div>\n        </div>\n        <div className=\"grid grid-flow-row grid-cols-4 grid-rows-2 gap-1\">\n          {items.map((itemCode, index) =>\n            itemCode > 0 ? (\n              <img\n                key={index}\n                style={{ width: \"24px\", height: \"24px\" }}\n                className=\"bg-gray-200 rounded-md overflow-hidden\"\n                src={`http://ddragon.leagueoflegends.com/cdn/12.15.1/img/item/${itemCode}.png`}\n                alt=\"item\"\n              />\n            ) : (\n              <div\n                key={index}\n                style={{ width: \"24px\", height: \"24px\" }}\n                className=\"bg-gray-300 rounded-md overflow-hidden\"\n              />\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SummonerSummary;\n","/**\n * api로 받은 숫자의 데이터를 문자열로 바꿔준다.\n * @param {number} rank api로 받은 rank의 숫자\n * @returns {string} 숫자로 받은 tier를 문자열로 변환(0->아이언)\n */\nexport default function getTierNumberToString(\n  tier: number,\n  rank: number\n): string {\n  var _tier = \"-\";\n  var _rank = \"\";\n\n  switch (tier) {\n    case 0:\n      _tier = \"아이언\";\n      break;\n    case 1:\n      _tier = \"브론즈\";\n      break;\n    case 2:\n      _tier = \"실버\";\n      break;\n    case 3:\n      _tier = \"골드\";\n      break;\n    case 4:\n      _tier = \"플래티넘\";\n      break;\n    case 5:\n      _tier = \"다이아몬드\";\n      break;\n    case 6:\n      _tier = \"마스터\";\n      break;\n    case 7:\n      _tier = \"그랜드마스터\";\n      break;\n    case 8:\n      _tier = \"챌린저\";\n      break;\n  }\n\n  switch (rank) {\n    case 1:\n      _rank = \"1\";\n      switch (tier) {\n        case 6:\n          _rank = \"\";\n          break;\n        case 7:\n          _rank = \"\";\n          break;\n        case 8:\n          _rank = \"\";\n          break;\n      }\n      break;\n    case 2:\n    case 3:\n    case 4:\n      _rank = rank.toString();\n      break;\n  }\n  return `${_tier} ${_rank}`;\n}\n"],"names":["SizeType","props","coverStyle","setCoverStyle","useState","imageStyle","setImageStyle","useEffect","size","Large","Small","Detail","Ban","React","className","src","alt","DetailTeamView","detailData","match","_props$detailData$mat","teams","_props$detailData$mat2","at","index","_props$detailData$mat3","participants","_props$detailData$mat4","map","user","SummonerSummary","key","puuid","summonerName","championLevel","champLevel","championName","currentSummonerPuuid","score","kills","deaths","assists","wardPlace","wardsPlaced","totalMinionKills","totalMinionsKilled","neutralMinionsKills","neutralMinionsKilled","summonerPuuid","items","item0","item1","item2","item3","item4","item5","item6","position","individualPosition","summonerTier","summonerRank","GameResultText","_ref","isWin","_props$match","_teams$at","win","_teams$at2","color","style","width","value","isCurrentUser","_props$items","_props$items2","_props$items3","_props$items4","_props$items5","_props$items6","_props$items7","Champion","getTierNumberToString","_props$score","_props$score2","_props$score3","_props$score4","_props$score5","_props$score6","Gaugebar","max","itemCode","height","tier","rank","_tier","_rank","toString"],"sourceRoot":""}