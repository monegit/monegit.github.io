{"version":3,"file":"24f7fbd569c9cd7b86f8a6ed1016c4c66794ebd5-67b6890bb04ca7c369b1.js","mappings":"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","sources":["webpack://volunteer/./node_modules/react-apple-emojis/dist/DataContext.js","webpack://volunteer/./node_modules/react-apple-emojis/dist/EmojiProvider.js","webpack://volunteer/./node_modules/react-apple-emojis/dist/Emoji.js","webpack://volunteer/./src/components/Home/CharacterCard.tsx","webpack://volunteer/./src/images/Introduce.jpg","webpack://volunteer/./src/components/Home/Introduce.tsx","webpack://volunteer/./src/pages/Home.tsx","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/utils.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/numbers/units.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/numbers/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/warn-once.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/utils.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/rgba.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/hex.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/hsla.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/complex/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/complex/filter.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://volunteer/./node_modules/framesync/dist/es/on-next-frame.mjs","webpack://volunteer/./node_modules/framesync/dist/es/index.mjs","webpack://volunteer/./node_modules/framesync/dist/es/create-render-step.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\nexport default createContext({});\n//# sourceMappingURL=DataContext.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport PropTypes from 'prop-types';\nimport DataContext from './DataContext';\nfunction EmojiProvider({ data, children }) {\n    if (!data) {\n        throw new Error('Please pass a data value to EmojiProvider');\n    }\n    return (_jsx(DataContext.Provider, Object.assign({ value: data }, { children: children })));\n}\nEmojiProvider.propTypes = {\n    data: PropTypes.object.isRequired,\n};\nexport default EmojiProvider;\n//# sourceMappingURL=EmojiProvider.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport DataContext from './DataContext';\nfunction Emoji(_a) {\n    var { name } = _a, props = __rest(_a, [\"name\"]);\n    const data = useContext(DataContext);\n    const url = data[name];\n    if (!url) {\n        console.warn(`Emoji ${name}'s URL could not be found.`);\n    }\n    return (_jsx(\"img\", Object.assign({ src: url, alt: name, \"aria-label\": name }, props)));\n}\nEmoji.propTypes = {\n    name: propTypes.string.isRequired,\n};\nexport default Emoji;\n//# sourceMappingURL=Emoji.js.map","import React, { useState } from \"react\";\nimport { Emoji, EmojiProvider } from \"react-apple-emojis\";\nimport emojiData from \"react-apple-emojis/src/data.json\";\nimport { animate, motion } from \"framer-motion\";\n\ninterface CharacterCardData {\n  color: string;\n  title: string;\n  content: JSX.Element;\n  icon: string;\n  fontSize?: string;\n}\n\nfunction CharacterCard(props: CharacterCardData) {\n  let [tapped, setTapped] = useState(false);\n\n  return (\n    <motion.div\n      className={`flex flex-col select-none cursor-pointer gap-2 items-center justify-center rounded-[20px] shadow-round w-[350px] h-[200px] ${props.color}`}\n      whileHover={{\n        scale: 1.05,\n      }}\n      whileTap={{\n        scale: 1.02,\n      }}\n      onTap={() => {\n        setTapped(!tapped);\n      }}\n      animate={{\n        height: tapped ? 450 : 200,\n      }}\n      transition={{\n        duration: 0.15,\n        ease: \"easeOut\",\n      }}\n    >\n      <motion.div\n        className=\"flex flex-col gap-2 items-center\"\n        animate={{ opacity: tapped ? 0 : 1 }}\n        transition={{ duration: 0.1 }}\n      >\n        <div>\n          <EmojiProvider data={emojiData}>\n            <Emoji name={props.icon} width={45} />\n          </EmojiProvider>\n        </div>\n        <div className={`text-white font-bold ${props.fontSize}`}>\n          {props.title}\n        </div>\n      </motion.div>\n      <motion.div\n        className={`absolute ${\n          tapped ? \"visible\" : \"collapse\"\n        } text-lg text-white`}\n        animate={{ opacity: tapped ? 1 : 0 }}\n        transition={{ duration: 0.1 }}\n      >\n        {props.content}\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport default CharacterCard;\n","export default __webpack_public_path__ + \"static/Introduce-1aff3f2e849442a7a67612c097a22ab5.jpg\";","import React from \"react\";\nimport Introduce_Image from \"../../images/Introduce.jpg\";\n\nfunction Introduce({ className = \"\" }) {\n  return (\n    <div className={className + \" flex\"}>\n      <img\n        className=\"w-[400px] h-[400px] object-cover rounded-3xl shadow-round\"\n        src={Introduce_Image}\n        alt=\"Introduce\"\n      />\n      <div className=\"flex flex-col mt-[50px]\">\n        <div className=\"text-[40px] ml-[50px] mb-[35px]\">\n          <b> 「つながる場」 </b>をつくる\n        </div>\n        <div className=\"text-[20px] ml-[90px]\">\n          Community Labは、<b className=\"text-[#3CB3EC]\">現役大学生</b>\n          が子供たちに\n          <br />\n          様々な分野のイベントやコンテンツを提供する\n          <b className=\"text-[#3CB3EC]\">教育コミュニティ</b>\n          です。\n          <br />\n          <br />\n          ​年齢や学校の枠を越え\n          <br />\n          生涯に渡って交流する仲間と\n          <b className=\"text-[#3CB3EC]\"> 「つながる場」 </b>\n          をつくります。\n          <br />\n          <br />\n          <b className=\"text-[15px] text-[#3CB3EC]\">詳細はこちらへ！</b>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Introduce;\n","import React from \"react\";\nimport CharacterCard from \"../components/Home/CharacterCard\";\nimport Introduce from \"../components/Home/Introduce\";\n\nconst IntroducePanel = () => {\n  return <Introduce className=\"m-[120px]\" />;\n};\n\nconst CharacterCardPanel = () => {\n  return (\n    <div className={`flex flex-row justify-center gap-7 `}>\n      <CharacterCard\n        color=\"bg-rose-400\"\n        title=\"専門性が高い\"\n        icon=\"flexed-biceps\"\n        fontSize=\"text-3xl\"\n        content={\n          <div className=\"flex flex-col\">\n            メンバーみんな、それぞれの大学で\n            <br />\n            専門分野を中心に学問を修め、\n            <b>最先端の生きた技術や知識を勉強</b>しています。\n            <br />\n            <br />\n            ​そうして得た知識や技術、経験を\n            <b>本質を損なうことなく分かりやすく</b>\n            噛み砕いて<b>子どもたちの学びへと還元</b>します。\n          </div>\n        }\n      />\n      <CharacterCard\n        color=\"bg-sky-400\"\n        title=\"多様なコンテンツ\"\n        icon=\"party-popper\"\n        fontSize=\"text-3xl\"\n        content={\n          <div className=\"flex flex-col\">\n            Community Labには現在20人以上\n            <br />\n            メンバーがいますが、\n            <br />\n            それぞれに違った専門分野や特技、\n            <br />\n            趣味があります。\n            <br />\n            <br />\n            多様な背景を持ち、異なる大学に通う\n            <br />\n            メンバーが集まっているからこそ、\n            <br />\n            その分\n            <b>\n              多様な学びや経験を子どもたちに\n              <br />\n              提供\n            </b>\n            することができます。\n          </div>\n        }\n      />\n      <CharacterCard\n        color=\"bg-emerald-400\"\n        title=\"子ども達との距離が近い\"\n        icon=\"family-man-woman-girl-boy\"\n        fontSize=\"text-2xl\"\n        content={\n          <div>\n            メンバーは全員<b>現役大学生</b>なので、\n            <br />\n            年齢的にも心理的にも\n            <br />\n            <b>\n              子どもたちとの距離が近く、\n              <br />\n              コミュニケーションを\n              <br />\n              取りやすい\n            </b>\n            のが強みです。\n            <br />\n            <br />\n            また年齢が近いからこそ、\n            <br />\n            子どもたちの\n            <br />\n            <b>理想像(ロールモデル)になれる</b>と\n            <br />\n            自負しています。\n          </div>\n        }\n      />\n      <CharacterCard\n        color=\"bg-orange-400\"\n        title=\"主体性行動力\"\n        icon=\"man-running-light-skin-tone\"\n        fontSize=\"text-3xl\"\n        content={\n          <div>\n            Community Labでは\n            <br />\n            活動理念に共感したメンバーが、\n            <br />\n            時間や熱意を捧げて\n            <b>\n              主体的にこの\n              <br />\n              活動に取り組んでいます。\n            </b>\n            <br />\n            <br />\n            また社会人と比べて多くの\n            <br />\n            時間があるため、\n            <br />\n            学びのチャンスがあれば\n            <br />\n            <b>\n              積極的にアクションを\n              <br />\n              起こす行動力があります。\n            </b>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nfunction Home() {\n  return (\n    <div className=\"flex flex-col\">\n      <IntroducePanel />\n      <CharacterCardPanel />\n    </div>\n  );\n}\n\nexport default Home;\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["createContext","EmojiProvider","data","children","Error","DataContext","Provider","Object","assign","value","propTypes","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Emoji","_a","name","props","url","useContext","console","warn","src","alt","tapped","setTapped","useState","React","motion","className","color","whileHover","scale","whileTap","onTap","animate","height","transition","duration","ease","opacity","emojiData","icon","width","fontSize","title","content","Introduce_Image","IntroducePanel","Introduce","CharacterCardPanel","CharacterCard","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","some","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","key","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","sanitize","Number","toFixed","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","parse","parseFloat","degrees","percent","px","vh","vw","progressPercentage","number","alpha","default","round","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","push","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","toLowerCase","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","eventHandler","button","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","secondsToMilliseconds","seconds","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","circIn","sin","acos","circOut","circInOut","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","c","match","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substr","parseInt","hsla","hue","saturation","lightness","colorToken","numberToken","analyse","numColors","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","_c","_d","isNaN","getAnimatableNone","parsed","transformer","isAnimatable","underDampedSpring","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","keyframes","defaultTransitions","backgroundColor","getDefaultTransition","valueKey","transitionFactory","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","instantAnimationState","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","delta","timestamp","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","splice","process","frameData","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","getFrameData","delay","timeout","checkElapsed","elapsed","read","from","progress","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","numNumbers","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultEasing","safeMin","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","framesync","update","passTimestamp","stop","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","velocityPerSecond","frameDuration","legacyRepeatWarning","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getPopmotionAnimationOptions","hydrateKeyframes","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","getAnimation","valueTransition","getValueTransition","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","finalTarget","potentialUnitType","controls","delayBy","getDelayFromTransition","cancelDelay","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","constructor","subscriptions","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","velocityCheck","hasAnimated","onChange","subscription","clearListeners","onRenderRequest","attach","passiveEffect","getPrevious","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","isWillChangeMotionValue","animateVariant","variant","transitionOverride","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle"],"sourceRoot":""}