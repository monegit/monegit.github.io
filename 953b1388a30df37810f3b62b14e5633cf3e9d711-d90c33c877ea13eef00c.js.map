{"version":3,"file":"953b1388a30df37810f3b62b14e5633cf3e9d711-d90c33c877ea13eef00c.js","mappings":"mJASA,UAPA,SAAsB,GAA8B,IAA9B,MAAEA,GAA0B,EAChD,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,sEACZF,EAGP,C,sDCOA,MAAMG,EAAkBC,IAAoB,YAC1C,OACEH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACU,QADC,EACvBE,EAAMC,WAAWC,aAAK,OAAO,QAAP,EAAtBC,EAAwBC,aAAK,OACX,QADW,EAA7BC,EACGC,GAAGN,EAAMO,cAAM,OACH,QADG,EADlBC,EAEGC,oBAAY,WAFO,EAAtBC,EAEiBC,KAAKC,GACnBf,EAAAA,cAACgB,EAAAA,QAAe,CACdC,IAAG,kBAAoBF,EAAKG,MAC5BC,aAAcJ,EAAKI,aACnBC,cAAeL,EAAKM,WACpBC,aAAcP,EAAKO,aACnBC,qBAAsBpB,EAAMC,WAAWmB,qBACvCC,MAAO,CACLC,MAAOV,EAAKU,MACZC,OAAQX,EAAKW,OACbC,QAASZ,EAAKY,QACdC,UAAWb,EAAKc,YAChBC,iBAAkBf,EAAKgB,mBACvBC,oBAAqBjB,EAAKkB,sBAE5BC,cAAenB,EAAKG,MACpBiB,MAAO,CACLC,MAAOrB,EAAKqB,MACZC,MAAOtB,EAAKsB,MACZC,MAAOvB,EAAKuB,MACZC,MAAOxB,EAAKwB,MACZC,MAAOzB,EAAKyB,MACZC,MAAO1B,EAAK0B,MACZC,MAAO3B,EAAK2B,OAEdC,SAAU5B,EAAK6B,mBACfC,aAAc,EACdC,aAAc,MAGhB,EAIJC,EAAiBC,IAAmC,IAAlC,MAAEC,GAA2B,EACnD,OACEjD,EAAAA,cAAAA,MAAAA,CACEC,UAAS,2BACPgD,EAAQ,gBAAkB,gBAAc,KAGzCA,EAAQ,KAAO,KACZ,EAwBV,UApBgB9C,IAAsB,UACpC,MAAMI,EAAmB,QAAd,EAAGJ,EAAME,aAAK,aAAX6C,EAAa3C,MAC3B,OACEP,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2BACbD,EAAAA,cAAC+C,EAAc,CAACE,MAAO1C,SAAY,QAAP,EAALA,EAAOE,GAAG,UAAE,WAAP,EAAL0C,EAAcC,OAEvCpD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAAC+C,EAAc,CAACE,MAAO1C,SAAY,QAAP,EAALA,EAAOE,GAAG,UAAE,WAAP,EAAL4C,EAAcD,QAGzCpD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,kBACbD,EAAAA,cAACE,EAAc,CAACQ,MAAO,EAAGN,WAAYD,IACtCH,EAAAA,cAACE,EAAc,CAACQ,MAAO,EAAGN,WAAYD,KAEpC,C,oIC/DV,MAAMmD,EAAuB,CAC3B,IAAK,MACL,IAAK,OACL,IAAK,KACL,IAAK,OACL,IAAK,OACL,IAAK,QA6GP,UA1GA,SAAenD,GAAc,kBAE3B,MAAMoD,GAAQC,EAAAA,EAAAA,cACR,EAACC,EAAY,EAAEC,IAAmBC,EAAAA,EAAAA,WAAS,GAC3CC,EAAwB,QAAhB,EAAGzD,EAAM0D,eAAO,OAAO,QAAP,EAAbC,EAAevD,aAAK,WAAP,EAAbwD,EACbC,SAASjD,IAAI,aACI,QADJ,EACbA,EAAKH,oBAAY,aAAjBqD,EAAmBC,MAAMnD,GAASA,EAAKI,eAAiBoC,EAAMY,MAAK,IAEpEC,QAAQrD,GAAiB,MAARA,IAAc,GAE5BsD,EAAwB,QAAhB,EAAGlE,EAAM0D,eAAO,OAAO,QAAP,EAAbS,EAAe/D,aAAK,WAAP,EAAbgE,EAAsBL,MACpCM,GAASA,EAAKC,UAAWb,aAAQ,EAARA,EAAUa,UAEhCC,EAAe,IAAIC,KAA+C,KAA5B,QAAd,EAACxE,EAAM0D,eAAO,aAAbe,EAAeF,eAExCzB,EAAQoB,aAAQ,EAARA,EAAUjB,IAExB,OACEpD,EAAAA,cAAAA,MAAAA,CACEC,WACEgD,EACI,uCACA,sCAAoC,6BAG1CjD,EAAAA,cAAAA,MAAAA,CAAKC,UAAS,uDACZD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,+CACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qBACZqD,EAAuB,QAAd,EAACnD,EAAM0D,eAAO,aAAbgB,EAAeC,UAE5B9E,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACZyE,EAAaK,aAAa,KAAGL,EAAaM,aAAa,MAG5DhF,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qBAAqBgD,EAAQ,KAAO,QAGvDjD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2BACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAACiF,EAAAA,QAAQ,CACPC,KAAMC,EAAAA,SAAAA,MACNC,IAAG,gEAAiExB,aAAQ,EAARA,EAAUtC,cAAY,SAS5FtB,EAAAA,cAACqF,EAAAA,QAAa,CACZC,OAAQ1B,aAAQ,EAARA,EAAU2B,YAClBC,OAAQ5B,aAAQ,EAARA,EAAU6B,eAGtBzF,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0BACbD,EAAAA,cAAC0F,EAAAA,QAAY,CAAC3E,KAAM6C,MAIxB5D,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAC2F,EAAAA,QAAU,CAAC5E,KAAM6C,EAAUvD,MAAOF,EAAM0D,UACzC7D,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6BACZ2D,SAAgB,QAAR,EAARA,EAAUgC,cAAM,WAAR,EAARC,EAAkB/E,KAAKgF,GACtB9F,EAAAA,cAAC+F,EAAAA,QAAY,CACX9E,IAAQd,EAAM0D,QAAO,IAAIiC,EAAK3B,KAC9BpE,MAAO+F,EAAK3B,MAAQ,SAM5BnE,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAACgG,EAAAA,QAAU,CACT3F,MAAOF,EAAM0D,QACbM,KAAMP,aAAQ,EAARA,EAAUzC,aAChBD,MAAO0C,aAAQ,EAARA,EAAU1C,UAIvBlB,EAAAA,cAAAA,MAAAA,CACEC,UAAS,8DACPgD,EAAQ,cAAgB,cAAY,kBAEtCgD,QAAS,KACPvC,GAAgBD,EAA4B,GAG9CzD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eAAc,QAE/BD,EAAAA,cAAAA,MAAAA,CACEC,WACEwD,EAAe,UAAY,UAAQ,mCAGrCzD,EAAAA,cAACkG,EAAAA,QAAM,CACL7F,MAAOF,EAAM0D,QACbtC,qBAAsBqC,aAAQ,EAARA,EAAU1C,SAK1C,C,4CC/BA,SAASiF,IACP,OAAOnG,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2CAA0C,IAClE,CAEA,UA/FA,SAAoBE,GAAc,0CAChC,MAAM,EAACiG,EAAS,EAAEC,IAAgB1C,EAAAA,EAAAA,WAAS,GAErC2C,EAAsB,QAAd,EAAGnG,EAAME,aAAK,OAAO,QAAP,EAAX6C,EAAa3C,aAAK,WAAP,EAAXgG,EAAoBrC,MAClCM,IAAI,aAAKA,EAAKC,UAAqB,QAAf,EAAKtE,EAAMY,YAAI,aAAVyF,EAAY/B,OAAM,IAG9C,OACEzE,EAAAA,cAAAA,MAAAA,CACEC,UAAU,sDACVgG,QAAS,KACPI,GAAcD,EAAU,GAG1BpG,EAAAA,cAAAA,QAAAA,CAAOC,UAAU,iBACfD,EAAAA,cAAAA,QAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,WACZD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,QAAO,KACrBD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,qBAAoB,MAClCD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,QAAO,QACrBD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,QACwB,aAAzB,QAAV,EAAAE,EAAMY,YAAI,aAAV0F,EAAY7D,oBAAmC,KAAO,QAI7D5C,EAAAA,cAAAA,QAAAA,KACEA,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,0BACZD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8BACF,QAAV,EAAAE,EAAMY,YAAI,aAAV2F,EAAYjF,QAAS,EACrB2E,GAAaD,MAGlBnG,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,gBACZD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8BACF,QAAV,EAAAE,EAAMY,YAAI,aAAV4F,EAAYjF,SAAU,EACtB0E,GAAaD,MAGlBnG,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8BACF,QAAV,EAAAE,EAAMY,YAAI,aAAV6F,EAAYjF,UAAW,EACvByE,GAAaD,MAGlBnG,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6BACuB,aAAzB,QAAV,EAAAE,EAAMY,YAAI,aAAV8F,EAAYjE,oBACTzC,EAAMY,KAAKc,aACA,QAAX,EAAC1B,EAAMY,YAAI,aAAV+F,EAAY/E,qBACA,QADkB,EAC5B5B,EAAMY,YAAI,aAAVgG,EAAY9E,uBAAmC,EACrDmE,GAAaD,OAIpBnG,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,WACZD,EAAAA,cAAAA,KAAAA,CAAIgH,QAAS,GACXhH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6BACbD,EAAAA,cAAAA,MAAAA,KAAAA,SACc,QAAX,EAACG,EAAMY,YAAI,aAAVkG,EAAYxF,QACD,QADM,EAChBtB,EAAMY,YAAI,aAAVmG,EAAYvF,WACJ,QADsB,EAChCxB,EAAMY,YAAI,aAAVoG,EAAYzF,SACb0F,QAAQ,IACVpH,EAAAA,cAAAA,MAAAA,KAAAA,0BAEIqH,KAAKC,QACQ,QAAX,EAACnH,EAAMY,YAAI,aAAVwG,EAAY9F,QACF,QADO,EACjBtB,EAAMY,YAAI,aAAVyG,EAAY7F,WACZ2E,SAAoB,QAAZ,EAARA,EAAUmB,kBAAU,OAAU,QAAV,EAApBC,EAAsBC,gBAAQ,WAAtB,EAARC,EAAgCnG,OACjC,KACH,OAIPzB,EAAAA,cAAAA,KAAAA,QAEgB,QAAX,EAACG,EAAMY,YAAI,aAAV8G,EAAY9F,qBACD,QADmB,EAC7B5B,EAAMY,YAAI,aAAV+G,EAAY7F,uBACf,IAAI0C,KACsC,KAA5B,QAAZ,EAACxE,EAAME,aAAK,aAAX0H,EAAarD,eACdK,cACFqC,QAAQ,GAAG,SAQ3B,C,4CC7DA,UAlCA,SAAsB,GAA6C,IAA7C,KAAErG,GAAyC,EAC/D,MAAMiH,EAAgB,CACpBjH,aAAI,EAAJA,EAAMqB,MACNrB,aAAI,EAAJA,EAAMsB,MACNtB,aAAI,EAAJA,EAAMuB,MACNvB,aAAI,EAAJA,EAAM2B,MACN3B,aAAI,EAAJA,EAAMwB,MACNxB,aAAI,EAAJA,EAAMyB,MACNzB,aAAI,EAAJA,EAAM0B,OAGR,OACEzC,EAAAA,cAAAA,EAAAA,SAAAA,KACGgI,EAAclH,KAAI,CAACmH,EAAUvH,IAC5BuH,EAAW,EACTjI,EAAAA,cAAAA,MAAAA,CACEiB,IAAKP,EACLT,UAAU,yCACViI,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChChD,IAAG,2DAA6D6C,EAAQ,OACxEI,IAAI,SAGNrI,EAAAA,cAAAA,MAAAA,CACEiB,IAAKP,EACLwH,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCnI,UAAU,6CAMtB,C,4CCVA,UAnBA,SAAuBE,GACrB,OACEH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,sCACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,4DACbD,EAAAA,cAAAA,MAAAA,CACEoF,IAAG,4DAA8DjF,EAAMmF,OAAM,OAC7E+C,IAAI,UAGRrI,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,4DACbD,EAAAA,cAAAA,MAAAA,CACEoF,IAAG,4DAA8DjF,EAAMqF,OAAM,OAC7E6C,IAAI,UAKd,C,4CCKA,UArBA,SAAkBlI,GAEhB,OACEH,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uCACbD,EAAAA,cAAAA,MAAAA,CACEC,WACEE,EAAMmI,MAAQnI,EAAMmI,MAAQ,cAAY,oBAE1CJ,MAAO,CACLC,MACEhI,EAAMoI,MAAQ,GACM,IAAhBpI,EAAMoI,MACJpI,EAAMoI,MACN,EACFpI,EAAMoI,MAAQ,OAK9B,C,0ECmGA,UAzFyBpI,IAAwB,8BAC/C,MAAMqI,EAAgBrI,EAAMoB,uBAAyBpB,EAAM+B,cAErDC,EAAQ,CACZhC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAALsG,EAAcrG,MACdjC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAALuG,EAAcrG,MACdlC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAALwG,EAAcrG,MACdnC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAALyG,EAAclG,MACdvC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAAL0G,EAActG,MACdpC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAAL2G,EAActG,MACdrC,SAAY,QAAP,EAALA,EAAOgC,aAAK,WAAP,EAAL4G,EAActG,OAGhB,OACEzC,EAAAA,cAAAA,MAAAA,CACEC,UAAS,iCACPuI,EAAgB,yBAA2B,KAG7CxI,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iEACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8BACbD,EAAAA,cAACiF,EAAAA,QAAQ,CACPG,IAAG,+DAAiEjF,EAAMmB,aAAY,OACtF4D,KAAMC,EAAAA,SAAAA,UAGVnF,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qCAAoC,OAC5CE,EAAMiB,eAEbpB,EAAAA,cAAAA,MAAAA,CACEC,UAAS,YACPuI,EAAgB,YAAc,IAAE,yDAGjCrI,EAAMgB,cAETnB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qBACZ+I,EAAAA,EAAAA,GAAsB7I,EAAM0C,aAAc1C,EAAM2C,gBAGrD9C,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,2BACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBAAsB,OACrCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,0CACZE,SAAY,QAAP,EAALA,EAAOqB,aAAK,WAAP,EAALyH,EAAcxH,MAAM,MAAItB,SAAY,QAAP,EAALA,EAAOqB,aAAK,WAAP,EAAL0H,EAAcxH,OAAO,KAAG,IAChDvB,SAAY,QAAP,EAALA,EAAOqB,aAAK,WAAP,EAAL2H,EAAcxH,UAGnB3B,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,wCACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACO,YAAnBE,EAAMwC,SAAyB,KAAO,MAEzC3C,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,qBACO,YAAnBE,EAAMwC,SACQ,QADc,EACzBxC,EAAMqB,aAAK,aAAX4H,EAAaxH,WACF,QAAX,EAAAzB,EAAMqB,aAAK,aAAX6H,EAAavH,mBACF,QADkB,EAC7B3B,EAAMqB,aAAK,aAAX8H,EAAatH,uBAGrBhC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBAAsB,MACrCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,8BACbD,EAAAA,cAACuJ,EAAAA,QAAQ,CAACC,IAAK,IAAKjB,MAAO,OAG/BvI,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,oDACZkC,EAAMrB,KAAI,CAACmH,EAAUvH,IACpBuH,EAAW,EACTjI,EAAAA,cAAAA,MAAAA,CACEiB,IAAKP,EACLwH,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCnI,UAAU,yCACVmF,IAAG,2DAA6D6C,EAAQ,OACxEI,IAAI,SAGNrI,EAAAA,cAAAA,MAAAA,CACEiB,IAAKP,EACLwH,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCnI,UAAU,+CAMhB,C,uBCrHK,SAAS+I,EACtBS,EACAC,GAEA,IAAIC,EAAQ,IACRC,EAAQ,GAEZ,OAAQH,GACN,KAAK,EACHE,EAAQ,MACR,MACF,KAAK,EACHA,EAAQ,MACR,MACF,KAAK,EACHA,EAAQ,KACR,MACF,KAAK,EACHA,EAAQ,KACR,MACF,KAAK,EACHA,EAAQ,OACR,MACF,KAAK,EACHA,EAAQ,QACR,MACF,KAAK,EACHA,EAAQ,MACR,MACF,KAAK,EACHA,EAAQ,SACR,MACF,KAAK,EACHA,EAAQ,MAIZ,OAAQD,GACN,KAAK,EAEH,OADAE,EAAQ,IACAH,GACN,KAAK,EAGL,KAAK,EAGL,KAAK,EACHG,EAAQ,GAGZ,MACF,KAAK,EACL,KAAK,EACL,KAAK,EACHA,EAAQF,EAAKG,WAGjB,OAAUF,EAAK,IAAIC,CACrB,C","sources":["webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/AchieveBadge.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/Detail.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/Match.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/ScoreBoard.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/UserItemList.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/UserSpellList.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/detail/Gaugebar.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/detail/SummonerSummary.tsx","webpack://portfolio/./src/tools/generator/rank.ts"],"sourcesContent":["import React from \"react\";\n\nfunction AchieveBadge({ title }: { title: string }) {\n  return (\n    <div className=\"px-2 py-1 bg-slate-700 rounded-2xl text-[10px] w-fit text-gray-300\">\n      {title}\n    </div>\n  );\n}\nexport default AchieveBadge;\n","import React from \"react\";\nimport MatchEntity from \"../../../../../../../../../../model/match-entity\";\nimport \"./Detail.css\";\nimport SummonerSummary from \"./detail/SummonerSummary\";\n\ninterface DetailData {\n  match: MatchEntity;\n  currentSummonerPuuid: string;\n}\n\ninterface TeamData {\n  detailData: DetailData;\n  index: number;\n}\n\nconst DetailTeamView = (props: TeamData) => {\n  return (\n    <div className=\"flex-grow\">\n      {props.detailData.match?.teams\n        ?.at(props.index)\n        ?.participants?.map((user) => (\n          <SummonerSummary\n            key={`DetailTeamView_${user.puuid}`}\n            summonerName={user.summonerName}\n            championLevel={user.champLevel}\n            championName={user.championName}\n            currentSummonerPuuid={props.detailData.currentSummonerPuuid}\n            score={{\n              kills: user.kills as number,\n              deaths: user.deaths as number,\n              assists: user.assists as number,\n              wardPlace: user.wardsPlaced as number,\n              totalMinionKills: user.totalMinionsKilled as number,\n              neutralMinionsKills: user.neutralMinionsKilled as number,\n            }}\n            summonerPuuid={user.puuid as string}\n            items={{\n              item0: user.item0 as number,\n              item1: user.item1 as number,\n              item2: user.item2 as number,\n              item3: user.item3 as number,\n              item4: user.item4 as number,\n              item5: user.item5 as number,\n              item6: user.item6 as number,\n            }}\n            position={user.individualPosition as string}\n            summonerTier={1}\n            summonerRank={1}\n          />\n        ))}\n    </div>\n  );\n};\n\nconst GameResultText = ({ isWin }: { isWin: boolean }) => {\n  return (\n    <div\n      className={`ml-2 font-bold text-lg ${\n        isWin ? \"text-blue-500\" : \"text-red-500\"\n      } `}\n    >\n      {isWin ? \"승리\" : \"패배\"}\n    </div>\n  );\n};\n\nconst Detail = (props: DetailData) => {\n  const teams = props.match?.teams;\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex px-2\">\n        <div className=\"flex flex-col flex-grow\">\n          <GameResultText isWin={teams?.at(0)?.win as boolean} />\n        </div>\n        <div className=\"flex-grow\">\n          <GameResultText isWin={teams?.at(1)?.win as boolean} />\n        </div>\n      </div>\n      <div className=\"flex gap-2 p-2\">\n        <DetailTeamView index={0} detailData={props} />\n        <DetailTeamView index={1} detailData={props} />\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { useState } from \"react\";\nimport AchieveBadge from \"./AchieveBadge\";\nimport UserSpellList from \"./UserSpellList\";\nimport Champion, { SizeType } from \"../../../champion-image/Champion\";\nimport PlayerList from \"./PlayerList\";\nimport Detail from \"./Detail\";\nimport UserItemList from \"./UserItemList\";\nimport { useParams } from \"@reach/router\";\nimport ScoreBoard from \"./ScoreBoard\";\nimport MatchEntity from \"../../../../../../../../../../model/match-entity\";\n\ninterface Props {\n  matchId: MatchEntity;\n}\n\ninterface MatchType {\n  [key: number]: string;\n}\n\nconst matchType: MatchType = {\n  450: \"칼바람\",\n  420: \"솔로랭크\",\n  430: \"일반\",\n  440: \"자유랭크\",\n  840: \"초급 봇\",\n  850: \"중급 봇\",\n};\n\nfunction Match(props: Props) {\n  // const name = useAppSelector((state) => state.name.value);\n  const param = useParams();\n  const [detailToggle, setDetailToggle] = useState(false);\n  const userData = props.matchId?.teams\n    ?.flatMap((user) =>\n      user.participants?.find((user) => user.summonerName === param.name)\n    )\n    .filter((user) => user != null)[0];\n\n  const teamData = props.matchId?.teams?.find(\n    (team) => team.teamId === userData?.teamId\n  );\n  const gameDuration = new Date((props.matchId?.gameDuration as number) * 1000);\n\n  const isWin = teamData?.win;\n\n  return (\n    <div\n      className={`${\n        isWin\n          ? \"bg-blue-200 border-2 border-blue-400\"\n          : \"bg-red-200 border-2 border-red-400\"\n      } rounded-md min-h-[120px]`}\n    >\n      <div className={`flex flex-grow gap-10 text-center items-center py-1`}>\n        <div className=\"ml-5 flex flex-col gap-3 text-gray-700 w-16\">\n          <div className=\"flex flex-col gap-1\">\n            <div className=\"font-bold text-sm\">\n              {matchType[props.matchId?.queueId as unknown as number]}\n            </div>\n            <div className=\"text-xs\">\n              {gameDuration.getMinutes()}분 {gameDuration.getSeconds()}초\n            </div>\n          </div>\n          <div>\n            <div className=\"font-bold text-sm\">{isWin ? \"승리\" : \"패배\"}</div>\n          </div>\n        </div>\n        <div className=\"flex gap-3 items-center\">\n          <div className=\"flex gap-2\">\n            <Champion\n              size={SizeType.Large}\n              src={`http://ddragon.leagueoflegends.com/cdn/12.14.1/img/champion/${userData?.championName}.png`}\n            />\n            {/* <div className=\"flex w-[70px] h-[70px] rounded-2xl overflow-hidden items-center\">\n            <img\n              className=\"w-[80px] h-[80px] object-cover\"\n              src=\n              alt=\"\"\n            />\n          </div> */}\n            <UserSpellList\n              spell1={userData?.summoner1Id}\n              spell2={userData?.summoner2Id}\n            />\n          </div>\n          <div className=\"grid grid-cols-4 gap-1\">\n            <UserItemList user={userData} />\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <ScoreBoard user={userData} match={props.matchId} />\n          <div className=\"flex gap-1 justify-center\">\n            {userData?.badges?.map((data) => (\n              <AchieveBadge\n                key={`${props.matchId}/${data.name}`}\n                title={data.name || \"\"}\n              />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"flex gap-5\">\n          <PlayerList\n            match={props.matchId}\n            name={userData?.summonerName}\n            puuid={userData?.puuid}\n          />\n        </div>\n      </div>\n      <div\n        className={`flex text-xs mb-2 mt-1 mx-2 justify-center p-1 rounded-md ${\n          isWin ? \"bg-blue-300\" : \"bg-red-300\"\n        } cursor-pointer`}\n        onClick={() => {\n          setDetailToggle(detailToggle ? false : true);\n        }}\n      >\n        <div className=\"select-none\">자세히</div>\n      </div>\n      <div\n        className={`${\n          detailToggle ? \"visible\" : \"hidden\"\n        } p-2 m-2 bg-gray-100 rounded-md`}\n      >\n        <Detail\n          match={props.matchId}\n          currentSummonerPuuid={userData?.puuid as string}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Match;\n","import React, { useState } from \"react\";\nimport MatchEntity, {\n  Participant,\n} from \"../../../../../../../../../../model/match-entity\";\n\ninterface Props {\n  user: Participant | undefined;\n  match: MatchEntity | undefined;\n}\n\nfunction ScoreBoard(props: Props) {\n  const [scoreRank, setScoreRank] = useState(false);\n  // const teamInfo = props.match?.teams\n  const teamInfo = props.match?.teams?.find(\n    (team) => team.teamId === props.user?.teamId\n  );\n\n  return (\n    <div\n      className=\"flex justify-center cursor-pointer select-none w-72\"\n      onClick={() => {\n        setScoreRank(!scoreRank);\n      }}\n    >\n      <table className=\"text-gray-600\">\n        <thead>\n          <tr className=\"text-xs\">\n            <th className=\"w-16\">킬</th>\n            <th className=\"w-16 text-red-600\">데스</th>\n            <th className=\"w-16\">어시스트</th>\n            <th className=\"w-16\">\n              {props.user?.individualPosition === \"UTILITY\" ? \"와드\" : \"CS\"}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className=\"text-xl font-extrabold\">\n            <td>\n              <div className=\"flex gap-1 justify-center\">\n                {props.user?.kills || 0}\n                {scoreRank && Rank()}\n              </div>\n            </td>\n            <td className=\"text-red-600\">\n              <div className=\"flex gap-1 justify-center\">\n                {props.user?.deaths || 0}\n                {scoreRank && Rank()}\n              </div>\n            </td>\n            <td>\n              <div className=\"flex gap-1 justify-center\">\n                {props.user?.assists || 0}\n                {scoreRank && Rank()}\n              </div>\n            </td>\n            <td>\n              <div className=\"flex gap-1 justify-center\">\n                {props.user?.individualPosition === \"UTILITY\"\n                  ? props.user.wardsPlaced\n                  : (props.user?.totalMinionsKilled as number) +\n                      (props.user?.neutralMinionsKilled as number) || 0}\n                {scoreRank && Rank()}\n              </div>\n            </td>\n          </tr>\n          <tr className=\"text-xs\">\n            <td colSpan={3}>\n              <div className=\"flex gap-3 justify-center\">\n                <div>{`평점 ${(\n                  ((props.user?.kills as number) +\n                    (props.user?.assists as number)) /\n                  (props.user?.deaths as number)\n                ).toFixed(2)}`}</div>\n                <div>\n                  {`킬관여\n                  ${Math.round(\n                    (((props.user?.kills as number) +\n                      (props.user?.assists as number)) /\n                      (teamInfo?.objectives?.champion?.kills as number)) *\n                      100\n                  )}%`}\n                </div>\n              </div>\n            </td>\n            <td>\n              {(\n                ((props.user?.totalMinionsKilled as number) +\n                  (props.user?.neutralMinionsKilled as number)) /\n                new Date(\n                  (props.match?.gameDuration as number) * 1000\n                ).getMinutes()\n              ).toFixed(2)}\n              /분\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction Rank() {\n  return <div className=\"text-xs font-semibold self-end mb-[4px]\">등</div>;\n}\n\nexport default ScoreBoard;\n","import React from \"react\";\nimport { Participant } from \"../../../../../../../../../../model/match-entity\";\n// import { ParticipantEntity } from \"../../../../../../models/POTG-Summoner\";\n\nfunction UserItemList({ user }: { user: Participant | undefined }) {\n  const userItemCodes = [\n    user?.item0,\n    user?.item1,\n    user?.item2,\n    user?.item6,\n    user?.item3,\n    user?.item4,\n    user?.item5,\n  ] as number[];\n\n  return (\n    <>\n      {userItemCodes.map((itemCode, index) =>\n        itemCode > 0 ? (\n          <img\n            key={index}\n            className=\"bg-gray-200 rounded-md overflow-hidden\"\n            style={{ width: \"30px\", height: \"30px\" }}\n            src={`http://ddragon.leagueoflegends.com/cdn/12.15.1/img/item/${itemCode}.png`}\n            alt=\"item\"\n          />\n        ) : (\n          <div\n            key={index}\n            style={{ width: \"30px\", height: \"30px\" }}\n            className=\"bg-gray-200 rounded-md overflow-hidden\"\n          />\n        )\n      )}\n    </>\n  );\n}\n\nexport default UserItemList;\n","import React from \"react\";\n\ninterface Props {\n  spell1: string | null | undefined;\n  spell2: string | null | undefined;\n}\n\nfunction UserSpellList(props: Props) {\n  return (\n    <div className=\"flex flex-col gap-1 justify-center\">\n      <div className=\"bg-gray-200 w-[30px] h-[30px] rounded-md overflow-hidden\">\n        <img\n          src={`http://ddragon.leagueoflegends.com/cdn/12.15.1/img/spell/${props.spell1}.png`}\n          alt=\"item\"\n        />\n      </div>\n      <div className=\"bg-gray-200 w-[30px] h-[30px] rounded-md overflow-hidden\">\n        <img\n          src={`http://ddragon.leagueoflegends.com/cdn/12.15.1/img/spell/${props.spell2}.png`}\n          alt=\"item\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default UserSpellList;\n","import React from \"react\";\n\nexport interface GaugebarData {\n  max: number;\n  value: number;\n  color?: string;\n}\n\nfunction Gaugebar(props: GaugebarData) {\n  // TODO: 컴포넌트 옮기기\n  return (\n    <div className=\"w-full bg-gray-300 rounded-full h-2\">\n      <div\n        className={`${\n          props.color ? props.color : \"bg-red-500\"\n        } h-2 rounded-full`}\n        style={{\n          width:\n            props.value < 10\n              ? props.value === 0\n                ? props.value\n                : 8\n              : props.value + `%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default Gaugebar;\n","import React from \"react\";\nimport getTierNumberToString from \"../../../../../../../../../../tools/generator/rank\";\nimport Champion, { SizeType } from \"../../../../champion-image/Champion\";\nimport Gaugebar from \"./Gaugebar\";\n\ninterface SummonerData {\n  summonerName: string | null | undefined;\n  championName: string | null | undefined;\n  championLevel: number | null | undefined;\n  score: ScoreData;\n  currentSummonerPuuid: string;\n  summonerPuuid: string;\n  items: ItemCodeData;\n  position: string;\n  summonerTier: number;\n  summonerRank: number;\n}\n\ninterface ScoreData {\n  kills: number;\n  deaths: number;\n  assists: number;\n  wardPlace: number;\n  totalMinionKills: number;\n  neutralMinionsKills: number;\n}\n\ninterface ItemCodeData {\n  item0: number;\n  item1: number;\n  item2: number;\n  item3: number;\n  item4: number;\n  item5: number;\n  item6: number;\n}\n\nconst SummonerSummary = (props: SummonerData) => {\n  const isCurrentUser = props.currentSummonerPuuid === props.summonerPuuid;\n\n  const items = [\n    props?.items?.item0,\n    props?.items?.item1,\n    props?.items?.item2,\n    props?.items?.item6,\n    props?.items?.item3,\n    props?.items?.item4,\n    props?.items?.item5,\n  ];\n\n  return (\n    <div\n      className={`flex gap-2 text-gray-700 p-2 ${\n        isCurrentUser ? \"rounded-lg bg-gray-200\" : \"\"\n      }`}\n    >\n      <div className=\"Detail--Profile gap-2 gap-x-3 grid grid-flow-col items-center\">\n        <div className=\"flex flex-col items-center\">\n          <Champion\n            src={`http://ddragon.leagueoflegends.com/cdn/12.14.1/img/champion/${props.championName}.png`}\n            size={SizeType.Detail}\n          />\n        </div>\n        <div className=\"text-[10px] font-bold text-center\">\n          LV. {props.championLevel}\n        </div>\n        <div\n          className={`text-sm ${\n            isCurrentUser ? \"font-bold\" : \"\"\n          } w-24 text-ellipsis overflow-hidden whitespace-nowrap`}\n        >\n          {props.summonerName}\n        </div>\n        <div className=\"text-[10px] w-24\">\n          {getTierNumberToString(props.summonerTier, props.summonerRank)}\n        </div>\n      </div>\n      <div className=\"flex items-center gap-7\">\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"text-xs text-center\">KDA</div>\n          <div className=\"font-semibold h-6 w-[90px] text-center\">\n            {props?.score?.kills} / {props?.score?.deaths} /{\" \"}\n            {props?.score?.assists}\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-1 w-7 items-center\">\n          <div className=\"text-xs text-center\">\n            {props.position === \"UTILITY\" ? \"와드\" : \"CS\"}\n          </div>\n          <div className=\"font-semibold h-6\">\n            {props.position === \"UTILITY\"\n              ? props.score?.wardPlace\n              : props.score?.totalMinionKills +\n                props.score?.neutralMinionsKills}\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"text-xs text-center\">피해</div>\n          <div className=\"flex w-14 h-6 items-center\">\n            <Gaugebar max={100} value={25} />\n          </div>\n        </div>\n        <div className=\"grid grid-flow-row grid-cols-4 grid-rows-2 gap-1\">\n          {items.map((itemCode, index) =>\n            itemCode > 0 ? (\n              <img\n                key={index}\n                style={{ width: \"24px\", height: \"24px\" }}\n                className=\"bg-gray-200 rounded-md overflow-hidden\"\n                src={`http://ddragon.leagueoflegends.com/cdn/12.15.1/img/item/${itemCode}.png`}\n                alt=\"item\"\n              />\n            ) : (\n              <div\n                key={index}\n                style={{ width: \"24px\", height: \"24px\" }}\n                className=\"bg-gray-300 rounded-md overflow-hidden\"\n              />\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SummonerSummary;\n","/**\n * api로 받은 숫자의 데이터를 문자열로 바꿔준다.\n * @param {number} rank api로 받은 rank의 숫자\n * @returns {string} 숫자로 받은 tier를 문자열로 변환(0->아이언)\n */\nexport default function getTierNumberToString(\n  tier: number,\n  rank: number\n): string {\n  var _tier = \"-\";\n  var _rank = \"\";\n\n  switch (tier) {\n    case 0:\n      _tier = \"아이언\";\n      break;\n    case 1:\n      _tier = \"브론즈\";\n      break;\n    case 2:\n      _tier = \"실버\";\n      break;\n    case 3:\n      _tier = \"골드\";\n      break;\n    case 4:\n      _tier = \"플래티넘\";\n      break;\n    case 5:\n      _tier = \"다이아몬드\";\n      break;\n    case 6:\n      _tier = \"마스터\";\n      break;\n    case 7:\n      _tier = \"그랜드마스터\";\n      break;\n    case 8:\n      _tier = \"챌린저\";\n      break;\n  }\n\n  switch (rank) {\n    case 1:\n      _rank = \"1\";\n      switch (tier) {\n        case 6:\n          _rank = \"\";\n          break;\n        case 7:\n          _rank = \"\";\n          break;\n        case 8:\n          _rank = \"\";\n          break;\n      }\n      break;\n    case 2:\n    case 3:\n    case 4:\n      _rank = rank.toString();\n      break;\n  }\n  return `${_tier} ${_rank}`;\n}\n"],"names":["title","React","className","DetailTeamView","props","detailData","match","_props$detailData$mat","teams","_props$detailData$mat2","at","index","_props$detailData$mat3","participants","_props$detailData$mat4","map","user","SummonerSummary","key","puuid","summonerName","championLevel","champLevel","championName","currentSummonerPuuid","score","kills","deaths","assists","wardPlace","wardsPlaced","totalMinionKills","totalMinionsKilled","neutralMinionsKills","neutralMinionsKilled","summonerPuuid","items","item0","item1","item2","item3","item4","item5","item6","position","individualPosition","summonerTier","summonerRank","GameResultText","_ref","isWin","_props$match","_teams$at","win","_teams$at2","matchType","param","useParams","detailToggle","setDetailToggle","useState","userData","matchId","_props$matchId","_props$matchId$teams","flatMap","_user$participants","find","name","filter","teamData","_props$matchId2","_props$matchId2$teams","team","teamId","gameDuration","Date","_props$matchId3","_props$matchId4","queueId","getMinutes","getSeconds","Champion","size","SizeType","src","UserSpellList","spell1","summoner1Id","spell2","summoner2Id","UserItemList","ScoreBoard","badges","_userData$badges","data","AchieveBadge","PlayerList","onClick","Detail","Rank","scoreRank","setScoreRank","teamInfo","_props$match$teams","_props$user","_props$user2","_props$user3","_props$user4","_props$user5","_props$user6","_props$user7","_props$user8","colSpan","_props$user9","_props$user10","_props$user11","toFixed","Math","round","_props$user12","_props$user13","objectives","_teamInfo$objectives","champion","_teamInfo$objectives$","_props$user14","_props$user15","_props$match2","userItemCodes","itemCode","style","width","height","alt","color","value","isCurrentUser","_props$items","_props$items2","_props$items3","_props$items4","_props$items5","_props$items6","_props$items7","getTierNumberToString","_props$score","_props$score2","_props$score3","_props$score4","_props$score5","_props$score6","Gaugebar","max","tier","rank","_tier","_rank","toString"],"sourceRoot":""}