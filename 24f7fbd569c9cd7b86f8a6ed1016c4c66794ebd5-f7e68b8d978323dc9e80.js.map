{"version":3,"file":"24f7fbd569c9cd7b86f8a6ed1016c4c66794ebd5-f7e68b8d978323dc9e80.js","mappings":"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","sources":["webpack://volunteer/./node_modules/react-apple-emojis/dist/DataContext.js","webpack://volunteer/./node_modules/react-apple-emojis/dist/EmojiProvider.js","webpack://volunteer/./node_modules/react-apple-emojis/dist/Emoji.js","webpack://volunteer/./src/components/Home/CharacterCard.tsx","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/animation-controls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/use-animation.mjs","webpack://volunteer/./src/components/Home/Introduce.tsx","webpack://volunteer/./src/images/logo/instagram.png","webpack://volunteer/./src/images/logo/line.png","webpack://volunteer/./src/components/Home/Contact.tsx","webpack://volunteer/./src/components/Home/Activity.tsx","webpack://volunteer/./src/pages/Home.tsx","webpack://volunteer/./node_modules/hey-listen/dist/hey-listen.es.js","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/warn-once.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://volunteer/./node_modules/framesync/dist/es/on-next-frame.mjs","webpack://volunteer/./node_modules/framesync/dist/es/index.mjs","webpack://volunteer/./node_modules/framesync/dist/es/create-render-step.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/hex.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/hsla.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/rgba.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/utils.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/complex/filter.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/complex/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/numbers/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/numbers/units.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/utils.mjs"],"sourcesContent":["import { createContext } from 'react';\nexport default createContext({});\n//# sourceMappingURL=DataContext.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport PropTypes from 'prop-types';\nimport DataContext from './DataContext';\nfunction EmojiProvider({ data, children }) {\n    if (!data) {\n        throw new Error('Please pass a data value to EmojiProvider');\n    }\n    return (_jsx(DataContext.Provider, Object.assign({ value: data }, { children: children })));\n}\nEmojiProvider.propTypes = {\n    data: PropTypes.object.isRequired,\n};\nexport default EmojiProvider;\n//# sourceMappingURL=EmojiProvider.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport DataContext from './DataContext';\nfunction Emoji(_a) {\n    var { name } = _a, props = __rest(_a, [\"name\"]);\n    const data = useContext(DataContext);\n    const url = data[name];\n    if (!url) {\n        console.warn(`Emoji ${name}'s URL could not be found.`);\n    }\n    return (_jsx(\"img\", Object.assign({ src: url, alt: name, \"aria-label\": name }, props)));\n}\nEmoji.propTypes = {\n    name: propTypes.string.isRequired,\n};\nexport default Emoji;\n//# sourceMappingURL=Emoji.js.map","import React, { useState } from \"react\";\nimport { Emoji, EmojiProvider } from \"react-apple-emojis\";\nimport emojiData from \"react-apple-emojis/src/data.json\";\nimport { motion } from \"framer-motion\";\n\ninterface CharacterCardData {\n  color: string;\n  title: string;\n  content: JSX.Element;\n  icon: string;\n  fontSize?: string;\n}\n\nfunction CharacterCard(props: CharacterCardData) {\n  let [tapped, setTapped] = useState(false);\n\n  return (\n    <motion.div\n      className={`flex flex-col select-none cursor-pointer gap-2 items-center justify-center rounded-[20px] shadow-round w-[350px] h-[200px] ${props.color}`}\n      whileHover={{\n        scale: 1.05,\n      }}\n      whileTap={{\n        scale: 1.02,\n      }}\n      onTap={() => {\n        setTapped(!tapped);\n      }}\n      animate={{\n        height: tapped ? 450 : 200,\n      }}\n      transition={{\n        duration: 0.15,\n        ease: \"easeOut\",\n      }}\n    >\n      <motion.div\n        className=\"flex flex-col gap-2 items-center\"\n        animate={{ opacity: tapped ? 0 : 1 }}\n        transition={{ duration: 0.1 }}\n      >\n        <div>\n          <EmojiProvider data={emojiData}>\n            <Emoji name={props.icon} width={45} />\n          </EmojiProvider>\n        </div>\n        <div className={`text-white font-bold ${props.fontSize}`}>\n          {props.title}\n        </div>\n      </motion.div>\n      <motion.div\n        className={`absolute ${\n          tapped ? \"visible\" : \"collapse\"\n        } text-lg text-white`}\n        animate={{ opacity: tapped ? 1 : 0 }}\n        transition={{ duration: 0.1 }}\n      >\n        {props.content}\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport default CharacterCard;\n","import { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    const pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                const animations = [];\n                subscribers.forEach((visualElement) => {\n                    animations.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride,\n                    }));\n                });\n                return Promise.all(animations);\n            }\n            else {\n                return new Promise((resolve) => {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve,\n                    });\n                });\n            }\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            pendingAnimations.forEach(({ animation, resolve }) => {\n                controls.start(...animation).then(resolve);\n            });\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import React from \"react\";\nimport { motion, useAnimationControls } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport Introduce_Image from \"../../config/Introduce.json\";\nimport { useState } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nconst CarouselBanner = () => {\n  let q: Array<{ name: string; url: string }> = useStaticQuery(graphql`\n    query MyQuery {\n      allJson {\n        nodes {\n          name\n          url\n        }\n      }\n    }\n  `).allJson.nodes;\n\n  console.log(q);\n  // console.log(q.allJson.nodes);\n\n  // let imageList = Introduce_Image.data.map((data) => data.url);\n  let imageList = q.map((data) => data.url);\n\n  let [image1, setImage1] = useState(imageList[imageList.length - 1]);\n  let [image2, setImage2] = useState(imageList[0]);\n  let [image3, setImage3] = useState(imageList[1]);\n  let [image4, setImage4] = useState(imageList[2]);\n\n  const control1 = useAnimationControls();\n  const control2 = useAnimationControls();\n  const control3 = useAnimationControls();\n  const control4 = useAnimationControls();\n\n  let bannerIndex = 0;\n\n  useEffect(() => {\n    setInterval(() => {\n      control1.start({ height: 0, transition: { duration: 0.5 } }).then(() => {\n        control1.set({ height: 450 });\n        control2.set({ scale: 1 });\n        control3.set({ scale: 0.95 });\n        control4.set({ scale: 0.9 });\n\n        if (bannerIndex > imageList.length) bannerIndex = 0;\n        else bannerIndex++;\n\n        let trunk = imageList.shift();\n        imageList.push(trunk!);\n\n        setImage1(\n          bannerIndex === 0\n            ? imageList[imageList.length - 1]\n            : imageList[imageList.length - 1]\n        );\n        setImage2(imageList[0]);\n        setImage3(imageList[1]);\n        setImage4(imageList[2]);\n      });\n      control2.start({ scale: 0.95, transition: { duration: 0.5 } });\n      control3.start({ scale: 1, transition: { duration: 0.5 } });\n      control4.start({ scale: 0.95, transition: { duration: 0.5 } });\n    }, 5000);\n  }, []);\n\n  return (\n    <div>\n      <motion.div className=\"flex flex-col h-[520px] w-[850px] overflow-hidden\">\n        <div className=\"flex flex-col relative -top-[415px] left-5\">\n          <motion.img\n            style={{ scale: 0.95 }}\n            animate={control1}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image1}\n          />\n          <motion.img\n            animate={control2}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image2}\n          />\n          <motion.img\n            style={{ scale: 0.95 }}\n            animate={control3}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image3}\n          />\n          <motion.img\n            style={{ scale: 0.9 }}\n            animate={control4}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image4}\n          />\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nfunction Introduce({ className = \"\" }) {\n  return (\n    <div className={className + \" flex\"}>\n      <div className=\"flex\">\n        <CarouselBanner />\n      </div>\n      <div className=\"flex flex-col mt-[100px]\">\n        <div className=\"text-[40px] ml-[50px] mb-[35px]\">\n          <b> 「つながる場」 </b>をつくる\n        </div>\n        <div className=\"text-[20px] ml-[90px]\">\n          Community Labは、<b className=\"text-[#3CB3EC]\">現役大学生</b>\n          が子供たちに\n          <br />\n          様々な分野のイベントやコンテンツを提供する\n          <b className=\"text-[#3CB3EC]\">教育コミュニティ</b>\n          です。\n          <br />\n          <br />\n          ​年齢や学校の枠を越え\n          <br />\n          生涯に渡って交流する仲間と\n          <b className=\"text-[#3CB3EC]\"> 「つながる場」 </b>\n          をつくります。\n          <br />\n          <br />\n          <b className=\"text-[15px] text-[#3CB3EC]\">詳細はこちらへ！</b>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Introduce;\n","export default __webpack_public_path__ + \"static/instagram-0b600938fdc173438e1dbf8666beac85.png\";","export default __webpack_public_path__ + \"static/line-b69000864a64d0582728a3cbfc8d83a0.png\";","import React from \"react\";\nimport { motion, useInView } from \"framer-motion\";\nimport Instagram from \"../../images/logo/instagram.png\";\nimport Line from \"../../images/logo/line.png\";\nimport { Link } from \"gatsby\";\nimport config from \"../../../gatsby-config\";\n\nfunction Contact() {\n  return (\n    <div className=\"flex gap-10 justify-center\">\n      <Link to=\"https://www.instagram.com/communitylab_tus\" target={\"_blank\"}>\n        <motion.div\n          style={{ width: 80, height: 80 }}\n          whileHover={{ scale: 1.1 }}\n        >\n          <img src={Instagram} />\n        </motion.div>\n      </Link>\n\n      <Link to=\"https://page.line.me/?accountId=896hypqn\" target={\"_blank\"}>\n        <motion.div\n          style={{ width: 80, height: 80 }}\n          whileHover={{ scale: 1.1 }}\n        >\n          <img src={Line} />\n        </motion.div>\n      </Link>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nfunction Activity() {\n  return (\n    <div>\n      <motion.div\n        className=\"absolute bg-red-300 w-24 h-24\"\n        initial={{ opacity: 0, left: 0 }}\n        whileInView={{\n          scale: 2,\n          opacity: 1,\n          left: 100,\n          transition: { duration: 0.5, ease: \"backOut\" },\n        }}\n        viewport={{ once: true, amount: 1 }}\n      ></motion.div>\n    </div>\n  );\n}\n\nexport default Activity;\n","import React from \"react\";\nimport CharacterCard from \"../components/Home/CharacterCard\";\nimport Introduce from \"../components/Home/Introduce\";\nimport Contact from \"../components/Home/Contact\";\nimport Activity from \"../components/Home/Activity\";\n\ninterface CharacterCardContent {\n  color: string;\n  title: string;\n  icon: string;\n  fontSize: string;\n  content: JSX.Element;\n}\n\nconst IntroducePanel = () => {\n  return <Introduce className=\"m-[120px]\" />;\n};\n\nconst CharacterCardPanel = () => {\n  const contents: CharacterCardContent[] = [\n    {\n      color: \"bg-rose-400\",\n      title: \"専門性が高い\",\n      icon: \"flexed-biceps\",\n      fontSize: \"text-3xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          メンバーみんな、それぞれの大学で\n          <br />\n          専門分野を中心に学問を修め、\n          <b className=\"underline decoration-[3px] decoration-rose-500 decoration-wavy underline-offset-4\">\n            最先端の生きた技術や知識を勉強\n          </b>\n          しています。\n          <br />\n          <br />\n          ​そうして得た知識や技術、経験を\n          <b className=\"underline decoration-[3px] decoration-rose-500 decoration-wavy underline-offset-4\">\n            本質を損なうことなく分かりやすく\n          </b>\n          噛み砕いて\n          <b className=\"underline decoration-[3px] decoration-rose-500 decoration-wavy underline-offset-4\">\n            子どもたちの学びへと還元\n          </b>\n          します。\n        </div>\n      ),\n    },\n    {\n      color: \"bg-sky-400\",\n      title: \"多様なコンテンツ\",\n      icon: \"party-popper\",\n      fontSize: \"text-3xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          Community Labには現在20人以上\n          <br />\n          メンバーがいますが、\n          <br />\n          それぞれに違った専門分野や特技、\n          <br />\n          趣味があります。\n          <br />\n          <br />\n          多様な背景を持ち、異なる大学に通う\n          <br />\n          メンバーが集まっているからこそ、\n          <br />\n          その分\n          <b className=\"underline decoration-sky-500 decoration-[3px] decoration-wavy underline-offset-4\">\n            多様な学びや経験を子どもたちに\n            <br />\n            提供\n          </b>\n          することができます。\n        </div>\n      ),\n    },\n    {\n      color: \"bg-emerald-400\",\n      title: \"子ども達との距離が近い\",\n      icon: \"family-man-woman-girl-boy\",\n      fontSize: \"text-2xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          <p>\n            メンバーは全員\n            <b className=\"underline decoration-[3px] decoration-wavy decoration-emerald-500 underline-offset-4\">\n              現役大学生\n            </b>\n            なので、\n          </p>\n          <p>年齢的にも心理的にも</p>\n          <br />\n          <p>\n            <b className=\"underline decoration-[3px] decoration-wavy decoration-emerald-500 underline-offset-4\">\n              子どもたちとの距離が近く、\n              <br />\n              コミュニケーションを\n              <br />\n              取りやすい\n            </b>\n            のが強みです。\n          </p>\n          <br />\n          また年齢が近いからこそ、\n          <br />\n          子どもたちの\n          <br />\n          <p>\n            <b className=\"underline decoration-[3px] decoration-wavy decoration-emerald-500 underline-offset-4\">\n              理想像(ロールモデル)になれる\n            </b>\n            と\n          </p>\n          自負しています。\n        </div>\n      ),\n    },\n    {\n      color: \"bg-orange-400\",\n      title: \"主体性行動力\",\n      icon: \"man-running-light-skin-tone\",\n      fontSize: \"text-3xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          Community Labでは\n          <br />\n          活動理念に共感したメンバーが、\n          <br />\n          時間や熱意を捧げて\n          <b className=\"underline decoration-orange-500 decoration-[3px] decoration-wavy underline-offset-4\">\n            主体的にこの\n            <br />\n            活動に取り組んでいます。\n          </b>\n          <br />\n          <br />\n          また社会人と比べて多くの\n          <br />\n          時間があるため、\n          <br />\n          学びのチャンスがあれば\n          <br />\n          <b className=\"underline decoration-orange-500 decoration-[3px] decoration-wavy underline-offset-4\">\n            積極的にアクションを\n            <br />\n            起こす行動力があります。\n          </b>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-col items-center gap-10\">\n      <div className=\"flex flex-row gap-2\">\n        <p className=\"text-4xl\">\n          <b className=\"underline decoration-pink-500 decoration-4 underline-offset-4 decoration-wavy\">\n            大学生\n          </b>\n          だから届けられる価値\n        </p>\n        {/* <EmojiProvider data={emojiData}>\n          <Emoji name=\"person-raising-hand\" width={48} />\n        </EmojiProvider> */}\n      </div>\n      <div className={`flex flex-row justify-center gap-7`}>\n        {contents.map((content) => (\n          <CharacterCard\n            color={content.color}\n            title={content.title}\n            icon={content.icon}\n            fontSize={content.fontSize}\n            content={content.content}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ContactPanel = () => {\n  return (\n    <div className=\"flex flex-col py-14 px-36 items-center gap-12 rounded-3xl bg-slate-300\">\n      <div className=\"text-3xl\">各種SNS・お問い合わせ</div>\n      <Contact />\n    </div>\n  );\n};\n\nfunction Home() {\n  return (\n    <div className=\"flex flex-col gap-44\">\n      <IntroducePanel />\n      <CharacterCardPanel />\n      <Activity />\n      <div className=\"flex justify-center\">\n        <ContactPanel />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["createContext","EmojiProvider","data","children","Error","DataContext","Provider","Object","assign","value","propTypes","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Emoji","_a","name","props","url","useContext","console","warn","src","alt","tapped","setTapped","useState","React","motion","className","color","whileHover","scale","whileTap","onTap","animate","height","transition","duration","ease","opacity","emojiData","icon","width","fontSize","title","content","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations","forEach","push","Promise","all","resolve","animation","set","stop","mount","then","useAnimationControls","useEffect","CarouselBanner","q","useStaticQuery","allJson","nodes","log","imageList","map","image1","setImage1","image2","setImage2","image3","setImage3","image4","setImage4","control1","control2","control3","control4","bannerIndex","setInterval","trunk","shift","style","Link","to","target","Instagram","Line","initial","left","whileInView","viewport","once","amount","IntroducePanel","Introduce","CharacterCardPanel","contents","CharacterCard","ContactPanel","Contact","Activity","warning","invariant","isKeyframesTarget","v","Array","isArray","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","easeIn","easeOut","reverse","easeInOut","mirror","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","x1","y1","x2","y2","undefined","isAnimatable","key","complex","startsWith","underDampedSpring","type","stiffness","damping","restSpeed","criticallyDampedSpring","sqrt","linearTween","keyframes","values","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","backgroundColor","default","getDefaultTransition","valueKey","transitionFactory","instantAnimationState","hueToRgb","mixLinearColor","from","fromExpo","max","colorTypes","hex","rgba","hsla","asRGBA","find","test","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","getMixer","origin","mixComplex","mixArray","output","numValues","blendValue","fromThis","mixObject","analyse","parsed","numNumbers","numColors","template","originStats","targetStats","pipe","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","clamp","isClamp","inputLength","interpolator","progressInRange","progress","defaultEasing","easing","splice","safeMin","findSpring","bounce","velocity","mass","envelope","derivative","maxDuration","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","f","g","initialGuess","result","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","min","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","offset","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","elapsed","delay","framesync","update","passTimestamp","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","_b","driverControls","latest","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","legacyRepeatWarning","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getPopmotionAnimationOptions","hydrateKeyframes","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","getAnimation","valueTransition","getValueTransition","get","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","getVelocity","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","prev","checkBoundary","inertia","finalTarget","parseFloat","potentialUnitType","delayBy","getDelayFromTransition","cancelDelay","acos","mirrorEasing","reverseEasing","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","render","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","useCallback","instance","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","layout","translateAlias","transformPerspective","sortTransformProps","isCSSVariable","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","number","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","size","px","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","toLowerCase","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","eventHandler","button","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","variantChildren","setAnimateFunction","makeAnimator","getState","safeToRemove","distance","PanSession","constructor","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","timestamp","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","top","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","getValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","checkAndConvertChangedValueTypes","targetPositionalKeys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","willChange","initialMotionValues","is","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","remove","clear","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","sortNodePosition","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","makeTargetAnimatable","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","compareDocumentPosition","isMounted","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle","getAnimatableNone","defaultValueType","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","zIndex","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","animateVisualElement","variant","animateVariant","resolvedDefinition","animateTarget","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animationTypeState","shouldBlockAnimation","shouldBlock","resolveVariant","getCurrent","resolveVariantFromProps","currentValues","isZeroValueString","valueTypes","findValueType","setMotionValue","setTarget","setVariants","variantLabels","setValues","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","addUniqueItem","arr","item","removeItem","index","timeout","performance","now","checkElapsed","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","subscriptions","numSubscriptions","getSize","secondsToMilliseconds","seconds","useConstant","init","velocityPerSecond","frameDuration","MotionValue","version","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","velocityCheck","subscription","clearListeners","attach","passiveEffect","getPrevious","clearAnimation","destroy","isWillChangeMotionValue","isMotionValue","defaultTimestep","getCurrentTime","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","process","frameData","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","getFrameData","r","substr","parseInt","alpha$1","clampRgbUnit","rgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorToken","numberToken","colors","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","toFixed","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}