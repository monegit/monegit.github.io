{"version":3,"file":"component---src-pages-gallery-potg-src-pages-components-summoner-matches-match-detail-summoner-summary-tsx-cbc02cc8b263e263e2e1.js","mappings":"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","sources":["webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/champion-image/Champion.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/detail/Gaugebar.tsx","webpack://portfolio/./src/pages/gallery/POTG/src/pages/components/summoner/matches/match/detail/SummonerSummary.tsx","webpack://portfolio/./src/tools/generator/rank.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./Champion.css\";\n\nexport enum SizeType {\n  Small,\n  Large,\n  Detail,\n  Ban,\n}\n\ninterface Props {\n  size: SizeType;\n  src: string;\n}\n\nfunction Champion(props: Props) {\n  // var coverSize: string = \"0\";\n  // var coverRadius: string = \"0\";\n  // var imageSize: string = \"0\";\n\n  // TODO: 컴포넌트 삭제 및 개별 적용\n  var [coverStyle, setCoverStyle] = useState(\"\");\n  var [imageStyle, setImageStyle] = useState(\"\");\n\n  useEffect(() => {\n    switch (props.size) {\n      case SizeType.Large:\n        setCoverStyle(\"cover-large\");\n        setImageStyle(\"image-large\");\n        break;\n      case SizeType.Small:\n        setCoverStyle(\"cover-small\");\n        setImageStyle(\"image-small\");\n        break;\n      case SizeType.Detail:\n        setCoverStyle(\"cover-detail\");\n        setImageStyle(\"image-detail\");\n        break;\n      case SizeType.Ban:\n        setCoverStyle(\"cover-ingameBan\");\n        setImageStyle(\"image-ingameBan\");\n        break;\n    }\n  }, [props.size]);\n\n  return (\n    <div className={coverStyle}>\n      <img className={imageStyle} src={props.src} alt=\"\" />\n    </div>\n  );\n}\n\nexport default Champion;\n","import React from \"react\";\n\nexport interface GaugebarData {\n  max: number;\n  value: number;\n  color?: string;\n}\n\nfunction Gaugebar(props: GaugebarData) {\n  // TODO: 컴포넌트 옮기기\n  return (\n    <div className=\"w-full bg-gray-300 rounded-full h-2\">\n      <div\n        className={`${\n          props.color ? props.color : \"bg-red-500\"\n        } h-2 rounded-full`}\n        style={{\n          width:\n            props.value < 10\n              ? props.value === 0\n                ? props.value\n                : 8\n              : props.value + `%`,\n        }}\n      ></div>\n    </div>\n  );\n}\n\nexport default Gaugebar;\n","import React from \"react\";\nimport getTierNumberToString from \"../../../../../../../../../../tools/generator/rank\";\nimport Champion, { SizeType } from \"../../../../champion-image/Champion\";\nimport Gaugebar from \"./Gaugebar\";\n\ninterface SummonerData {\n  summonerName: string | null | undefined;\n  championName: string | null | undefined;\n  championLevel: number | null | undefined;\n  score: ScoreData;\n  currentSummonerPuuid: string;\n  summonerPuuid: string;\n  items: ItemCodeData;\n  position: string;\n  summonerTier: number;\n  summonerRank: number;\n}\n\ninterface ScoreData {\n  kills: number;\n  deaths: number;\n  assists: number;\n  wardPlace: number;\n  totalMinionKills: number;\n  neutralMinionsKills: number;\n}\n\ninterface ItemCodeData {\n  item0: number;\n  item1: number;\n  item2: number;\n  item3: number;\n  item4: number;\n  item5: number;\n  item6: number;\n}\n\nconst SummonerSummary = (props: SummonerData) => {\n  const isCurrentUser = props.currentSummonerPuuid === props.summonerPuuid;\n\n  const items = [\n    props?.items?.item0,\n    props?.items?.item1,\n    props?.items?.item2,\n    props?.items?.item6,\n    props?.items?.item3,\n    props?.items?.item4,\n    props?.items?.item5,\n  ];\n\n  return (\n    <div\n      className={`flex gap-2 text-gray-700 p-2 ${\n        isCurrentUser ? \"rounded-lg bg-gray-200\" : \"\"\n      }`}\n    >\n      <div className=\"Detail--Profile gap-2 gap-x-3 grid grid-flow-col items-center\">\n        <div className=\"flex flex-col items-center\">\n          <Champion\n            src={`http://ddragon.leagueoflegends.com/cdn/12.14.1/img/champion/${props.championName}.png`}\n            size={SizeType.Detail}\n          />\n        </div>\n        <div className=\"text-[10px] font-bold text-center\">\n          LV. {props.championLevel}\n        </div>\n        <div\n          className={`text-sm ${\n            isCurrentUser ? \"font-bold\" : \"\"\n          } w-24 text-ellipsis overflow-hidden whitespace-nowrap`}\n        >\n          {props.summonerName}\n        </div>\n        <div className=\"text-[10px] w-24\">\n          {getTierNumberToString(props.summonerTier, props.summonerRank)}\n        </div>\n      </div>\n      <div className=\"flex items-center gap-7\">\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"text-xs text-center\">KDA</div>\n          <div className=\"font-semibold h-6 w-[90px] text-center\">\n            {props?.score?.kills} / {props?.score?.deaths} /{\" \"}\n            {props?.score?.assists}\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-1 w-7 items-center\">\n          <div className=\"text-xs text-center\">\n            {props.position === \"UTILITY\" ? \"와드\" : \"CS\"}\n          </div>\n          <div className=\"font-semibold h-6\">\n            {props.position === \"UTILITY\"\n              ? props.score?.wardPlace\n              : props.score?.totalMinionKills +\n                props.score?.neutralMinionsKills}\n          </div>\n        </div>\n        <div className=\"flex flex-col gap-1\">\n          <div className=\"text-xs text-center\">피해</div>\n          <div className=\"flex w-14 h-6 items-center\">\n            <Gaugebar max={100} value={25} />\n          </div>\n        </div>\n        <div className=\"grid grid-flow-row grid-cols-4 grid-rows-2 gap-1\">\n          {items.map((itemCode, index) =>\n            itemCode > 0 ? (\n              <img\n                key={index}\n                style={{ width: \"24px\", height: \"24px\" }}\n                className=\"bg-gray-200 rounded-md overflow-hidden\"\n                src={`http://ddragon.leagueoflegends.com/cdn/12.15.1/img/item/${itemCode}.png`}\n                alt=\"item\"\n              />\n            ) : (\n              <div\n                key={index}\n                style={{ width: \"24px\", height: \"24px\" }}\n                className=\"bg-gray-300 rounded-md overflow-hidden\"\n              />\n            )\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SummonerSummary;\n","/**\n * api로 받은 숫자의 데이터를 문자열로 바꿔준다.\n * @param {number} rank api로 받은 rank의 숫자\n * @returns {string} 숫자로 받은 tier를 문자열로 변환(0->아이언)\n */\nexport default function getTierNumberToString(\n  tier: number,\n  rank: number\n): string {\n  var _tier = \"-\";\n  var _rank = \"\";\n\n  switch (tier) {\n    case 0:\n      _tier = \"아이언\";\n      break;\n    case 1:\n      _tier = \"브론즈\";\n      break;\n    case 2:\n      _tier = \"실버\";\n      break;\n    case 3:\n      _tier = \"골드\";\n      break;\n    case 4:\n      _tier = \"플래티넘\";\n      break;\n    case 5:\n      _tier = \"다이아몬드\";\n      break;\n    case 6:\n      _tier = \"마스터\";\n      break;\n    case 7:\n      _tier = \"그랜드마스터\";\n      break;\n    case 8:\n      _tier = \"챌린저\";\n      break;\n  }\n\n  switch (rank) {\n    case 1:\n      _rank = \"1\";\n      switch (tier) {\n        case 6:\n          _rank = \"\";\n          break;\n        case 7:\n          _rank = \"\";\n          break;\n        case 8:\n          _rank = \"\";\n          break;\n      }\n      break;\n    case 2:\n    case 3:\n    case 4:\n      _rank = rank.toString();\n      break;\n  }\n  return `${_tier} ${_rank}`;\n}\n"],"names":["SizeType","props","coverStyle","setCoverStyle","useState","imageStyle","setImageStyle","useEffect","size","Large","Small","Detail","Ban","React","className","src","alt","color","style","width","value","isCurrentUser","currentSummonerPuuid","summonerPuuid","items","_props$items","item0","_props$items2","item1","_props$items3","item2","_props$items4","item6","_props$items5","item3","_props$items6","item4","_props$items7","item5","Champion","championName","championLevel","summonerName","getTierNumberToString","summonerTier","summonerRank","score","_props$score","kills","_props$score2","deaths","_props$score3","assists","position","_props$score4","wardPlace","_props$score5","totalMinionKills","_props$score6","neutralMinionsKills","Gaugebar","max","map","itemCode","index","key","height","tier","rank","_tier","_rank","toString"],"sourceRoot":""}