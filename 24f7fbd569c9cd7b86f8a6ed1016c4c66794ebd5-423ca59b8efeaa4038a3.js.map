{"version":3,"file":"24f7fbd569c9cd7b86f8a6ed1016c4c66794ebd5-423ca59b8efeaa4038a3.js","mappings":"mMACA,GAAe,IAAAA,eAAc,CAAC,GCE9B,SAASC,GAAc,KAAEC,EAAI,SAAEC,IAC3B,IAAKD,EACD,MAAM,IAAIE,MAAM,6CAEpB,OAAQ,SAAKC,EAAYC,SAAUC,OAAOC,OAAO,CAAEC,MAAOP,GAAQ,CAAEC,SAAUA,IAClF,CACAF,EAAcS,UAAY,CACtBR,KAAM,uBAEV,QCZIS,EAAkC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,CAAC,EACT,IAAK,IAAIC,KAAKH,EAAOL,OAAOS,UAAUC,eAAeC,KAAKN,EAAGG,IAAMF,EAAEM,QAAQJ,GAAK,IAC9ED,EAAEC,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,mBAAjCL,OAAOa,sBACtB,KAAIC,EAAI,EAAb,IAAgBN,EAAIR,OAAOa,sBAAsBR,GAAIS,EAAIN,EAAEO,OAAQD,IAC3DR,EAAEM,QAAQJ,EAAEM,IAAM,GAAKd,OAAOS,UAAUO,qBAAqBL,KAAKN,EAAGG,EAAEM,MACvEP,EAAEC,EAAEM,IAAMT,EAAEG,EAAEM,IAF4B,CAItD,OAAOP,CACX,EAKA,SAASU,EAAMC,GACX,IAAI,KAAEC,GAASD,EAAIE,EAAQhB,EAAOc,EAAI,CAAC,SACvC,MACMG,GADO,IAAAC,YAAWxB,GACPqB,GAIjB,OAHKE,GACDE,QAAQC,KAAK,SAASL,gCAElB,SAAK,MAAOnB,OAAOC,OAAO,CAAEwB,IAAKJ,EAAKK,IAAKP,EAAM,aAAcA,GAAQC,GACnF,CACAH,EAAMd,UAAY,CACdgB,KAAM,uBAEV,Q,mBCoCA,MAlDA,SAAuBC,GACrB,IAAI,EAACO,EAAO,EAACC,IAAaC,EAAAA,EAAAA,WAAS,GAEnC,OACEC,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTC,UAAS,8HAAgIZ,EAAMa,MAC/IC,WAAY,CACVC,MAAO,MAETC,SAAU,CACRD,MAAO,MAETE,MAAO,KACLT,GAAWD,EAAO,EAEpBW,QAAS,CACPC,OAAQZ,EAAS,IAAM,KAEzBa,WAAY,CACVC,SAAU,IACVC,KAAM,YAGRZ,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTC,UAAU,mCACVM,QAAS,CAAEK,QAAShB,EAAS,EAAI,GACjCa,WAAY,CAAEC,SAAU,KAExBX,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACpC,EAAa,CAACC,KAAMiD,GACnBd,EAAAA,cAACb,EAAK,CAACE,KAAMC,EAAMyB,KAAMC,MAAO,OAGpChB,EAAAA,cAAAA,MAAAA,CAAKE,UAAS,wBAA0BZ,EAAM2B,UAC3C3B,EAAM4B,QAGXlB,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTC,UAAS,aACPL,EAAS,UAAY,YAAU,sBAEjCW,QAAS,CAAEK,QAAShB,EAAS,EAAI,GACjCa,WAAY,CAAEC,SAAU,KAEvBrB,EAAM6B,SAIf,E,mhCCtDA,SAASC,IAIL,IAAIC,GAAa,EAKjB,MAAMC,EAAoB,GAIpBC,EAAc,IAAIC,IAClBC,EAAW,CACbC,UAAUC,IACNJ,EAAYK,IAAID,GACT,KAAWJ,EAAYM,OAAOF,EAAc,GAEvDG,MAAMC,EAAYC,GAOd,GAAIX,EAAY,CACZ,MAAMY,EAAa,GAMnB,OALAV,EAAYW,SAASP,IACjBM,EAAWE,MAAK,QAAqBR,EAAeI,EAAY,CAC5DC,uBACD,IAEAI,QAAQC,IAAIJ,EACvB,CAEI,OAAO,IAAIG,SAASE,IAChBhB,EAAkBa,KAAK,CACnBI,UAAW,CAACR,EAAYC,GACxBM,WACF,GAGd,EACAE,IAAIT,KACA,OAAUV,EAAY,iHACfE,EAAYW,SAASP,KACxB,QAAUA,EAAeI,EAAW,KAG5CU,OACIlB,EAAYW,SAASP,KACjB,QAAcA,EAAc,GAEpC,EACAe,MAAK,KACDrB,GAAa,EACbC,EAAkBY,SAAQ,EAAGK,YAAWD,cACpCb,EAASK,SAASS,GAAWI,KAAKL,EAAQ,IAEvC,KACHjB,GAAa,EACbI,EAASgB,MAAM,IAI3B,OAAOhB,CACX,C,cCzCA,SAASmB,IACL,MAAMnB,GAAW,OAAYL,GAE7B,OADA,IAAAyB,WAAUpB,EAASiB,MAAO,IACnBjB,CACX,CACA,MCtBMqB,EAAiB,KACrB,IAAIC,EAAYC,EAAAA,EAAAA,KAA0BnF,GAASA,EAAK0B,OAEpD,EAAC0D,EAAO,EAACC,IAAanD,EAAAA,EAAAA,UAASgD,EAAUA,EAAU9D,OAAS,KAC5D,EAACkE,EAAO,EAACC,IAAarD,EAAAA,EAAAA,UAASgD,EAAU,KACzC,EAACM,EAAO,EAACC,IAAavD,EAAAA,EAAAA,UAASgD,EAAU,KACzC,EAACQ,EAAO,EAACC,IAAazD,EAAAA,EAAAA,UAASgD,EAAU,IAE7C,MAAMU,EAAWb,IACXc,EAAWd,IACXe,EAAWf,IACXgB,EAAWhB,IAEjB,IAAIiB,EAAc,EA+BlB,OA7BAhB,EAAAA,EAAAA,YAAU,KACRiB,aAAY,KACVL,EAAS3B,MAAM,CAAErB,OAAQ,EAAGC,WAAY,CAAEC,SAAU,MAASgC,MAAK,KAChEc,EAASjB,IAAI,CAAE/B,OAAQ,MACvBiD,EAASlB,IAAI,CAAEnC,MAAO,IACtBsD,EAASnB,IAAI,CAAEnC,MAAO,MACtBuD,EAASpB,IAAI,CAAEnC,MAAO,KAElBwD,EAAcd,EAAU9D,OAAQ4E,EAAc,EAC7CA,IAEL,IAAIE,EAAQhB,EAAUiB,QACtBjB,EAAUZ,KAAK4B,GAEfb,EAEMH,EAAUA,EAAU9D,OAAS,IAGnCmE,EAAUL,EAAU,IACpBO,EAAUP,EAAU,IACpBS,EAAUT,EAAU,GAAG,IAEzBW,EAAS5B,MAAM,CAAEzB,MAAO,IAAMK,WAAY,CAAEC,SAAU,MACtDgD,EAAS7B,MAAM,CAAEzB,MAAO,EAAGK,WAAY,CAAEC,SAAU,MACnDiD,EAAS9B,MAAM,CAAEzB,MAAO,IAAMK,WAAY,CAAEC,SAAU,KAAQ,GAC7D,IAAK,GACP,IAGDX,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CAACC,UAAU,qDACpBF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,8CACbF,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTgE,MAAO,CAAE5D,MAAO,KAChBG,QAASiD,EACTvD,UAAU,4EACVP,IAAKsD,IAEPjD,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTO,QAASkD,EACTxD,UAAU,4EACVP,IAAKwD,IAEPnD,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTgE,MAAO,CAAE5D,MAAO,KAChBG,QAASmD,EACTzD,UAAU,4EACVP,IAAK0D,IAEPrD,EAAAA,cAACC,EAAAA,EAAAA,IAAU,CACTgE,MAAO,CAAE5D,MAAO,IAChBG,QAASoD,EACT1D,UAAU,4EACVP,IAAK4D,KAGTvD,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,2EACfF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,wFAEb,EAqCV,MAjCA,SAAmB,GAAqB,IAArB,UAAEA,EAAY,IAAI,EACnC,OACEF,EAAAA,cAAAA,MAAAA,CAAKE,UAAWA,EAAY,SAC1BF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,QACbF,EAAAA,cAAC8C,EAAc,OAEjB9C,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,4BACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,mCACbF,EAAAA,cAAAA,IAAAA,KAAAA,aAAgB,QAElBA,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,yBAAuB,kBACrBF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,kBAAgB,SAAU,SAEtDF,EAAAA,cAAAA,KAAAA,MAAM,wBAENA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,kBAAgB,YAAa,MAE1CF,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MAAM,cAENA,EAAAA,cAAAA,KAAAA,MAAM,gBAENA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,kBAAgB,aAAc,UAE3CF,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,8BAA4B,cAKnD,EChHA,MAAMgE,EAAiB,IACdlE,EAAAA,cAACmE,EAAS,CAACjE,UAAU,cAGxBkE,EAAqB,KACzB,MAAMC,EAAmC,CACvC,CACElE,MAAO,cACPe,MAAO,SACPH,KAAM,gBACNE,SAAU,WACVE,QACEnB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBAAe,mBAE5BF,EAAAA,cAAAA,KAAAA,MAAM,iBAENA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,qFAAmF,mBAE5F,SAEJF,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MAAM,mBAENA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,qFAAmF,oBAE5F,QAEJF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,qFAAmF,gBAE5F,SAKV,CACEC,MAAO,aACPe,MAAO,WACPH,KAAM,eACNE,SAAU,WACVE,QACEnB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBAAe,yBAE5BF,EAAAA,cAAAA,KAAAA,MAAM,aAENA,EAAAA,cAAAA,KAAAA,MAAM,mBAENA,EAAAA,cAAAA,KAAAA,MAAM,WAENA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MAAM,oBAENA,EAAAA,cAAAA,KAAAA,MAAM,mBAENA,EAAAA,cAAAA,KAAAA,MAAM,MAENA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,oFAAkF,kBAE7FF,EAAAA,cAAAA,KAAAA,MAAM,MAEJ,eAKV,CACEG,MAAO,iBACPe,MAAO,cACPH,KAAM,4BACNE,SAAU,WACVE,QACEnB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBACbF,EAAAA,cAAAA,IAAAA,KAAAA,UAEEA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,wFAAsF,SAE/F,QAGNF,EAAAA,cAAAA,IAAAA,KAAAA,cACAA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,wFAAsF,gBAEjGF,EAAAA,cAAAA,KAAAA,MAAM,aAENA,EAAAA,cAAAA,KAAAA,MAAM,SAEJ,WAGNA,EAAAA,cAAAA,KAAAA,MAAM,eAENA,EAAAA,cAAAA,KAAAA,MAAM,SAENA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,wFAAsF,mBAE/F,KAEF,aAKV,CACEC,MAAO,gBACPe,MAAO,SACPH,KAAM,8BACNE,SAAU,WACVE,QACEnB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,iBAAe,kBAE5BF,EAAAA,cAAAA,KAAAA,MAAM,kBAENA,EAAAA,cAAAA,KAAAA,MAAM,YAENA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,uFAAqF,SAEhGF,EAAAA,cAAAA,KAAAA,MAAM,gBAGRA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,MAAM,eAENA,EAAAA,cAAAA,KAAAA,MAAM,WAENA,EAAAA,cAAAA,KAAAA,MAAM,cAENA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,uFAAqF,aAEhGF,EAAAA,cAAAA,KAAAA,MAAM,mBAQhB,OACEA,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,qCACbF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,uBACbF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,YACXF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,iFAA+E,OAExF,eAORF,EAAAA,cAAAA,MAAAA,CAAKE,UAAS,sCACXmE,EAASC,KAAKnD,GACbnB,EAAAA,cAACuE,EAAa,CACZpE,MAAOgB,EAAQhB,MACfe,MAAOC,EAAQD,MACfH,KAAMI,EAAQJ,KACdE,SAAUE,EAAQF,SAClBE,QAASA,EAAQA,aAInB,EAaV,MATA,WACE,OACEnB,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,wBACbF,EAAAA,cAACkE,EAAc,MACflE,EAAAA,cAACoE,EAAkB,MAGzB,C,8EC7LA,IAAII,EAAU,WAAc,EACxBC,EAAY,WAAc,C,uDCD9B,MAAMC,EAAqBC,GAChBC,MAAMC,QAAQF,E,mHCmBzB,MAAMG,EAAa,CAACrG,EAAGsG,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMtG,GAAK,EAAMuG,EAAK,EAAMD,IAAOtG,EAAI,EAAMsG,GACrGtG,EAoBJ,SAASwG,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOC,EAAA,EACX,MAAMC,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYT,EAAKE,GACrD,IAAIQ,EACAC,EACA7G,EAAI,EACR,GACI6G,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWd,EAAWe,EAAUX,EAAKE,GAAOK,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZC,KAAKC,IAAIH,GAfO,QAgBnB5G,EAfuB,IAgB7B,OAAO6G,CACX,CAK6BG,CAAgBR,EAAI,EAAG,EAAGN,EAAKE,GAExD,OAAQ3G,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIqG,EAAWS,EAAS9G,GAAI0G,EAAKE,EACxE,C,uBC7CA,MAAMY,EAAUvH,GAAMA,EAAIA,EACpBwH,GAAU,EAAAC,EAAA,GAAcF,GACxBG,GAAY,EAAAC,EAAA,GAAaJ,G,cCF/B,MAAMK,EAAe,CAACC,EAAQ,QAAW7H,GAAMA,EAAIA,IAAM6H,EAAQ,GAAK7H,EAAI6H,GACpEC,EAASF,IACTG,GAAU,EAAAN,EAAA,GAAcK,GACxBE,GAAY,EAAAL,EAAA,GAAaG,GCEzBG,EANmB,CAACJ,IACtB,MAAMK,EAAaN,EAAaC,GAChC,OAAQ7H,IAAOA,GAAK,GAAK,EACnB,GAAMkI,EAAWlI,GACjB,IAAO,EAAIoH,KAAKe,IAAI,GAAI,IAAMnI,EAAI,IAAI,EAE7BoI,GCAbC,EAAe,CACjBC,OAAQ1B,EAAA,EACRW,OAAM,EACNG,UAAS,EACTF,QAAO,EACPe,OAAM,KACNC,UAAS,KACTC,QAAO,KACPX,OAAM,EACNE,UAAS,EACTD,QAAO,EACPE,WAAU,GAERS,EAA8BrF,IAChC,GAAI6C,MAAMC,QAAQ9C,GAAa,EAE3B,OAAgC,IAAtBA,EAAW9C,OAAc,2DACnC,MAAOoI,EAAIC,EAAIC,EAAIC,GAAMzF,EACzB,OAAOkD,EAAYoC,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAfzF,IAEZ,YAAuC0F,IAA7BV,EAAahF,GAA2B,wBAAwBA,MACnEgF,EAAahF,IAEjBA,CAAU,E,cCtBrB,MAAM2F,EAAe,CAACC,EAAKvJ,IAEX,WAARuJ,MAKiB,iBAAVvJ,IAAsBwG,MAAMC,QAAQzG,OAE1B,iBAAVA,IACPwJ,EAAA,OAAaxJ,IACZA,EAAMyJ,WAAW,U,cCpB1B,MAAMC,EAAoB,KAAM,CAC5BC,KAAM,SACNC,UAAW,IACXC,QAAS,GACTC,UAAW,KAETC,EAA0BC,IAAO,CACnCL,KAAM,SACNC,UAAW,IACXC,QAAgB,IAAPG,EAAW,EAAItC,KAAKuC,KAAK,KAAO,GACzCH,UAAW,KAETI,EAAc,KAAM,CACtBP,KAAM,YACNnH,KAAM,SACND,SAAU,KAER4H,EAAaC,IAAW,CAC1BT,KAAM,YACNpH,SAAU,GACV6H,WAEEC,EAAqB,CACvBhD,EAAGqC,EACHY,EAAGZ,EACHa,EAAGb,EACHc,OAAQd,EACRe,QAASf,EACTgB,QAAShB,EACTiB,QAASjB,EACTkB,OAAQb,EACRc,OAAQd,EACR9H,MAAO8H,EACPtH,QAASyH,EACTY,gBAAiBZ,EACjBnI,MAAOmI,EACPa,QAAShB,GAEPiB,EAAuB,CAACC,EAAUjB,KACpC,IAAIkB,EAQJ,OANIA,GADA,OAAkBlB,GACEG,EAIhBE,EAAmBY,IAAaZ,EAAmBU,QAEpD,CAAEf,QAAOkB,EAAkBlB,GAAK,E,cCjD3C,MAAMmB,GACO,E,kFCAb,SAASC,EAAS9K,EAAG+K,EAAGhL,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDC,EAAc,GAAT+K,EAAI/K,GAASD,EACzBA,EAAI,GACGgL,EACPhL,EAAI,EAAI,EACDC,GAAK+K,EAAI/K,IAAM,EAAI,EAAID,GAAK,EAChCC,CACX,CCLA,MAAMgL,EAAiB,CAACC,EAAMvB,EAAIzD,KAC9B,MAAMiF,EAAWD,EAAOA,EACxB,OAAO7D,KAAKuC,KAAKvC,KAAK+D,IAAI,EAAGlF,GAAKyD,EAAKA,EAAKwB,GAAYA,GAAU,EAEhEE,EAAa,CAACC,EAAA,EAAKC,EAAA,EAAMC,EAAA,GAE/B,SAASC,EAAO/J,GACZ,MAAM4H,GAFYpD,EAEQxE,EAFF2J,EAAWK,MAAMpC,GAASA,EAAKqC,KAAKzF,MAA3C,IAACA,GAGlB,OAAU0F,QAAQtC,GAAO,IAAI5H,yEAC7B,IAAImK,EAAQvC,EAAKwC,MAAMpK,GAIvB,OAHI4H,IAASkC,EAAA,IACTK,EDLR,UAAoB,IAAEE,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEC,IAC9CH,GAAO,IAEPE,GAAa,IACb,IAAIE,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAL,GAAc,IAQT,CACD,MAAMhB,EAAIiB,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC/L,EAAI,EAAIgM,EAAYjB,EAC1BmB,EAAMpB,EAAS9K,EAAG+K,EAAGe,EAAM,EAAI,GAC/BK,EAAQrB,EAAS9K,EAAG+K,EAAGe,GACvBM,EAAOtB,EAAS9K,EAAG+K,EAAGe,EAAM,EAAI,EACpC,MAVII,EAAMC,EAAQC,EAAOJ,EAWzB,MAAO,CACHE,IAAK9E,KAAKiF,MAAY,IAANH,GAChBC,MAAO/E,KAAKiF,MAAc,IAARF,GAClBC,KAAMhF,KAAKiF,MAAa,IAAPD,GACjBH,QAER,CCpBgBK,CAAWV,IAEhBA,CACX,CACA,MAAMW,EAAW,CAACtB,EAAMvB,KACpB,MAAM8C,EAAWhB,EAAOP,GAClBwB,EAASjB,EAAO9B,GAChBgD,EAAU,IAAKF,GACrB,OAAQvG,IACJyG,EAAQR,IAAMlB,EAAewB,EAASN,IAAKO,EAAOP,IAAKjG,GACvDyG,EAAQP,MAAQnB,EAAewB,EAASL,MAAOM,EAAON,MAAOlG,GAC7DyG,EAAQN,KAAOpB,EAAewB,EAASJ,KAAMK,EAAOL,KAAMnG,GAC1DyG,EAAQT,OAAQ,EAAAU,EAAA,GAAIH,EAASP,MAAOQ,EAAOR,MAAOhG,GAC3CqF,EAAA,YAAeoB,GACzB,E,cC3BL,SAASE,EAASC,EAAQC,GACtB,MAAsB,iBAAXD,EACC5G,IAAM,EAAA0G,EAAA,GAAIE,EAAQC,EAAQ7G,GAE7BxE,EAAA,OAAWoL,GACTN,EAASM,EAAQC,GAGjBC,EAAWF,EAAQC,EAElC,CACA,MAAME,EAAW,CAAC/B,EAAMvB,KACpB,MAAMuD,EAAS,IAAIhC,GACbiC,EAAYD,EAAO1M,OACnB4M,EAAalC,EAAKrF,KAAI,CAACwH,EAAU9M,IAAMsM,EAASQ,EAAU1D,EAAGpJ,MACnE,OAAQ2F,IACJ,IAAK,IAAI3F,EAAI,EAAGA,EAAI4M,EAAW5M,IAC3B2M,EAAO3M,GAAK6M,EAAW7M,GAAG2F,GAE9B,OAAOgH,CAAM,CAChB,EAECI,EAAY,CAACR,EAAQC,KACvB,MAAMG,EAAS,IAAKJ,KAAWC,GACzBK,EAAa,CAAC,EACpB,IAAK,MAAMlE,KAAOgE,OACMlE,IAAhB8D,EAAO5D,SAAsCF,IAAhB+D,EAAO7D,KACpCkE,EAAWlE,GAAO2D,EAASC,EAAO5D,GAAM6D,EAAO7D,KAGvD,OAAQhD,IACJ,IAAK,MAAMgD,KAAOkE,EACdF,EAAOhE,GAAOkE,EAAWlE,GAAKhD,GAElC,OAAOgH,CAAM,CAChB,EAKL,SAASK,EAAQ5N,GACb,MAAM6N,EAASrE,EAAA,QAAcxJ,GACvBwN,EAAYK,EAAOhN,OACzB,IAAIiN,EAAa,EACbC,EAAY,EAChB,IAAK,IAAInN,EAAI,EAAGA,EAAI4M,EAAW5M,IAGvBkN,GAAmC,iBAAdD,EAAOjN,GAC5BkN,IAGAC,IAGR,MAAO,CAAEF,SAAQC,aAAYC,YACjC,CACA,MAAMV,EAAa,CAACF,EAAQC,KACxB,MAAMY,EAAWxE,EAAA,oBAA0B4D,GACrCa,EAAcL,EAAQT,GACtBe,EAAcN,EAAQR,GAG5B,OAFuBa,EAAYF,YAAcG,EAAYH,WACzDE,EAAYH,YAAcI,EAAYJ,YAE/B,EAAAK,EAAA,GAAKb,EAASW,EAAYJ,OAAQK,EAAYL,QAASG,KAG9D,QAAQ,EAAM,mBAAmBb,WAAgBC,6KACzC9M,GAAM,GAAGA,EAAI,EAAI8M,EAASD,IACtC,E,cClEJ,MAAMiB,EAAY,CAAC7C,EAAMvB,IAAQ1J,IAAM,EAAA2M,EAAA,GAAI1B,EAAMvB,EAAI1J,GAqBrD,SAAS+N,EAAad,EAAQ/K,EAAM8L,GAChC,MAAMC,EAAS,GACTC,EAAeF,IArBJ,iBADO/H,EAsB+BgH,EAAO,IApBnDa,EAEW,iBAAN7H,EACRxE,EAAA,OAAWwE,GACJsG,EAGAQ,EAGN7G,MAAMC,QAAQF,GACZ+G,EAEW,iBAAN/G,EACLoH,EAEJS,GAlBX,IAA4B7H,EAuBxB,MAAMkI,EAAYlB,EAAO1M,OAAS,EAClC,IAAK,IAAID,EAAI,EAAGA,EAAI6N,EAAW7N,IAAK,CAChC,IAAI8N,EAAQF,EAAajB,EAAO3M,GAAI2M,EAAO3M,EAAI,IAC/C,GAAI4B,EAAM,CACN,MAAMmM,EAAiBnI,MAAMC,QAAQjE,GAAQA,EAAK5B,GAAK4B,EACvDkM,GAAQ,EAAAP,EAAA,GAAKQ,EAAgBD,EACjC,CACAH,EAAOxK,KAAK2K,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAOtB,GAAUuB,MAAOC,GAAU,EAAI,KAAEvM,EAAI,MAAEkM,GAAU,CAAC,GAC1E,MAAMM,EAAcH,EAAMhO,QAC1B,OAAUmO,IAAgBzB,EAAO1M,OAAQ,yDACzC,QAAW2B,IAASgE,MAAMC,QAAQjE,IAASA,EAAK3B,SAAWmO,EAAc,EAAG,oIAExEH,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,EAAQ,IAAIA,GAAO9G,UACnBwF,EAAS,IAAIA,GAAQxF,WAEzB,MAAMwG,EAASF,EAAad,EAAQ/K,EAAMkM,GACpCD,EAAYF,EAAO1N,OACnBoO,EAAgB1I,IAClB,IAAI3F,EAAI,EACR,GAAI6N,EAAY,EACZ,KAAO7N,EAAIiO,EAAMhO,OAAS,KAClB0F,EAAIsI,EAAMjO,EAAI,IADOA,KAKjC,MAAMsO,GAAkB,EAAAC,EAAA,GAASN,EAAMjO,GAAIiO,EAAMjO,EAAI,GAAI2F,GACzD,OAAOgI,EAAO3N,GAAGsO,EAAgB,EAErC,OAAOH,EACAxI,GAAM0I,GAAa,EAAAH,EAAA,GAAMD,EAAM,GAAIA,EAAMG,EAAc,GAAIzI,IAC5D0I,CACV,CCrFA,SAASG,GAAchF,EAAQiF,GAC3B,OAAOjF,EAAOlE,KAAI,IAAMmJ,GAAUrH,IAAWsH,OAAO,EAAGlF,EAAOvJ,OAAS,EAC3E,CCFA,MAAM0O,GAAU,KAKhB,SAASC,IAAW,SAAEjN,EAAW,IAAG,OAAEkN,EAAS,IAAI,SAAEC,EAAW,EAAC,KAAEC,EAAO,IACtE,IAAIC,EACAC,GACJ,OAAQtN,GAAYuN,IAAoB,8CACxC,IAAIC,EAAe,EAAIN,EAIvBM,GAAe,EAAAjB,EAAA,GAVA,IACA,EAS8BiB,GAC7CxN,GAAW,EAAAuM,EAAA,GAbK,IACA,GAY2BvM,EAAW,KAClDwN,EAAe,GAIfH,EAAYI,IACR,MAAMC,EAAmBD,EAAeD,EAClCG,EAAQD,EAAmB1N,EAC3B4N,EAAIF,EAAmBP,EACvBU,EAAIC,GAAgBL,EAAcD,GAClCO,EAAI5I,KAAK6I,KAAKL,GACpB,OAAOX,GAAWY,EAAIC,EAAKE,CAAC,EAEhCT,EAAcG,IACV,MACME,EADmBF,EAAeD,EACPxN,EAC3BiO,EAAIN,EAAQR,EAAWA,EACvBtP,EAAIsH,KAAKe,IAAIsH,EAAc,GAAKrI,KAAKe,IAAIuH,EAAc,GAAKzN,EAC5DkO,EAAI/I,KAAK6I,KAAKL,GACdQ,EAAIL,GAAgB3I,KAAKe,IAAIuH,EAAc,GAAID,GAErD,QADgBH,EAASI,GAAgBT,GAAU,GAAK,EAAI,KACzCiB,EAAIpQ,GAAKqQ,GAAMC,CAAC,IAOvCd,EAAYI,GACEtI,KAAK6I,KAAKP,EAAezN,KACxByN,EAAeN,GAAYnN,EAAW,GAC1C,KAEXsN,EAAcG,GACAtI,KAAK6I,KAAKP,EAAezN,IACIA,EAAWA,GAAvCmN,EAAWM,KAI9B,MACMA,EAmBV,SAAyBJ,EAAUC,EAAYc,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAI/P,EAAI,EAAGA,EAHG,GAGiBA,IAChCgQ,GAAkBhB,EAASgB,GAAUf,EAAWe,GAEpD,OAAOA,CACX,CAzByBC,CAAgBjB,EAAUC,EAD1B,EAAItN,GAGzB,GADAA,GAAsB,IAClBuO,MAAMd,GACN,MAAO,CACHpG,UAAW,IACXC,QAAS,GACTtH,YAGH,CACD,MAAMqH,EAAYlC,KAAKe,IAAIuH,EAAc,GAAKL,EAC9C,MAAO,CACH/F,YACAC,QAAwB,EAAfkG,EAAmBrI,KAAKuC,KAAK0F,EAAO/F,GAC7CrH,WAER,CACJ,CASA,SAAS8N,GAAgBL,EAAcD,GACnC,OAAOC,EAAetI,KAAKuC,KAAK,EAAI8F,EAAeA,EACvD,CCnFA,MAAMgB,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAaC,EAASC,GAC3B,OAAOA,EAAKC,MAAM7H,QAAyBF,IAAjB6H,EAAQ3H,IACtC,CA2BA,SAAS8H,IAAO,KAAE9F,EAAO,EAAG,GAAEvB,EAAK,EAAG,UAAEF,EAAY,EAAC,UAAEwH,EAAY,OAASJ,IAKxE,MAAMK,EAAQ,CAAEC,MAAM,EAAOxR,MAAOuL,GACpC,IAAI,UAAE3B,EAAS,QAAEC,EAAO,KAAE8F,EAAI,SAAED,EAAQ,SAAEnN,EAAQ,uBAAEkP,GAhCxD,SAA0BP,GACtB,IAAIQ,EAAgB,CAChBhC,SAAU,EACV9F,UAAW,IACXC,QAAS,GACT8F,KAAM,EACN8B,wBAAwB,KACrBP,GAGP,IAAKD,GAAaC,EAASF,KACvBC,GAAaC,EAASH,IAAe,CACrC,MAAMY,EAAUnC,GAAW0B,GAC3BQ,EAAgB,IACTA,KACAC,EACHjC,SAAU,EACVC,KAAM,GAEV+B,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CAUoFE,CAAiBV,GAC7FW,EAAgBC,GAChBC,EAAkBD,GACtB,SAASE,IACL,MAAMC,EAAkBvC,GAAaA,EAAW,IAAQ,EAClDwC,EAAelI,EAAKuB,EACpBwE,EAAelG,GAAW,EAAInC,KAAKuC,KAAKL,EAAY+F,IACpDwC,EAAsBzK,KAAKuC,KAAKL,EAAY+F,GAAQ,IAQ1D,QAHkBtG,IAAdiI,IACAA,EAAY5J,KAAK0K,IAAI1K,KAAKC,IAAIqC,EAAKuB,GAAQ,IAAK,KAEhDwE,EAAe,EAAG,CAClB,MAAMsC,EAAchC,GAAgB8B,EAAqBpC,GAEzD8B,EAAiBxR,IACb,MAAMuP,EAAWlI,KAAK6I,KAAKR,EAAeoC,EAAsB9R,GAChE,OAAQ2J,EACJ4F,IACOqC,EACClC,EAAeoC,EAAsBD,GACrCG,EACA3K,KAAK4K,IAAID,EAAchS,GACvB6R,EAAexK,KAAK6K,IAAIF,EAAchS,GAAI,EAE1D0R,EAAmB1R,IAEf,MAAMuP,EAAWlI,KAAK6I,KAAKR,EAAeoC,EAAsB9R,GAChE,OAAQ0P,EACJoC,EACAvC,GACElI,KAAK4K,IAAID,EAAchS,IACpB4R,EACGlC,EACIoC,EACAD,GACRG,EACAH,EAAexK,KAAK6K,IAAIF,EAAchS,IAC1CuP,GACKlI,KAAK6K,IAAIF,EAAchS,IACnB4R,EACGlC,EACIoC,EACAD,GACRG,EACIH,EACAxK,KAAK4K,IAAID,EAAchS,GAAI,CAEnD,MACK,GAAqB,IAAjB0P,EAEL8B,EAAiBxR,GAAM2J,EACnBtC,KAAK6I,KAAK4B,EAAsB9R,IAC3B6R,GACID,EAAkBE,EAAsBD,GACrC7R,OAEf,CAED,MAAMmS,EAAoBL,EAAsBzK,KAAKuC,KAAK8F,EAAeA,EAAe,GACxF8B,EAAiBxR,IACb,MAAMuP,EAAWlI,KAAK6I,KAAKR,EAAeoC,EAAsB9R,GAE1DoS,EAAW/K,KAAK0K,IAAII,EAAoBnS,EAAG,KACjD,OAAQ2J,EACH4F,IACKqC,EACElC,EAAeoC,EAAsBD,GACrCxK,KAAKgL,KAAKD,GACVD,EACIN,EACAxK,KAAKiL,KAAKF,IAClBD,CAAkB,CAElC,CACJ,CAEA,OADAR,IACO,CACHY,KAAOvS,IACH,MAAMwS,EAAUhB,EAAcxR,GAC9B,GAAKoR,EAQDF,EAAMC,KAAOnR,GAAKkC,MARO,CACzB,MAAMuQ,EAAuC,IAArBf,EAAgB1R,GAClC0S,EAA2BrL,KAAKC,IAAImL,IAAoBhJ,EACxDkJ,EAA+BtL,KAAKC,IAAIqC,EAAK6I,IAAYvB,EAC/DC,EAAMC,KACFuB,GAA4BC,CACpC,CAKA,OADAzB,EAAMvR,MAAQuR,EAAMC,KAAOxH,EAAK6I,EACzBtB,CAAK,EAEhB0B,WAAY,KACRvD,GAAYA,GACXnE,EAAMvB,GAAM,CAACA,EAAIuB,GAClByG,GAAc,EAG1B,CACAX,GAAO6B,mBAAqB,CAAC/C,EAAGC,IAAmB,iBAAND,GAA+B,iBAANC,EACtE,MAAM0B,GAAQqB,GAAO,E,eCzIrB,MAAMC,GAAQ,CAAEC,MCNhB,UAAe,SAAE3D,EAAW,EAAC,KAAEnE,EAAO,EAAC,MAAEpD,EAAQ,GAAG,aAAEmL,EAAe,IAAG,UAAEhC,EAAY,GAAG,aAAEiC,IAKvF,MAAMhC,EAAQ,CAAEC,MAAM,EAAOxR,MAAOuL,GACpC,IAAIiI,EAAYrL,EAAQuH,EACxB,MAAM+D,EAAQlI,EAAOiI,EACfpG,OAA0B/D,IAAjBkK,EAA6BE,EAAQF,EAAaE,GAOjE,OAFIrG,IAAWqG,IACXD,EAAYpG,EAAS7B,GAClB,CACHqH,KAAOvS,IACH,MAAM6P,GAASsD,EAAY9L,KAAK6I,KAAKlQ,EAAIiT,GAGzC,OAFA/B,EAAMC,OAAStB,EAAQoB,GAAapB,GAASoB,GAC7CC,EAAMvR,MAAQuR,EAAMC,KAAOpE,EAASA,EAAS8C,EACtCqB,CAAK,EAEhB0B,WAAY,OAEpB,EDlBqB,UHOrB,UAAmB,KAAE1H,EAAO,EAAC,GAAEvB,EAAK,EAAC,KAAExH,EAAI,OAAEkR,EAAM,SAAEnR,EAAW,MAK5D,MAAMgP,EAAQ,CAAEC,MAAM,EAAOxR,MAAOuL,GAI9BnB,EAAS5D,MAAMC,QAAQuD,GAAMA,EAAK,CAACuB,EAAMvB,GAIzC2J,EAhBV,SAA8BD,EAAQnR,GAClC,OAAOmR,EAAOxN,KAAK0N,GAAMA,EAAIrR,GACjC,CAckBsR,CAGdH,GAAUA,EAAO7S,SAAWuJ,EAAOvJ,OAC7B6S,EAxBV,SAAuBtJ,GACnB,MAAMoD,EAAYpD,EAAOvJ,OACzB,OAAOuJ,EAAOlE,KAAI,CAAC4N,EAAQlT,IAAY,IAANA,EAAUA,GAAK4M,EAAY,GAAK,GACrE,CAsBUuG,CAAc3J,GAAS7H,GAC7B,SAASyR,IACL,OAAOpF,GAAY+E,EAAOvJ,EAAQ,CAC9B5H,KAAMgE,MAAMC,QAAQjE,GAAQA,EAAO4M,GAAchF,EAAQ5H,IAEjE,CACA,IAAIyM,EAAe+E,IACnB,MAAO,CACHpB,KAAOvS,IACHkR,EAAMvR,MAAQiP,EAAa5O,GAC3BkR,EAAMC,KAAOnR,GAAKkC,EACXgP,GAEX0B,WAAY,KACR7I,EAAOrC,UACPkH,EAAe+E,GAAoB,EAG/C,EG3CgC,OAAQ,IACxC,SAASC,GAAYC,EAAS3R,EAAU4R,EAAQ,GAC5C,OAAOD,EAAU3R,EAAW4R,CAChC,CASA,MAAMC,GAAaC,IACf,MAAMC,EAAgB,EAAGpE,WAAYmE,EAAOnE,GAC5C,MAAO,CACHxM,MAAO,IAAM,aAAY4Q,GAAe,GACxCjQ,KAAM,IAAM,aAAkBiQ,GACjC,EAEL,SAASlS,IAAQ,KAAEmJ,EAAI,SAAEgJ,GAAW,EAAI,OAAEC,EAASJ,GAAS,QAAEF,EAAU,EAAGO,OAAQC,EAAY,EAAC,WAAEC,EAAa,OAAM,YAAEC,EAAc,EAAC,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,EAAQ,SAAEC,EAAQ,KAAEtL,EAAO,eAAgBuH,IAC3M,IAAIlQ,EAAIkU,EACR,IACIC,EAIAC,EAGAC,GARA,GAAErL,GAAOkH,EAEToE,EAAc,EACdC,EAAmBrE,EAClB3O,SAEDiT,GAAa,EACbC,GAAoB,EAExB,MAAMC,EAAWtC,GAAM5M,MAAMC,QAAQuD,GAAM,YAAcL,IACP,QAA7CuL,GAAMlU,EAAK0U,GAAUxC,0BAAuC,IAAPgC,OAAgB,EAASA,EAAGzU,KAAKO,EAAIuK,EAAMvB,MACjGqL,EAAwBzG,GAAY,CAAC,EAAG,KAAM,CAACrD,EAAMvB,GAAK,CACtD8E,OAAO,IAEXvD,EAAO,EACPvB,EAAK,KAET,MAAM7F,EAAYuR,EAAS,IAAKxE,EAAS3F,OAAMvB,OAC/C,SAASyK,IACLa,IACmB,YAAfX,GACAc,EAAoBH,EAAc,GAAM,EACxCpB,EAvCZ,SAAwBA,EAAS3R,EAAW,EAAG4R,EAAQ,EAAGsB,GAAoB,GAC1E,OAAOA,EACDxB,GAAY1R,GAAY2R,EAAS3R,EAAU4R,GAC3C5R,GAAY2R,EAAU3R,GAAY4R,CAC5C,CAmCsBwB,CAAezB,EAASqB,EAAkBX,EAAaa,KAGjEvB,EAAUD,GAAYC,EAASqB,EAAkBX,GAC9B,WAAfD,GACAxQ,EAAU8O,cAElBuC,GAAa,EACbR,GAAYA,GAChB,CAKA,SAASX,EAAOnE,GAIZ,GAHKuF,IACDvF,GAASA,GACbgE,GAAWhE,GACNsF,EAAY,CACb,MAAMjE,EAAQpN,EAAUyO,KAAKlL,KAAK+D,IAAI,EAAGyI,IACzCkB,EAAS7D,EAAMvR,MACXqV,IACAD,EAASC,EAAsBD,IACnCI,EAAaC,EAAoBlE,EAAMC,KAAO0C,GAAW,CAC7D,CACAe,SAAoDA,EAASG,GACzDI,IACoB,IAAhBF,IACAC,UAA+EA,EAAmBrB,IAClGoB,EAAcZ,EA/D9B,SAA+BR,EAAS3R,EAAU4R,EAAOsB,GACrD,OAAOA,EAAoBvB,GAAW3R,EAAW4R,EAAQD,IAAYC,CACzE,CA8DgByB,CAAsB1B,EAASqB,EAAkBX,EAAaa,IAAsBhB,KAnB5FU,EAAe9Q,OACf0Q,GAAcA,KAwBlB,CAOA,OADAR,IAJIM,SAAgDA,IAChDM,EAAiBX,EAAOH,GACxBc,EAAezR,SAGZ,CACHW,KAAM,KACFyQ,SAAgDA,IAChDK,EAAe9Q,MAAM,EAGjC,C,eE9EA,IAAIwR,IAAsB,EAI1B,SAASC,IAAoC,KAAEtT,EAAI,MAAEmR,EAAK,KAAEoC,EAAI,KAAEC,EAAI,KAAEC,KAAS3T,IAC7E,MAAM4O,EAAU,IAAK5O,GA+CrB,OA9CIqR,IACAzC,EAAgB,OAAIyC,GAIpBrR,EAAWC,WACX2O,EAAkB,UAAI,OAAsB5O,EAAWC,WACvDD,EAAWsS,cACX1D,EAAQ0D,aAAc,OAAsBtS,EAAWsS,cAIvDpS,IACA0O,EAAc,KbJA,CAAC1O,GACZgE,MAAMC,QAAQjE,IAA4B,iBAAZA,EAAK,GaGpB0T,CAAc1T,GAC1BA,EAAK0D,IAAI8C,GACTA,EAA2BxG,IAKb,UAApBF,EAAWqH,OACXuH,EAAQvH,KAAO,cAIfoM,GAAQE,GAAQD,MAChB,QAASH,GAAqB,mGAC9BA,IAAsB,EAClBE,EACA7E,EAAQyD,WAAa,UAEhBsB,EACL/E,EAAQyD,WAAa,OAEhBqB,IACL9E,EAAQyD,WAAa,UAEzBzD,EAAQuD,OAASwB,GAAQF,GAAQC,GAAQ1T,EAAWmS,QAOhC,WAApBnS,EAAWqH,OACXuH,EAAQvH,KAAO,aACZuH,CACX,CAgBA,SAASiF,GAA6B7T,EAAY4O,EAAS3H,GAcvD,OAbI/C,MAAMC,QAAQyK,EAAQlH,UAA+BX,IAAxB/G,EAAWC,WACxCD,EAAWC,SAAW,IAT9B,SAA0B2O,GAClB1K,MAAMC,QAAQyK,EAAQlH,KAAyB,OAAlBkH,EAAQlH,GAAG,KACxCkH,EAAQlH,GAAK,IAAIkH,EAAQlH,IACzBkH,EAAQlH,GAAG,GAAKkH,EAAQ3F,KAGhC,CAKI6K,CAAiBlF,GA5ErB,UAA6B,KAAEmF,EAAMlC,MAAOmC,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEhC,EAAM,WAAEE,EAAU,YAAEC,EAAW,KAAErJ,KAASjJ,IAC5I,QAASxC,OAAOqR,KAAK7O,GAAYzB,MACrC,CA8ES6V,CAAoBpU,KACrBA,EAAa,IACNA,KACA0I,EAAqBzB,EAAK2H,EAAQlH,MAGtC,IACAkH,KACA4E,GAAoCxT,GAE/C,CAIA,SAASqU,GAAapN,EAAKvJ,EAAOoN,EAAQ9K,EAAYyS,GAClD,MAAM6B,EAAkBC,GAAmBvU,EAAYiH,IAAQ,CAAC,EAChE,IAAI4D,OAAkC9D,IAAzBuN,EAAgBrL,KAAqBqL,EAAgBrL,KAAOvL,EAAM8W,MAC/E,MAAMC,EAAqBzN,EAAaC,EAAK6D,GAC9B,SAAXD,GAAqB4J,GAAwC,iBAAX3J,EAKlDD,GAAS,OAAkB5D,EAAK6D,GAE3B4J,GAAO7J,IAA6B,iBAAXC,EAC9BD,EAAS8J,GAAY7J,IAEf5G,MAAMC,QAAQ2G,IACpB4J,GAAO5J,IACW,iBAAXD,IACPC,EAAS6J,GAAY9J,IAEzB,MAAM+J,EAAqB5N,EAAaC,EAAK4D,GAiC7C,OAhCA,OAAQ+J,IAAuBH,EAAoB,6BAA6BxN,WAAa4D,UAAeC,OAAYD,+DAAoEA,8BAAmCC,iCAgCvN8J,GACHH,IACwB,IAAzBH,EAAgBjN,KAjCpB,WACI,MAAMuH,EAAU,CACZ3F,KAAM4B,EACNnD,GAAIoD,EACJsC,SAAU1P,EAAMmX,cAChBpC,aACAE,SAAW1O,GAAMvG,EAAMoE,IAAImC,IAE/B,MAAgC,YAAzBqQ,EAAgBjN,MACM,UAAzBiN,EAAgBjN,KCzI5B,UAAiB,KAAE4B,EAAO,EAAC,SAAEmE,EAAW,EAAC,IAAE0C,EAAG,IAAE3G,EAAG,MAAEtD,EAAQ,GAAG,aAAEmL,EAAe,IAAG,gBAAE8D,EAAkB,IAAG,cAAEC,EAAgB,GAAE,UAAE/F,EAAY,EAAC,aAAEiC,EAAY,OAAEiB,EAAM,SAAES,EAAQ,WAAEF,EAAU,OAAED,IACxL,IAAIwC,EACJ,SAASC,EAAchR,GACnB,YAAgB8C,IAAR+I,GAAqB7L,EAAI6L,QAAiB/I,IAARoC,GAAqBlF,EAAIkF,CACvE,CACA,SAAS+L,EAAgBjR,GACrB,YAAY8C,IAAR+I,EACO3G,OACCpC,IAARoC,GAEG/D,KAAKC,IAAIyK,EAAM7L,GAAKmB,KAAKC,IAAI8D,EAAMlF,GAD/B6L,EAC0C3G,CACzD,CACA,SAASgM,EAAevG,GACpBoG,SAAoEA,EAAiBjT,OACrFiT,EAAmBlV,GAAQ,IACpB8O,EACHsD,SACAS,SAAW1O,IACP,IAAIvF,EACJiU,SAAoDA,EAAS1O,GACjC,QAA3BvF,EAAKkQ,EAAQ+D,gBAA6B,IAAPjU,GAAyBA,EAAGP,KAAKyQ,EAAS3K,EAAE,EAEpFwO,aACAD,UAER,CACA,SAAS4C,EAAYxG,GACjBuG,EAAe,CACX9N,KAAM,SACNC,UAAWwN,EACXvN,QAASwN,EACT/F,eACGJ,GAEX,CACA,GAAIqG,EAAchM,GAEdmM,EAAY,CAAEnM,OAAMmE,WAAU1F,GAAIwN,EAAgBjM,SAEjD,CASD,IAAI6B,EAASjF,EAAQuH,EAAWnE,OACJ,IAAjBgI,IACPnG,EAASmG,EAAanG,IAC1B,MAAMuK,EAAWH,EAAgBpK,GAC3BwK,EAAUD,IAAavF,GAAO,EAAI,EACxC,IAAIyF,EACAhF,EACJ,MAAMiF,EAAiBvR,IACnBsR,EAAOhF,EACPA,EAAUtM,EACVmJ,GAAW,QAAkBnJ,EAAIsR,GAAM,WAAe3H,QACrC,IAAZ0H,GAAiBrR,EAAIoR,IACR,IAAbC,GAAkBrR,EAAIoR,IACvBD,EAAY,CAAEnM,KAAMhF,EAAGyD,GAAI2N,EAAUjI,YACzC,EAEJ+H,EAAe,CACX9N,KAAM,QACN4B,OACAmE,WACA4D,eACAnL,QACAmJ,YACAiC,eACA0B,SAAUsC,EAAcnK,GAAU0K,OAAgBzO,GAE1D,CACA,MAAO,CACHhF,KAAM,IAAMiT,aAA2D,EAASA,EAAiBjT,OAEzG,CD4Dc0T,CAAQ,IAAK7G,KAAY0F,IACzBxU,GAAQ,IACH+T,GAA6BS,EAAiB1F,EAAS3H,GAC1D0L,SAAW1O,IACP2K,EAAQ+D,SAAS1O,GACjBqQ,EAAgB3B,UAAY2B,EAAgB3B,SAAS1O,EAAE,EAE3DwO,WAAY,KACR7D,EAAQ6D,aACR6B,EAAgB7B,YAAc6B,EAAgB7B,YAAY,GAG1E,EACA,WACI,MAAMiD,GAAc,OAA6B5K,GAKjD,OAJApN,EAAMoE,IAAI4T,GACVjD,IACA6B,EAAgB3B,UAAY2B,EAAgB3B,SAAS+C,GACrDpB,EAAgB7B,YAAc6B,EAAgB7B,aACvC,CAAE1Q,KAAM,OACnB,CAMJ,CACA,SAAS2S,GAAOhX,GACZ,OAAkB,IAAVA,GACc,iBAAVA,GACkB,IAAtBiY,WAAWjY,KACa,IAAxBA,EAAMU,QAAQ,IAC1B,CACA,SAASuW,GAAYiB,GACjB,MAAoC,iBAAtBA,EACR,GACA,OAAkB,GAAIA,EAChC,CACA,SAASrB,GAAmBvU,EAAYiH,GACpC,OAAOjH,EAAWiH,IAAQjH,EAAoB,SAAKA,CACvD,CAKA,SAASmV,GAAelO,EAAKvJ,EAAOoN,EAAQ9K,EAAa,CAAC,GAItD,OAHI6I,IACA7I,EAAa,CAAEqH,MAAM,IAElB3J,EAAM0D,OAAOqR,IAChB,IAAI1R,EACJ,MAAMc,EAAYwS,GAAapN,EAAKvJ,EAAOoN,EAAQ9K,EAAYyS,GACzDoD,EArHd,SAAgC7V,EAAYiH,GACxC,IAAIvI,EAAIkU,EAER,OAAiG,QAAzFA,EAAsC,QAAhClU,GADU6V,GAAmBvU,EAAYiH,IAAQ,CAAC,GAC7B4K,aAA0B,IAAPnT,EAAgBA,EAAKsB,EAAW6R,aAA0B,IAAPe,EAAgBA,EAAK,CAClI,CAiHwBkD,CAAuB9V,EAAYiH,GAC7C7F,EAAQ,IAAOL,EAAWc,IAChC,IAAIkU,EAOJ,OANIF,EACAE,GAAc,EAAAlE,EAAA,GAAMzQ,GAAO,OAAsByU,IAGjDzU,IAEG,KACH2U,GAAeA,IACfhV,GAAYA,EAASgB,MAAM,CAC9B,GAET,C,+HE7MA,MAAMwE,EAAUvI,GAAM,EAAIoH,KAAK4K,IAAI5K,KAAK4Q,KAAKhY,IACvCyI,GAAU,OAAcF,GACxBC,GAAY,OAAaC,E,sDCH/B,MAAMwP,EAAgBlJ,GAAY/O,GAAMA,GAAK,GAAM+O,EAAO,EAAI/O,GAAK,GAAK,EAAI+O,EAAO,GAAK,EAAI/O,KAAO,C,uDCAnG,MAAMkY,EAAiBnJ,GAAY/O,GAAM,EAAI+O,EAAO,EAAI/O,E,sECGxD,MAAMmY,GAAsB,IAAAlZ,eAAc,CACtCmZ,mBAAqBpY,GAAMA,EAC3BqY,UAAU,EACVC,cAAe,UCNbC,GAAgB,IAAAtZ,eAAc,CAAC,GCGrC,MAAM,GAAkB,IAAAA,eAAc,MCLhCuZ,EAAgC,oBAAbC,SCGnBC,EAA4BF,EAAY,EAAAG,gBAAkB,EAAAxU,UCD1DyU,GAAc,IAAA3Z,eAAc,CAAE4Z,QAAQ,ICK5C,SAASC,EAAiBC,EAAWC,EAAapY,EAAOqY,GACrD,MAAMC,GLJC,IAAApY,YAAWyX,GAAetV,cKK3BkW,GAAc,IAAArY,YAAW8X,GACzBQ,GAAkB,IAAAtY,YAAW,GAC7BuY,GAAsB,IAAAvY,YAAWqX,GAAqBG,cACtDgB,GAAmB,IAAAC,UAIzBN,EAAsBA,GAAuBE,EAAYK,UACpDF,EAAiB/G,SAAW0G,IAC7BK,EAAiB/G,QAAU0G,EAAoBF,EAAW,CACtDC,cACAE,SACAtY,QACA6Y,WAAYL,EAAkBA,EAAgBM,QAAK3Q,EACnD4Q,wBAAuBP,IACW,IAA5BA,EAAgBQ,QAEtBP,yBAGR,MAAMpW,EAAgBqW,EAAiB/G,QAUvC,OATAmG,GAA0B,KACtBzV,GAAiBA,EAAc4W,QAAQ,KAE3C,IAAA1V,YAAU,KACFlB,GAAiBA,EAAc6W,gBAC/B7W,EAAc6W,eAAeC,gBACjC,IAEJrB,GAA0B,IAAM,IAAMzV,GAAiBA,EAAc+W,OAAO,YAAY,IACjF/W,CACX,CCxCA,SAASgX,EAAYC,GACjB,MAAuB,iBAARA,GACX1a,OAAOS,UAAUC,eAAeC,KAAK+Z,EAAK,UAClD,CCAA,SAASC,EAAelU,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASmU,EAAoBnU,GACzB,MAAoB,iBAANA,GAAqC,mBAAZA,EAAE7C,KAC7C,CCCA,MAAMiX,EAAe,CACjB,UACA,UACA,OACA,aACA,YACA,WACA,aACA,eAEJ,SAASC,EAAsB1Z,GAC3B,OAAQwZ,EAAoBxZ,EAAMkB,UAC9BuY,EAAavJ,MAAMnQ,GAASwZ,EAAevZ,EAAMD,KACzD,CACA,SAAS4Z,EAAc3Z,GACnB,OAAO+K,QAAQ2O,EAAsB1Z,IAAUA,EAAM4Z,SACzD,CCfA,SAASC,EAAuB7Z,GAC5B,MAAM,QAAEgZ,EAAO,QAAE9X,GCFrB,SAAgClB,EAAO8Z,GACnC,GAAIJ,EAAsB1Z,GAAQ,CAC9B,MAAM,QAAEgZ,EAAO,QAAE9X,GAAYlB,EAC7B,MAAO,CACHgZ,SAAqB,IAAZA,GAAqBO,EAAeP,GACvCA,OACA7Q,EACNjH,QAASqY,EAAerY,GAAWA,OAAUiH,EAErD,CACA,OAAyB,IAAlBnI,EAAM+Z,QAAoBD,EAAU,CAAC,CAChD,CDTiCE,CAAuBha,GAAO,IAAAE,YAAWyX,IACtE,OAAO,IAAAsC,UAAQ,KAAM,CAAGjB,UAAS9X,aAAY,CAACgZ,EAA0BlB,GAAUkB,EAA0BhZ,IAChH,CACA,SAASgZ,EAA0BC,GAC/B,OAAO7U,MAAMC,QAAQ4U,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAoBC,IAAc,CACpCC,UAAYva,GAAUsa,EAAUpK,MAAMnQ,KAAWC,EAAMD,OAErDya,EAAqB,CACvBC,cAAeJ,EAAiB,CAAC,SAAU,WAAY,SACvDpX,UAAWoX,EAAiB,CACxB,UACA,OACA,WACA,aACA,WACA,aACA,YACA,gBAEJK,KAAML,EAAiB,CAAC,SACxBM,KAAMN,EAAiB,CAAC,OAAQ,iBAChCO,MAAOP,EAAiB,CAAC,eACzBQ,MAAOR,EAAiB,CAAC,aAAc,eAAgB,eACvDS,IAAKT,EAAiB,CAAC,WAAY,QAAS,aAAc,gBAC1DU,IAAKV,EAAiB,CAClB,QACA,aACA,oBACA,aAEJW,OAAQX,EAAiB,CACrB,cACA,kBACA,qB,cCxBR,MAAMY,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZpB,IAAIrC,EAAK,ECDT,MAAMsC,GAAqB,IAAA/c,eAAc,CAAC,GCA1C,MAAMgd,UAA6B,YAI/BC,0BACI,MAAM,cAAEjZ,EAAa,MAAErC,GAAUub,KAAKvb,MAGtC,OAFIqC,GACAA,EAAcmZ,SAASxb,GACpB,IACX,CACAyb,qBAAuB,CACvBxC,SACI,OAAOsC,KAAKvb,MAAMxB,QACtB,ECVJ,MAAMkd,GAA2B,IAAArd,eAAc,CAAC,GCL1Csd,EAAwBC,OAAOC,IAAI,yBC0BzC,SAAS,GAAsB,kBAAEC,EAAiB,oBAAEzD,EAAmB,0BAAE0D,EAAyB,UAAEC,EAAS,eAAEC,EAAc,UAAE9D,IAC3H2D,GCzBJ,SAAsBI,GAClB,IAAK,MAAM7T,KAAO6T,EACF,8BAAR7T,EACAmS,EAAmBuB,0BAA4BG,EAAS7T,GAGxDmS,EAAmBnS,GAAK8P,UAAY+D,EAAS7T,EAGzD,CDgByB8T,CAAaL,GAuDlC,MAAMM,GAAsB,IAAAC,aAtD5B,SAAyBrc,EAAOsc,GAC5B,MAAMC,EAAiB,KAChB,IAAArc,YAAWqX,MACXvX,EACHwc,SAAUC,EAAYzc,KAEpB,SAAEyX,GAAa8E,EACrB,IAAIL,EAAW,KACf,MAAMpC,EAAUD,EAAuB7Z,GAYjC0c,EAAejF,OAAWtP,GL3C7B,QAAY,KACf,GAAI8S,EAAsBE,eACtB,OAAOrC,GACX,IK4CMV,EAAc6D,EAAejc,EAAOyX,GAC1C,IAAKA,GAAYG,EAAW,CAOxBkC,EAAQzX,cAAgB6V,EAAiBC,EAAWC,EAAamE,EAAgBlE,GAKjF,MAAMsE,GAAiB,IAAAzc,YAAW8X,GAAaC,OACzC2E,GAA2B,IAAA1c,YAAWwb,GACxC5B,EAAQzX,gBACR6Z,EAAWpC,EAAQzX,cAAc8Z,aAEjCI,EAAgBI,EAAgBb,EAAmBY,EAAcX,GAC7DvB,EAAmBuB,0BAA2Ba,GAE1D,CAKA,OAAQ,gBAAoBvB,EAAsB,CAAEhZ,cAAeyX,EAAQzX,cAAerC,MAAOuc,GAC7FL,EACA,gBAAoBvE,EAAchZ,SAAU,CAAEG,MAAOgb,GAAWkC,EAAU7D,EAAWnY,EAAO0c,EEzExG,SAAsBtE,EAAa/V,EAAeia,GAC9C,OAAO,IAAAO,cAAaC,IAChBA,GAAY1E,EAAYhV,OAASgV,EAAYhV,MAAM0Z,GAC/Cza,IACAya,EACMza,EAAce,MAAM0Z,GACpBza,EAAc0a,WAEpBT,IAC2B,mBAAhBA,EACPA,EAAYQ,GAEPzD,EAAYiD,KACjBA,EAAY3K,QAAUmL,GAE9B,GAOJ,CAACza,GACL,CFkDsH2a,CAAa5E,EAAa0B,EAAQzX,cAAeia,GAAclE,EAAaX,EAAUqC,EAAQzX,gBAChN,IAGA,OADA+Z,EAAoBT,GAAyBxD,EACtCiE,CACX,CACA,SAASK,GAAY,SAAED,IACnB,MAAMS,GAAgB,IAAA/c,YAAWkb,GAAoBtC,GACrD,OAAOmE,QAA8B9U,IAAbqU,EAClBS,EAAgB,IAAMT,EACtBA,CACV,CG3EA,SAASU,EAAkBC,GACvB,SAASC,EAAOjF,EAAWkF,EAA8B,CAAC,GACtD,OAAO,EAAsBF,EAAahF,EAAWkF,GACzD,CACA,GAAqB,oBAAVC,MACP,OAAOF,EAMX,MAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBxH,IAAK,CAAC6H,EAASpV,KAINkV,EAAeG,IAAIrV,IACpBkV,EAAera,IAAImF,EAAK+U,EAAO/U,IAE5BkV,EAAe3H,IAAIvN,KAGtC,CCxCA,MAAMsV,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,OACA,QACA,MACA,QC1BJ,SAASC,EAAezF,GACpB,MAKqB,iBAAdA,IAIHA,EAAU0F,SAAS,SAOvBF,EAAqBne,QAAQ2Y,IAAc,GAIvC,QAAQrN,KAAKqN,GAIrB,CC3BA,MAAM2F,EAAkB,CAAC,E,cCGzB,SAASC,EAAoB1V,GAAK,OAAE2V,EAAM,SAAExB,IACxC,OAAQ,QAAmBnU,IACvBA,EAAIE,WAAW,YACbyV,QAAuB7V,IAAbqU,OACLsB,EAAgBzV,IAAgB,YAARA,EACvC,C,aCNA,MAAM4V,EAAiB,CACnB9X,EAAG,aACHiD,EAAG,aACHC,EAAG,aACH6U,qBAAsB,eAKpBC,EAAqB,CAAClP,EAAGC,IAAM,YAA2BD,GAAK,YAA2BC,GCRhG,SAASkP,EAAc/V,GACnB,OAAOA,EAAIE,WAAW,KAC1B,CCFA,MAAM8V,EAAiB,CAACvf,EAAO2J,IACpBA,GAAyB,iBAAV3J,EAChB2J,EAAK6V,UAAUxf,GACfA,E,cCAV,SAASyf,EAAgBlO,EAAOmO,EAAcxO,EAASyO,GACnD,MAAM,MAAE9Z,EAAK,KAAE+Z,EAAI,UAAEJ,EAAS,cAAEK,EAAa,gBAAEC,GAAoBvO,EACnEsO,EAAchf,OAAS,EAEvB,IAAIkf,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAM1W,KAAOmW,EAAc,CAC5B,MAAM1f,EAAQ0f,EAAanW,GAI3B,GAAI+V,EAAc/V,GAAM,CACpBqW,EAAKrW,GAAOvJ,EACZ,QACJ,CAEA,MAAMkgB,EAAYC,EAAA,EAAiB5W,GAC7B6W,EAAcb,EAAevf,EAAOkgB,GAC1C,GAAI,QAAmB3W,GAAM,CAMzB,GAJAwW,GAAe,EACfP,EAAUjW,GAAO6W,EACjBP,EAAc9b,KAAKwF,IAEd0W,EACD,SAEAjgB,KAAWkgB,EAAUnV,SAAW,KAChCkV,GAAkB,EAC1B,MACS1W,EAAIE,WAAW,WAEpBuW,GAAqB,EACrBF,EAAgBvW,GAAO6W,GAGvBva,EAAM0D,GAAO6W,CAErB,CAiBA,GAhBKV,EAAaF,YACVO,GAAgBJ,EAChB9Z,EAAM2Z,UHrClB,UAAwB,UAAEA,EAAS,cAAEK,IAAkB,2BAAEQ,GAA6B,EAAI,mBAAEC,GAAqB,GAASC,EAAoBZ,GAE1I,IAAIa,EAAkB,GAEtBX,EAAcY,KAAKpB,GAEnB,IAAK,MAAM9V,KAAOsW,EACdW,GAAmB,GAAGrB,EAAe5V,IAAQA,KAAOiW,EAAUjW,OAclE,OAZI8W,IAA+Bb,EAAUjV,IACzCiW,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bf,EACAa,EAAkBb,EAAkBH,EAAWe,EAAqB,GAAKC,GAEpEF,GAAsBC,IAC3BC,EAAkB,QAEfA,CACX,CGe8BG,CAAepP,EAAOL,EAAS+O,EAAiBN,GAE7D9Z,EAAM2Z,YAKX3Z,EAAM2Z,UAAY,SAOtBQ,EAAoB,CACpB,MAAM,QAAEY,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOhB,EAC3Dja,EAAMia,gBAAkB,GAAGc,KAAWC,KAAWC,GACrD,CACJ,CCzEA,MAAMC,EAAwB,KAAM,CAChClb,MAAO,CAAC,EACR2Z,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,ICCX,SAASoB,EAAkB5T,EAAQ6T,EAAQ/f,GACvC,IAAK,MAAMqI,KAAO0X,GACT,IAAArgB,GAAcqgB,EAAO1X,KAAU0V,EAAoB1V,EAAKrI,KACzDkM,EAAO7D,GAAO0X,EAAO1X,GAGjC,CAQA,SAAS2X,EAAShgB,EAAOoY,EAAaX,GAClC,MACM9S,EAAQ,CAAC,EAMf,OAFAmb,EAAkBnb,EALA3E,EAAM2E,OAAS,CAAC,EAKE3E,GACpCpB,OAAOC,OAAO8F,EAdlB,UAAgC,kBAAE8Z,GAAqBrG,EAAaX,GAChE,OAAO,IAAAwC,UAAQ,KACX,MAAM5J,EDfsB,CAChC1L,MAAO,CAAC,EACR2Z,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,GCYH,OADAH,EAAgBlO,EAAO+H,EAAa,CAAE+G,4BAA6B1H,GAAYgH,GACxE7f,OAAOC,OAAO,CAAC,EAAGwR,EAAMqO,KAAMrO,EAAM1L,MAAM,GAClD,CAACyT,GACR,CAQyB6H,CAAuBjgB,EAAOoY,EAAaX,IACzDzX,EAAMkgB,gBAAkBlgB,EAAMkgB,gBAAgBvb,GAASA,CAClE,CACA,SAASwb,EAAangB,EAAOoY,EAAaX,GAEtC,MAAM2I,EAAY,CAAC,EACbzb,EAAQqb,EAAShgB,EAAOoY,EAAaX,GAgB3C,OAfIzX,EAAM2a,OAA+B,IAAvB3a,EAAMqgB,eAEpBD,EAAUE,WAAY,EAEtB3b,EAAM4b,WACF5b,EAAM6b,iBACF7b,EAAM8b,mBACF,OAEZ9b,EAAM+b,aACa,IAAf1gB,EAAM2a,KACA,OACA,QAAsB,MAAf3a,EAAM2a,KAAe,IAAM,MAEhDyF,EAAUzb,MAAQA,EACXyb,CACX,CClDA,MAwBMO,EAAmB,IAAIze,IAAI,CAC7B,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,SACA,WACA,mBACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,OACA,eACA,eACA,kBACA,oBACA,mBACA,SACA,SACA,cACA,eACA,kBACA,iBACA,eACA,aACA,eAnDA,cACA,kBACA,kBACA,WANc,WAAY,QAAS,aAAc,cATjD,UACA,OACA,WACA,aACA,WACA,aACA,YACA,cAGc,QAAS,aAAc,oBAAqB,aAmE9D,SAAS0e,EAAkBvY,GACvB,OAAOsY,EAAiBjD,IAAIrV,EAChC,CC9EA,IAAIwY,EAAiBxY,IAASuY,EAAkBvY,GAoBhD,KAnBiCyY,EAyBLC,QAAQ,0BAA0BlX,WArB1DgX,EAAiBxY,GAAQA,EAAIE,WAAW,OAASqY,EAAkBvY,GAAOyY,EAAYzY,GAyB1F,CAFA,MAAOvI,IAEP,CA7BA,IAAiCghB,E,cCDjC,SAASE,EAAW/U,EAAQuG,EAAQyO,GAChC,MAAyB,iBAAXhV,EACRA,EACA,EAAAiV,GAAA,UAAa1O,EAASyO,EAAOhV,EACvC,CCJA,MAAMkV,EAAW,CACb3O,OAAQ,oBACR4O,MAAO,oBAELC,GAAY,CACd7O,OAAQ,mBACR4O,MAAO,mBCDX,SAASE,GAAcjR,GAAO,MAAEkR,EAAK,MAAEC,EAAK,QAAE9B,EAAO,QAAEC,EAAO,WAAE8B,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAEvGzN,GAAUlE,EAASyO,GAClBF,EAAgBlO,EAAO6D,EAAQlE,EAASyO,GACxCpO,EAAMuR,MAAQvR,EAAM1L,MACpB0L,EAAM1L,MAAQ,CAAC,EACf,MAAM,MAAEid,EAAK,MAAEjd,EAAK,WAAEkd,GAAexR,EAKjCuR,EAAMtD,YACFuD,IACAld,EAAM2Z,UAAYsD,EAAMtD,kBACrBsD,EAAMtD,WAGbuD,SACa1Z,IAAZuX,QAAqCvX,IAAZwX,GAAyBhb,EAAM2Z,aACzD3Z,EAAMia,gBFfd,SAAgCiD,EAAYnC,EAASC,GAGjD,MAAO,GAFWqB,EAAWtB,EAASmC,EAAW1b,EAAG0b,EAAWngB,UAC7Csf,EAAWrB,EAASkC,EAAWzY,EAAGyY,EAAW1gB,SAEnE,CEWgC2gB,CAAuBD,OAAwB1Z,IAAZuX,EAAwBA,EAAU,QAAiBvX,IAAZwX,EAAwBA,EAAU,UAG1HxX,IAAVoZ,IACAK,EAAMzb,EAAIob,QACApZ,IAAVqZ,IACAI,EAAMxY,EAAIoY,QAEKrZ,IAAfsZ,GDjBR,SAAsBG,EAAOjiB,EAAQoiB,EAAU,EAAGvP,EAAS,EAAGwP,GAAc,GAExEJ,EAAMH,WAAa,EAGnB,MAAMxR,EAAO+R,EAAcb,EAAWE,GAEtCO,EAAM3R,EAAKuC,QAAU,EAAA0O,GAAA,WAAc1O,GAEnC,MAAMiP,EAAa,EAAAP,GAAA,UAAavhB,GAC1B+hB,EAAc,EAAAR,GAAA,UAAaa,GACjCH,EAAM3R,EAAKmR,OAAS,GAAGK,KAAcC,GACzC,CCMQO,CAAaL,EAAOH,EAAYC,EAAaC,GAAY,EAEjE,CCnCA,MAAMO,GAAuB,KAAM,CPD/Bvd,MAAO,CAAC,EACR2Z,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EODPkD,MAAO,CAAC,ICCZ,SAASO,GAAYniB,EAAOoY,GACxB,MAAMgK,GAAc,IAAAnI,UAAQ,KACxB,MAAM5J,EDLqB,CPD/B1L,MAAO,CAAC,EACR2Z,UAAW,CAAC,EACZK,cAAe,GACfC,gBAAiB,CAAC,EAClBF,KAAM,CAAC,EODPkD,MAAO,CAAC,GCKJ,OADAN,GAAcjR,EAAO+H,EAAa,CAAE+G,4BAA4B,GAASnf,EAAMye,mBACxE,IACApO,EAAMuR,MACTjd,MAAO,IAAK0L,EAAM1L,OACrB,GACF,CAACyT,IACJ,GAAIpY,EAAM2E,MAAO,CACb,MAAM0d,EAAY,CAAC,EACnBvC,EAAkBuC,EAAWriB,EAAM2E,MAAO3E,GAC1CoiB,EAAYzd,MAAQ,IAAK0d,KAAcD,EAAYzd,MACvD,CACA,OAAOyd,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAiB1C,MAhBkB,CAACpK,EAAWnY,EAAO0c,EAAcpD,GAAOkF,gBAAgB/G,KACtE,MAGM2K,GAHiBxE,EAAezF,GAChCgK,GACAhC,GAC6BngB,EAAOwe,EAAc/G,GAClD+K,ENqBd,SAAqBxiB,EAAOyiB,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMna,KAAOrI,GACV6gB,EAAcxY,KACU,IAAvBka,GAA+B3B,EAAkBvY,KAChDoa,IAAU7B,EAAkBvY,IAE7BrI,EAAiB,WAAKqI,EAAIE,WAAW,aACtCia,EAAcna,GAAOrI,EAAMqI,IAGnC,OAAOma,CACX,CMjC8BE,CAAY1iB,EAA4B,iBAAdmY,EAAwBoK,GAClEI,EAAe,IACdH,KACAJ,EACH9I,OAKJ,OAHIoD,IACAiG,EAAa,sBAAwBjG,IAElC,IAAAkG,eAAczK,EAAWwK,EAAa,CAGrD,CCrBA,MAAME,GAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAASC,cCHrE,SAASC,GAAWC,GAAS,MAAEve,EAAK,KAAE+Z,GAAQyE,EAAWC,GACrDxkB,OAAOC,OAAOqkB,EAAQve,MAAOA,EAAOye,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAM9a,KAAOqW,EACdwE,EAAQve,MAAM2e,YAAYjb,EAAKqW,EAAKrW,GAE5C,CCHA,MAAMkb,GAAsB,IAAIrhB,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,eCnBJ,SAASshB,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAatb,EAAWib,GAC5C,IAAK,MAAM/a,KAAOob,EAAY7B,MAC1BsB,EAAQS,aAAcJ,GAAoB7F,IAAIrV,GAA0BA,EAAnBwa,GAAYxa,GAAYob,EAAY7B,MAAMvZ,GAEvG,CCNA,SAASub,GAA4B5jB,GACjC,MAAM,MAAE2E,GAAU3E,EACZ6jB,EAAY,CAAC,EACnB,IAAK,MAAMxb,KAAO1D,IACV,IAAAjF,GAAciF,EAAM0D,KAAS0V,EAAoB1V,EAAKrI,MACtD6jB,EAAUxb,GAAO1D,EAAM0D,IAG/B,OAAOwb,CACX,CCTA,SAAS,GAA4B7jB,GACjC,MAAM6jB,EAAYD,GAA8B5jB,GAChD,IAAK,MAAMqI,KAAOrI,EACd,IAAI,IAAAN,GAAcM,EAAMqI,IAAO,CAE3Bwb,EAD0B,MAARxb,GAAuB,MAARA,EAAc,OAASA,EAAIyb,cAAgBzb,GACrDrI,EAAMqI,EACjC,CAEJ,OAAOwb,CACX,C,0BCJA,SAASE,GAAmBjlB,GACxB,MAAMklB,GAAiB,IAAAtkB,GAAcZ,GAASA,EAAM8W,MAAQ9W,EAC5D,OAAO,QAAcklB,GACfA,EAAeC,UACfD,CACV,CCMA,MAAME,GAAsBC,GAAW,CAACnkB,EAAOyX,KAC3C,MAAMqC,GAAU,IAAA5Z,YAAWyX,GACrBa,GAAkB,IAAAtY,YAAW,GAC7BkkB,EAAO,IAbjB,UAAmB,4BAAER,EAA2B,kBAAES,EAAiB,QAAEC,GAAYtkB,EAAO8Z,EAAStB,GAC7F,MAAMnI,EAAQ,CACVmO,aAAc+F,GAAiBvkB,EAAO8Z,EAAStB,EAAiBoL,GAChEH,YAAaY,KAKjB,OAHIC,IACAjU,EAAMjN,MAAS0Z,GAAawH,EAAQtkB,EAAO8c,EAAUzM,IAElDA,CACX,CAIuBmU,CAAUL,EAAQnkB,EAAO8Z,EAAStB,GACrD,OAAOf,EAAW2M,KAAS,OAAYA,EAAK,EAEhD,SAASG,GAAiBvkB,EAAO8Z,EAAStB,EAAiBiM,GACvD,MAAMvb,EAAS,CAAC,EACVwb,EAAeD,EAAmBzkB,GACxC,IAAK,MAAMqI,KAAOqc,EACdxb,EAAOb,GAAO0b,GAAmBW,EAAarc,IAElD,IAAI,QAAE2Q,EAAO,QAAE9X,GAAYlB,EAC3B,MAAM2kB,EAA0BjL,EAAsB1Z,GAChD4kB,EAAkBjL,EAAc3Z,GAClC8Z,GACA8K,IACCD,IACiB,IAAlB3kB,EAAM+Z,eACU5R,IAAZ6Q,IACAA,EAAUc,EAAQd,cACN7Q,IAAZjH,IACAA,EAAU4Y,EAAQ5Y,UAE1B,IAAI2jB,IAA4BrM,IACE,IAA5BA,EAAgBQ,QAEtB6L,EAA4BA,IAAyC,IAAZ7L,EACzD,MAAM8L,EAAeD,EAA4B3jB,EAAU8X,EAC3D,GAAI8L,GACwB,kBAAjBA,IACNtL,EAAoBsL,GAAe,EACvBxf,MAAMC,QAAQuf,GAAgBA,EAAe,CAACA,IACtDliB,SAASH,IACV,MAAMsiB,GAAW,QAAwB/kB,EAAOyC,GAChD,IAAKsiB,EACD,OACJ,MAAM,cAAEC,EAAa,WAAE5jB,KAAe8K,GAAW6Y,EACjD,IAAK,MAAM1c,KAAO6D,EAAQ,CACtB,IAAI+Y,EAAc/Y,EAAO7D,GACzB,GAAI/C,MAAMC,QAAQ0f,GAAc,CAQ5BA,EAAcA,EAHAJ,EACRI,EAAYtlB,OAAS,EACrB,EAEV,CACoB,OAAhBslB,IACA/b,EAAOb,GAAO4c,EAEtB,CACA,IAAK,MAAM5c,KAAO2c,EACd9b,EAAOb,GAAO2c,EAAc3c,EAAI,GAE5C,CACA,OAAOa,CACX,CCxEA,MAAMgc,GAAkB,CACpBjJ,eAAgBiI,GAAmB,CAC/BN,4BAA6B,GAC7BS,kBAAmBnC,GACnBoC,QAAS,CAACtkB,EAAO8c,GAAY2G,cAAajF,mBACtC,IACIiF,EAAY5B,WAEJ,mBADG/E,EAASqI,QAEVrI,EAASqI,UACTrI,EAASsI,uBAUvB,CARA,MAAOlmB,GAEHukB,EAAY5B,WAAa,CACrB1b,EAAG,EACHiD,EAAG,EACH1H,MAAO,EACPP,OAAQ,EAEhB,CACAmgB,GAAcmC,EAAajF,EAAc,CAAEW,4BAA4B,GAASnf,EAAMye,mBACtF+E,GAAU1G,EAAU2G,EAAY,KCxBtC4B,GAAmB,CACrBpJ,eAAgBiI,GAAmB,CAC/BN,4BAA2B,GAC3BS,kBAAmBxE,KCP3B,IAAIyF,GCEJ,SAASC,GAAYrZ,EAAQsZ,EAAWC,EAASzV,EAAU,CAAE0V,SAAS,IAElE,OADAxZ,EAAOyZ,iBAAiBH,EAAWC,EAASzV,GACrC,IAAM9D,EAAO0Z,oBAAoBJ,EAAWC,EACvD,CAsBA,SAASI,GAAYvM,EAAKkM,EAAWC,EAASzV,IAC1C,IAAAzM,YAAU,KACN,MAAM2f,EAAU5J,EAAI3H,QACpB,GAAI8T,GAAWvC,EACX,OAAOqC,GAAYrC,EAASsC,EAAWC,EAASzV,EACpD,GACD,CAACsJ,EAAKkM,EAAWC,EAASzV,GACjC,CClCA,SAAS8V,GAAaC,GAElB,MAA4B,oBAAjBC,cAAgCD,aAAiBC,eACxB,UAAtBD,EAAME,aAEbF,aAAiBG,UAC5B,CACA,SAASC,GAAaJ,GAElB,QADqBA,EAAMK,OAE/B,EFTA,SAAWd,GACPA,EAAuB,QAAI,UAC3BA,EAAqB,MAAI,aACzBA,EAAmB,IAAI,WACvBA,EAAoB,KAAI,YACxBA,EAAqB,MAAI,aACzBA,EAAsB,OAAI,cAC1BA,EAAoB,KAAI,MAC3B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IGOtC,MAAMe,GAAmB,CAAEC,MAAO,EAAGC,MAAO,GAC5C,SAASC,GAAetnB,EAAGunB,EAAY,QACnC,MACMC,EADexnB,EAAEknB,QAAQ,IAAMlnB,EAAEynB,eAAe,IACxBN,GAC9B,MAAO,CACHlgB,EAAGugB,EAAMD,EAAY,KACrBrd,EAAGsd,EAAMD,EAAY,KAE7B,CACA,SAASG,GAAeF,EAAOD,EAAY,QACvC,MAAO,CACHtgB,EAAGugB,EAAMD,EAAY,KACrBrd,EAAGsd,EAAMD,EAAY,KAE7B,CACA,SAASI,GAAiBd,EAAOU,EAAY,QACzC,MAAO,CACHC,MAAOP,GAAaJ,GACdS,GAAeT,EAAOU,GACtBG,GAAeb,EAAOU,GAEpC,CACA,MAAMK,GAAc,CAACrB,EAASsB,GAA6B,KACvD,MAAMC,EAAYjB,GAAUN,EAAQM,EAAOc,GAAiBd,IAC5D,OAAOgB,GAlCmBE,EAmCCD,EAlCnBjB,IACJ,MAAMD,EAAeC,aAAiBG,aACZJ,GACrBA,GAAiC,IAAjBC,EAAMmB,SAEvBD,EAAalB,EACjB,GA6BEiB,EApCV,IAA8BC,CAoCZ,ECtCZE,GAAkB,CACpBC,YAAa,YACbC,YAAa,YACbC,UAAW,UACXC,cAAe,cACfC,YAAa,YACbC,WAAY,WACZC,aAAc,aACdC,aAAc,cAEZC,GAAkB,CACpBR,YAAa,aACbC,YAAa,YACbC,UAAW,WACXC,cAAe,eAEnB,SAASM,GAAoB9nB,GACzB,OClBgC6X,GAAsC,OAAzBkQ,OAAOC,cDmBzChoB,EClBmB6X,GAAqC,OAAxBkQ,OAAOE,aDqBvCJ,GAAgB7nB,GCpBG6X,GAAoC,OAAvBkQ,OAAOG,YDuBvCd,GAAgBpnB,GAEpBA,CACX,CACA,SAASmoB,GAAgBhc,EAAQsZ,EAAWC,EAASzV,GACjD,OAAOuV,GAAYrZ,EAAQ2b,GAAoBrC,GAAYsB,GAAYrB,EAAuB,gBAAdD,GAA8BxV,EAClH,CACA,SAASmY,GAAgB7O,EAAKkM,EAAWC,EAASzV,GAC9C,OAAO6V,GAAYvM,EAAKuO,GAAoBrC,GAAYC,GAAWqB,GAAYrB,EAAuB,gBAAdD,GAA8BxV,EAC1H,CErCA,SAASoY,GAAWroB,GAChB,IAAIsoB,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOtoB,EACAuoB,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAc9N,GACnB,IAAI0N,GAAO,EACX,GAAa,MAAT1N,EACA0N,EAAOG,UAEN,GAAa,MAAT7N,EACL0N,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CC7CA,SAASC,GAAiBzmB,EAAe0mB,EAAUC,GAC/C,MAAO,CAACjD,EAAOkD,KACNnD,GAAaC,KAAU6C,OAKxBvmB,EAAc6W,gBACd7W,EAAc6W,eAAegQ,UAAU5D,GAAc6D,MAAOJ,GAEhEC,GAAYA,EAASjD,EAAOkD,GAAK,CAEzC,CCVA,MAAMG,GAAgB,CAAC9Q,EAAQ+Q,MACtBA,IAGI/Q,IAAW+Q,GAITD,GAAc9Q,EAAQ+Q,EAAMC,gBCb3C,SAASC,GAAiBP,GACtB,OAAO,IAAAzlB,YAAU,IAAM,IAAMylB,KAAY,GAC7C,C,eCJe,IAAI9mB,ICKnB,MAAMsnB,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMZ,EAAWQ,GAAkB5T,IAAIgU,EAAM1d,QAC7C8c,GAAYA,EAASY,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQlnB,QAAQ+mB,GAAqB,EAqBzC,SAASI,GAAoB7G,EAASlT,EAASgZ,GAC3C,MAAMgB,EApBV,UAAkC,KAAEC,KAASja,IACzC,MAAMka,EAAaD,GAAQpS,SAItB6R,GAAUhM,IAAIwM,IACfR,GAAUxmB,IAAIgnB,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAU9T,IAAIsU,GAC9B7hB,EAAM+hB,KAAKC,UAAUra,GAQ3B,OAHKma,EAAc9hB,KACf8hB,EAAc9hB,GAAO,IAAIiiB,qBAAqBT,GAA0B,CAAEI,UAASja,KAEhFma,EAAc9hB,EACzB,CAEsCkiB,CAAyBva,GAG3D,OAFAwZ,GAAkBtmB,IAAIggB,EAAS8F,GAC/BgB,EAA0BQ,QAAQtH,GAC3B,KACHsG,GAAkBjnB,OAAO2gB,GACzB8G,EAA0BS,UAAUvH,EAAQ,CAEpD,CC3BA,MAAMwH,GAAiB,CACnBxa,KAAM,EACNnN,IAAK,GAET,SAAS4nB,GAAwBC,EAAeva,EAAOhO,GAAe,KAAE4nB,EAAMY,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,KAC/G,IAAAznB,YAAU,KACN,IAAKqnB,IAAkBvoB,EAAcsP,QACjC,OACJ,MAAM3B,EAAU,CACZia,KAAMA,aAAmC,EAASA,EAAKtY,QACvDmZ,aACAG,UAA6B,iBAAXF,EAAsBA,EAASL,GAAeK,IAiCpE,OAAOhB,GAAoB1nB,EAAcsP,QAAS3B,GA/BpB4Z,IAC1B,MAAM,eAAEsB,GAAmBtB,EAI3B,GAAIvZ,EAAM8a,WAAaD,EACnB,OAMJ,GALA7a,EAAM8a,SAAWD,EAKbF,IAASE,GAAkB7a,EAAM+a,eACjC,OAEKF,IACL7a,EAAM+a,gBAAiB,GAEvB/oB,EAAc6W,gBACd7W,EAAc6W,eAAegQ,UAAU5D,GAAc+F,OAAQH,GAMjE,MAAMlrB,EAAQqC,EAAcipB,WACtBtC,EAAWkC,EACXlrB,EAAMurB,gBACNvrB,EAAMwrB,gBACZxC,GAAYA,EAASY,EAAM,GAEiD,GACjF,CAACgB,EAAeX,EAAMa,EAAYC,GACzC,CAMA,SAASU,GAA+Bb,EAAeva,EAAOhO,GAAe,SAAEqpB,GAAW,KACtF,IAAAnoB,YAAU,KACDqnB,GAAkBc,GAavBC,uBAAsB,KAClBtb,EAAM+a,gBAAiB,EACvB,MAAM,gBAAEG,GAAoBlpB,EAAcipB,WAC1CC,GAAmBA,EAAgB,MAC/BlpB,EAAc6W,gBACd7W,EAAc6W,eAAegQ,UAAU5D,GAAc+F,QAAQ,EACjE,GACF,GACH,CAACT,GACR,CC/FA,MAAMgB,GAA2BC,GAAU7rB,IACvC6rB,EAAK7rB,GACE,MCIL8rB,GAAoB,CACtB9Q,OAAQ4Q,IFDZ,UAAqB,cAAEvpB,EAAa,YAAE0pB,EAAW,gBAAER,EAAe,gBAAEC,EAAe,SAAEQ,EAAW,CAAC,IAC7F,MAAM3b,GAAQ,IAAAsI,QAAO,CACjByS,gBAAgB,EAChBD,UAAU,IAEd,IAAIP,EAAgB7f,QAAQghB,GAAeR,GAAmBC,GAC1DQ,EAAShB,MAAQ3a,EAAMsB,QAAQyZ,iBAC/BR,GAAgB,IACgC,oBAAzBN,qBACrBmB,GACAd,IACMC,EAAeva,EAAMsB,QAAStP,EAAe2pB,EAC7D,IEVIlR,IAAK8Q,ICIT,UAAuB,MAAE3qB,EAAK,WAAEgrB,EAAU,YAAEC,EAAW,SAAElrB,EAAQ,cAAEqB,IAC/D,MAAM8pB,EAAoBlrB,GAASgrB,GAAcC,GAAelrB,EAC1DorB,GAAa,IAAAzT,SAAO,GACpB0T,GAA4B,IAAA1T,QAAO,MAInC2T,EAAe,CACjB5G,UAAWuG,GAAchrB,GAASirB,GAAeK,IAErD,SAASC,IACLH,EAA0B1a,SAAW0a,EAA0B1a,UAC/D0a,EAA0B1a,QAAU,IACxC,CACA,SAAS8a,IAKL,OAJAD,IACAJ,EAAWza,SAAU,EACrBtP,EAAc6W,gBACV7W,EAAc6W,eAAegQ,UAAU5D,GAAcoH,KAAK,IACtD9D,IACZ,CACA,SAAS+D,EAAY5G,EAAOkD,GACnBwD,MAMJrD,GAAc/mB,EAAcsP,QAASoU,EAAM7Z,QAEtCjL,GAASA,EAAM8kB,EAAOkD,GADtBiD,GAAeA,EAAYnG,EAAOkD,GAE5C,CACA,SAAS2D,EAAgB7G,EAAOkD,GACvBwD,KAELP,GAAeA,EAAYnG,EAAOkD,EACtC,CACA,SAASsD,EAAcxG,EAAOkD,GAC1BuD,IACIJ,EAAWza,UAEfya,EAAWza,SAAU,EACrB0a,EAA0B1a,SAAU,EAAA1E,GAAA,GAAKib,GAAgBJ,OAAQ,YAAa6E,EAAaL,GAAepE,GAAgBJ,OAAQ,gBAAiB8E,EAAiBN,IAIpKjqB,EAAc6W,gBACV7W,EAAc6W,eAAegQ,UAAU5D,GAAcoH,KAAK,GAC9DT,GAAcA,EAAWlG,EAAOkD,GACpC,CACAd,GAAgB9lB,EAAe,cAAe8pB,EAAoBI,OAAgBpkB,EAAWmkB,GAC7F/C,GAAiBiD,EACrB,IDvDI5R,MAAOgR,IEAX,UAAyB,WAAEiB,EAAU,cAAExqB,IACnC,MAAM,eAAE6W,GAAmB7W,EAO3BwjB,GAAYxjB,EAAe,QAASwqB,EANpB,KACZ3T,GAAkBA,EAAegQ,UAAU5D,GAAcwH,OAAO,EAAK,OAKd3kB,GAC3D0d,GAAYxjB,EAAe,OAAQwqB,EAJpB,KACX3T,GAAkBA,EAAegQ,UAAU5D,GAAcwH,OAAO,EAAM,OAGjB3kB,EAC7D,IFTI0S,MAAO+Q,IPQX,UAAyB,aAAEmB,EAAY,WAAEC,EAAU,WAAElsB,EAAU,cAAEuB,IAC7D8lB,GAAgB9lB,EAAe,eAAgB0qB,GAAgBjsB,EACzDgoB,GAAiBzmB,GAAe,EAAM0qB,QACtC5kB,EAAW,CAAEud,SAAUqH,IAC7B5E,GAAgB9lB,EAAe,eAAgB2qB,GAAclsB,EACvDgoB,GAAiBzmB,GAAe,EAAO2qB,QACvC7kB,EAAW,CAAEud,SAAUsH,GACjC,KUCA,SAASC,KACL,MAAMnT,GAAU,IAAA5Z,YAAW,GAC3B,GAAgB,OAAZ4Z,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEoT,EAAS,eAAEC,EAAc,SAAEC,GAAatT,EAI1ChB,GAAK,IAAAuU,UACX,IAAA9pB,YAAU,IAAM6pB,EAAStU,IAAK,IAE9B,OAAQoU,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAerU,IACE,EAAC,EACnE,C,eCtCA,SAASwU,GAAe5b,EAAMiF,GAC1B,IAAKrR,MAAMC,QAAQoR,GACf,OAAO,EACX,MAAM4W,EAAa5W,EAAKhX,OACxB,GAAI4tB,IAAe7b,EAAK/R,OACpB,OAAO,EACX,IAAK,IAAID,EAAI,EAAGA,EAAI6tB,EAAY7tB,IAC5B,GAAIiX,EAAKjX,KAAOgS,EAAKhS,GACjB,OAAO,EAEf,OAAO,CACX,C,0BCHA,MAAM8tB,GAAuB,CACzBlI,GAAcmI,QACdnI,GAAc+F,OACd/F,GAAcwH,MACdxH,GAAc6D,MACd7D,GAAcoH,IACdpH,GAAcoI,KACdpI,GAAcqI,MAEZC,GAAuB,IAAIJ,IAAsB3mB,UACjDgnB,GAAoBL,GAAqB7tB,OAI/C,SAASmuB,GAAqBzrB,GAC1B,IAAInB,EAJR,SAAqBmB,GACjB,OAAQM,GAAeG,QAAQC,IAAIJ,EAAWqC,KAAI,EAAG/B,YAAW+M,cAAc,SAAqB3N,EAAeY,EAAW+M,KACjI,CAEkB+d,CAAY1rB,GAC1B,MAAMgO,EAqSC,CACH,CAACiV,GAAcmI,SAAUO,IAAgB,GACzC,CAAC1I,GAAc+F,QAAS2C,KACxB,CAAC1I,GAAc6D,OAAQ6E,KACvB,CAAC1I,GAAcoH,KAAMsB,KACrB,CAAC1I,GAAcoI,MAAOM,KACtB,CAAC1I,GAAcwH,OAAQkB,KACvB,CAAC1I,GAAcqI,MAAOK,MA3S1B,IAAIC,GAAkB,EAKtB,MAAMC,EAA0B,CAACC,EAAK1rB,KAClC,MAAMsiB,GAAW,QAAe1iB,EAAeI,GAC/C,GAAIsiB,EAAU,CACV,MAAM,WAAE3jB,EAAU,cAAE4jB,KAAkB9Y,GAAW6Y,EACjDoJ,EAAM,IAAKA,KAAQjiB,KAAW8Y,EAClC,CACA,OAAOmJ,CAAG,EAmBd,SAAShV,EAAenJ,EAASoe,GAC7B,IAAItuB,EACJ,MAAME,EAAQqC,EAAcipB,WACtBxR,EAAUzX,EAAcgsB,mBAAkB,IAAS,CAAC,EAKpD1rB,EAAa,GAKb2rB,EAAc,IAAIpsB,IAMxB,IAAIqsB,EAAkB,CAAC,EAKnBC,EAAsBC,IAO1B,IAAK,IAAI/uB,EAAI,EAAGA,EAAImuB,GAAmBnuB,IAAK,CACxC,MAAM+I,EAAOmlB,GAAqBluB,GAC5BgvB,EAAYre,EAAM5H,GAClB0R,EAA8B,QAAtBra,EAAKE,EAAMyI,UAA0B,IAAP3I,EAAgBA,EAAKga,EAAQrR,GACnEkmB,EAAgBpV,EAAeY,GAK/ByU,EAAcnmB,IAAS2lB,EAAoBM,EAAU3F,SAAW,MAClD,IAAhB6F,IACAJ,EAAsB9uB,GAO1B,IAAImvB,EAAc1U,IAASL,EAAQrR,IAAS0R,IAASna,EAAMyI,IAASkmB,EAepE,GAXIE,GACAZ,GACA5rB,EAAcysB,yBACdD,GAAc,GAMlBH,EAAUK,cAAgB,IAAKR,IAI7BG,EAAU3F,UAA4B,OAAhB6F,IAElBzU,IAASuU,EAAUM,UAErBxV,EAAoBW,IACJ,kBAATA,EACP,SAOJ,MAAM8U,EAAmBC,GAAuBR,EAAUM,SAAU7U,GACpE,IAAIgV,EAAoBF,GAEnBxmB,IAAS2lB,GACNM,EAAU3F,WACT8F,GACDF,GAEHjvB,EAAI8uB,GAAuBG,EAKhC,MAAMS,EAAiB9pB,MAAMC,QAAQ4U,GAAQA,EAAO,CAACA,GAKrD,IAAIkV,EAAiBD,EAAeE,OAAOpB,EAAyB,CAAC,IACjD,IAAhBU,IACAS,EAAiB,CAAC,GAUtB,MAAM,mBAAEE,EAAqB,CAAC,GAAMb,EAC9Bc,EAAU,IACTD,KACAF,GAEDI,EAAiBpnB,IACnB8mB,GAAoB,EACpBb,EAAY/rB,OAAO8F,GACnBqmB,EAAUgB,eAAernB,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAOmnB,EAAS,CACvB,MAAM9d,EAAO2d,EAAehnB,GACtBsO,EAAO4Y,EAAmBlnB,GAE5BkmB,EAAgBjvB,eAAe+I,KAK/BqJ,IAASiF,GAKL,QAAkBjF,KAAS,QAAkBiF,IACxC2W,GAAe5b,EAAMiF,IAASsY,EAC/BQ,EAAcpnB,GAOdqmB,EAAUK,cAAc1mB,IAAO,OAGrBF,IAATuJ,EAEL+d,EAAcpnB,GAIdimB,EAAYhsB,IAAI+F,QAGNF,IAATuJ,GAAsB4c,EAAY5Q,IAAIrV,GAK3ConB,EAAcpnB,GAOdqmB,EAAUK,cAAc1mB,IAAO,EAEvC,CAKAqmB,EAAUM,SAAW7U,EACrBuU,EAAUa,mBAAqBF,EAI3BX,EAAU3F,WACVwF,EAAkB,IAAKA,KAAoBc,IAE3CpB,GAAmB5rB,EAAc0W,wBACjCoW,GAAoB,GAOpBA,IAAsBN,GACtBlsB,EAAWE,QAAQusB,EAAepqB,KAAK/B,IAAc,CACjDA,UAAWA,EACX+M,QAAS,CAAEvH,UAASuH,OAGhC,CAMA,GAAIse,EAAYrN,KAAM,CAClB,MAAM0O,EAAoB,CAAC,EAC3BrB,EAAY1rB,SAASyF,IACjB,MAAMunB,EAAiBvtB,EAAcwtB,cAAcxnB,QAC5BF,IAAnBynB,IACAD,EAAkBtnB,GAAOunB,EAC7B,IAEJjtB,EAAWE,KAAK,CAAEI,UAAW0sB,GACjC,CACA,IAAIG,EAAgB/kB,QAAQpI,EAAWhD,QAOvC,OANIsuB,IACkB,IAAlBjuB,EAAMgZ,UACL3W,EAAcysB,yBACfgB,GAAgB,GAEpB7B,GAAkB,EACX6B,EAAgB5uB,EAAQyB,GAAcG,QAAQE,SACzD,CAkBA,MAAO,CACHmW,iBACA+P,UAhBJ,SAAmBzgB,EAAMsgB,EAAU/Y,GAC/B,IAAIlQ,EAEJ,GAAIuQ,EAAM5H,GAAMsgB,WAAaA,EACzB,OAAOjmB,QAAQE,UAEsB,QAAxClD,EAAKuC,EAAc0tB,uBAAoC,IAAPjwB,GAAyBA,EAAG8C,SAASymB,IAAY,IAAIvpB,EAAI,OAAuC,QAA/BA,EAAKupB,EAAMnQ,sBAAmC,IAAPpZ,OAAgB,EAASA,EAAGopB,UAAUzgB,EAAMsgB,EAAS,IAC9M1Y,EAAM5H,GAAMsgB,SAAWA,EACvB,MAAMpmB,EAAawW,EAAenJ,EAASvH,GAC3C,IAAK,MAAMJ,KAAOgI,EACdA,EAAMhI,GAAK0mB,cAAgB,CAAC,EAEhC,OAAOpsB,CACX,EAIIqtB,mBA7PJ,SAA4BC,GACxB/uB,EAAU+uB,EAAa5tB,EAC3B,EA4PI6tB,SAAU,IAAM7f,EAExB,CACA,SAAS6e,GAAuBvY,EAAMjF,GAClC,MAAoB,iBAATA,EACAA,IAASiF,IAEXrR,MAAMC,QAAQmM,KACX4b,GAAe5b,EAAMiF,EAGrC,CACA,SAASqX,GAAgBjF,GAAW,GAChC,MAAO,CACHA,WACAgG,cAAe,CAAC,EAChBW,eAAgB,CAAC,EACjBH,mBAAoB,CAAC,EAE7B,CCnTA,MAAM5sB,GAAa,CACfM,UAAW2oB,IAAwB,EAAGvpB,gBAAenB,cAMjDmB,EAAc6W,iBAAmB7W,EAAc6W,eAAiB4U,GAAqBzrB,IAIjFmX,EAAoBtY,KACpB,IAAAqC,YAAU,IAAMrC,EAAQkB,UAAUC,IAAgB,CAACnB,GACvD,IAEJwZ,KAAMkR,IAAyB5rB,IAC3B,MAAM,OAAEod,EAAM,cAAE/a,GAAkBrC,GAC3BktB,EAAWiD,GAAgBlD,KAC5BzU,GAAkB,IAAAtY,YAAW,IACnC,IAAAqD,YAAU,KACNlB,EAAc6qB,UAAYA,EAC1B,MAAMjqB,EAAYZ,EAAc6W,gBAC5B7W,EAAc6W,eAAegQ,UAAU5D,GAAcqI,MAAOT,EAAW,CACnE9P,OAAS5E,GAAmBA,EAAgB4E,QACxCA,IAERna,IAAciqB,GACdjqB,EAAUI,KAAK8sB,EACnB,GACD,CAACjD,GAAW,K,qCCrCvB,MAAMkD,GAAW,CAACnhB,EAAGC,IAAM1I,KAAKC,IAAIwI,EAAIC,GCWxC,MAAMmhB,GACFC,YAAYvK,EAAOwK,GAAU,mBAAE/Y,GAAuB,CAAC,GA2DnD,GAvDA+D,KAAKiV,WAAa,KAIlBjV,KAAKkV,cAAgB,KAIrBlV,KAAKmV,kBAAoB,KAIzBnV,KAAKgV,SAAW,CAAC,EACjBhV,KAAKoV,YAAc,KACf,IAAMpV,KAAKkV,gBAAiBlV,KAAKmV,kBAC7B,OACJ,MAAMzH,EAAO2H,GAAWrV,KAAKmV,kBAAmBnV,KAAKsV,SAC/CC,EAAmC,OAApBvV,KAAKiV,WAIpBO,EDpClB,SAAoB9hB,EAAGC,GAEnB,MAAM8hB,EAASZ,GAASnhB,EAAE9I,EAAG+I,EAAE/I,GACzB8qB,EAASb,GAASnhB,EAAE7F,EAAG8F,EAAE9F,GAC/B,OAAO5C,KAAKuC,KAAKioB,GAAU,EAAIC,GAAU,EAC7C,CC+B4CC,CAAWjI,EAAKzW,OAAQ,CAAErM,EAAG,EAAGiD,EAAG,KAAQ,EAC3E,IAAK0nB,IAAiBC,EAClB,OACJ,MAAM,MAAErK,GAAUuC,GACZ,UAAEkI,IAAc,WACtB5V,KAAKsV,QAAQhuB,KAAK,IAAK6jB,EAAOyK,cAC9B,MAAM,QAAEC,EAAO,OAAEC,GAAW9V,KAAKgV,SAC5BO,IACDM,GAAWA,EAAQ7V,KAAKkV,cAAexH,GACvC1N,KAAKiV,WAAajV,KAAKkV,eAE3BY,GAAUA,EAAO9V,KAAKkV,cAAexH,EAAK,EAE9C1N,KAAK+V,kBAAoB,CAACvL,EAAOkD,KAC7B1N,KAAKkV,cAAgB1K,EACrBxK,KAAKmV,kBAAoBa,GAAetI,EAAM1N,KAAK/D,oBAE/CsO,GAAaC,IAA4B,IAAlBA,EAAMyL,QAC7BjW,KAAKkW,gBAAgB1L,EAAOkD,GAIhC,aAAY1N,KAAKoV,aAAa,EAAK,EAEvCpV,KAAKkW,gBAAkB,CAAC1L,EAAOkD,KAC3B1N,KAAKmW,MACL,MAAM,MAAEC,EAAK,aAAEC,GAAiBrW,KAAKgV,SAC/BsB,EAAUjB,GAAWW,GAAetI,EAAM1N,KAAK/D,oBAAqB+D,KAAKsV,SAC3EtV,KAAKiV,YAAcmB,GACnBA,EAAM5L,EAAO8L,GAEjBD,GAAgBA,EAAa7L,EAAO8L,EAAQ,EAG5C1L,GAAaJ,IAAUA,EAAMK,QAAQzmB,OAAS,EAC9C,OACJ4b,KAAKgV,SAAWA,EAChBhV,KAAK/D,mBAAqBA,EAC1B,MACMsa,EAAcP,GADP1K,GAAiBd,GACWxK,KAAK/D,qBACxC,MAAEkP,GAAUoL,GACZ,UAAEX,IAAc,WACtB5V,KAAKsV,QAAU,CAAC,IAAKnK,EAAOyK,cAC5B,MAAM,eAAEY,GAAmBxB,EAC3BwB,GACIA,EAAehM,EAAO6K,GAAWkB,EAAavW,KAAKsV,UACvDtV,KAAKyW,iBAAkB,EAAA/kB,GAAA,GAAKib,GAAgBJ,OAAQ,cAAevM,KAAK+V,mBAAoBpJ,GAAgBJ,OAAQ,YAAavM,KAAKkW,iBAAkBvJ,GAAgBJ,OAAQ,gBAAiBvM,KAAKkW,iBAC1M,CACAQ,eAAe1B,GACXhV,KAAKgV,SAAWA,CACpB,CACAmB,MACInW,KAAKyW,iBAAmBzW,KAAKyW,kBAC7B,aAAkBzW,KAAKoV,YAC3B,EAEJ,SAASY,GAAetI,EAAMzR,GAC1B,OAAOA,EAAqB,CAAEkP,MAAOlP,EAAmByR,EAAKvC,QAAWuC,CAC5E,CACA,SAASiJ,GAAcjjB,EAAGC,GACtB,MAAO,CAAE/I,EAAG8I,EAAE9I,EAAI+I,EAAE/I,EAAGiD,EAAG6F,EAAE7F,EAAI8F,EAAE9F,EACtC,CACA,SAASwnB,IAAW,MAAElK,GAASmK,GAC3B,MAAO,CACHnK,QACA1X,MAAOkjB,GAAcxL,EAAOyL,GAAgBtB,IAC5Cre,OAAQ0f,GAAcxL,EAAO0L,GAAiBvB,IAC9CriB,SAAUyH,GAAY4a,EAAS,IAEvC,CACA,SAASuB,GAAiBvB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASsB,GAAgBtB,GACrB,OAAOA,EAAQA,EAAQlxB,OAAS,EACpC,CACA,SAASsW,GAAY4a,EAASwB,GAC1B,GAAIxB,EAAQlxB,OAAS,EACjB,MAAO,CAAEwG,EAAG,EAAGiD,EAAG,GAEtB,IAAI1J,EAAImxB,EAAQlxB,OAAS,EACrB2yB,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBtB,GAClC,KAAOnxB,GAAK,IACR4yB,EAAmBzB,EAAQnxB,KACvB6yB,EAAUpB,UAAYmB,EAAiBnB,WACvC,QAAsBkB,MAG1B3yB,IAEJ,IAAK4yB,EACD,MAAO,CAAEnsB,EAAG,EAAGiD,EAAG,GAEtB,MAAMopB,GAAQD,EAAUpB,UAAYmB,EAAiBnB,WAAa,IAClE,GAAa,IAATqB,EACA,MAAO,CAAErsB,EAAG,EAAGiD,EAAG,GAEtB,MAAMwI,EAAkB,CACpBzL,GAAIosB,EAAUpsB,EAAImsB,EAAiBnsB,GAAKqsB,EACxCppB,GAAImpB,EAAUnpB,EAAIkpB,EAAiBlpB,GAAKopB,GAQ5C,OANI5gB,EAAgBzL,IAAMsoB,MACtB7c,EAAgBzL,EAAI,GAEpByL,EAAgBxI,IAAMqlB,MACtB7c,EAAgBxI,EAAI,GAEjBwI,CACX,C,wBChJA,SAAS6gB,GAAWC,GAChB,OAAOA,EAAKnoB,IAAMmoB,EAAKxhB,GAC3B,CACA,SAASyhB,GAAO7zB,EAAOoN,EAAS,EAAG0mB,EAAc,KAC7C,OAAOpsB,KAAKC,IAAI3H,EAAQoN,IAAW0mB,CACvC,CACA,SAASC,GAAc7jB,EAAO+Q,EAAQ7T,EAAQD,EAAS,IACnD+C,EAAM/C,OAASA,EACf+C,EAAM8jB,aAAc,EAAA/mB,GAAA,GAAIgU,EAAO7O,IAAK6O,EAAOxV,IAAKyE,EAAM/C,QACtD+C,EAAMjO,MAAQ0xB,GAAWvmB,GAAUumB,GAAW1S,IAC1C4S,GAAO3jB,EAAMjO,MAAO,EAAG,OAAW6O,MAAMZ,EAAMjO,UAC9CiO,EAAMjO,MAAQ,GAClBiO,EAAM+jB,WACF,EAAAhnB,GAAA,GAAIG,EAAOgF,IAAKhF,EAAO3B,IAAKyE,EAAM/C,QAAU+C,EAAM8jB,aAClDH,GAAO3jB,EAAM+jB,YAAcnjB,MAAMZ,EAAM+jB,cACvC/jB,EAAM+jB,UAAY,EAC1B,CACA,SAASC,GAAahkB,EAAO+Q,EAAQ7T,EAAQD,GACzC4mB,GAAc7jB,EAAM7I,EAAG4Z,EAAO5Z,EAAG+F,EAAO/F,EAAG8F,aAAuC,EAASA,EAAOyT,SAClGmT,GAAc7jB,EAAM5F,EAAG2W,EAAO3W,EAAG8C,EAAO9C,EAAG6C,aAAuC,EAASA,EAAO0T,QACtG,CACA,SAASsT,GAAiB/mB,EAAQgnB,EAAU5a,GACxCpM,EAAOgF,IAAMoH,EAAOpH,IAAMgiB,EAAShiB,IACnChF,EAAO3B,IAAM2B,EAAOgF,IAAMuhB,GAAWS,EACzC,CAKA,SAASC,GAAyBjnB,EAAQ8R,EAAQ1F,GAC9CpM,EAAOgF,IAAM8M,EAAO9M,IAAMoH,EAAOpH,IACjChF,EAAO3B,IAAM2B,EAAOgF,IAAMuhB,GAAWzU,EACzC,CACA,SAASoV,GAAqBlnB,EAAQ8R,EAAQ1F,GAC1C6a,GAAyBjnB,EAAO/F,EAAG6X,EAAO7X,EAAGmS,EAAOnS,GACpDgtB,GAAyBjnB,EAAO9C,EAAG4U,EAAO5U,EAAGkP,EAAOlP,EACxD,C,eCZA,SAASiqB,GAA4BX,EAAMxhB,EAAK3G,GAC5C,MAAO,CACH2G,SAAa/I,IAAR+I,EAAoBwhB,EAAKxhB,IAAMA,OAAM/I,EAC1CoC,SAAapC,IAARoC,EACCmoB,EAAKnoB,IAAMA,GAAOmoB,EAAKnoB,IAAMmoB,EAAKxhB,UAClC/I,EAEd,CAcA,SAASmrB,GAA4BC,EAAYC,GAC7C,IAAItiB,EAAMsiB,EAAgBtiB,IAAMqiB,EAAWriB,IACvC3G,EAAMipB,EAAgBjpB,IAAMgpB,EAAWhpB,IAO3C,OAJIipB,EAAgBjpB,IAAMipB,EAAgBtiB,IACtCqiB,EAAWhpB,IAAMgpB,EAAWriB,OAC3BA,EAAK3G,GAAO,CAACA,EAAK2G,IAEhB,CAAEA,MAAK3G,MAClB,CAuCA,MAAMkpB,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH3iB,IAAK4iB,GAAoBH,EAAaC,GACtCrpB,IAAKupB,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,IAAIj0B,EACJ,MAA8B,iBAAhB6zB,EACRA,EAC8B,QAA7B7zB,EAAK6zB,EAAYI,UAA2B,IAAPj0B,EAAgBA,EAAK,CACrE,CC3HA,SAASk0B,GAAShL,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASiL,IAAwB,IAAEC,EAAG,KAAEC,EAAI,MAAEC,EAAK,OAAEC,IACjD,MAAO,CACHluB,EAAG,CAAE+K,IAAKijB,EAAM5pB,IAAK6pB,GACrBhrB,EAAG,CAAE8H,IAAKgjB,EAAK3pB,IAAK8pB,GAE5B,CCVA,SAASC,GAAgBvzB,GACrB,YAAiBoH,IAAVpH,GAAiC,IAAVA,CAClC,CACA,SAASwzB,IAAS,MAAExzB,EAAK,OAAE2I,EAAM,OAAEC,IAC/B,OAAS2qB,GAAgBvzB,KACpBuzB,GAAgB5qB,KAChB4qB,GAAgB3qB,EACzB,CACA,SAASkV,GAAa3V,GAClB,OAAQqrB,GAASrrB,IACbsrB,GAAetrB,IACfA,EAAOG,GACPH,EAAOI,QACPJ,EAAOK,SACPL,EAAOM,OACf,CACA,SAASgrB,GAAetrB,GACpB,OAAOurB,GAAcvrB,EAAO/C,IAAMsuB,GAAcvrB,EAAOE,EAC3D,CACA,SAASqrB,GAAc31B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAAS41B,GAAWhO,EAAO3lB,EAAO+xB,GAG9B,OAAOA,EADQ/xB,GADY2lB,EAAQoM,EAGvC,CAIA,SAAS6B,GAAgBjO,EAAOqM,EAAWhyB,EAAO+xB,EAAa8B,GAI3D,YAHiBzsB,IAAbysB,IACAlO,EAAQgO,GAAWhO,EAAOkO,EAAU9B,IAEjC4B,GAAWhO,EAAO3lB,EAAO+xB,GAAeC,CACnD,CAIA,SAAS8B,GAAenC,EAAMK,EAAY,EAAGhyB,EAAQ,EAAG+xB,EAAa8B,GACjElC,EAAKxhB,IAAMyjB,GAAgBjC,EAAKxhB,IAAK6hB,EAAWhyB,EAAO+xB,EAAa8B,GACpElC,EAAKnoB,IAAMoqB,GAAgBjC,EAAKnoB,IAAKwoB,EAAWhyB,EAAO+xB,EAAa8B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAE5uB,EAAC,EAAEiD,IAC7ByrB,GAAeE,EAAI5uB,EAAGA,EAAE4sB,UAAW5sB,EAAEpF,MAAOoF,EAAE2sB,aAC9C+B,GAAeE,EAAI3rB,EAAGA,EAAE2pB,UAAW3pB,EAAErI,MAAOqI,EAAE0pB,YAClD,CAgDA,SAASkC,GAAcj0B,GACnB,OAAIk0B,OAAOC,UAAUn0B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASo0B,GAAczC,EAAMtC,GACzBsC,EAAKxhB,IAAMwhB,EAAKxhB,IAAMkf,EACtBsC,EAAKnoB,IAAMmoB,EAAKnoB,IAAM6lB,CAC1B,CAMA,SAASgF,GAAc1C,EAAM2C,GAAahtB,EAAKitB,EAAUC,IACrD,MAAMC,OAAuCrtB,IAA1BktB,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EzC,GAAc,EAAA/mB,GAAA,GAAI2mB,EAAKxhB,IAAKwhB,EAAKnoB,IAAKirB,GAE5CX,GAAenC,EAAM2C,EAAWhtB,GAAMgtB,EAAWC,GAAWxC,EAAauC,EAAWt0B,MACxF,CAIA,MAAM00B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAKzW,GACvB8W,GAAcL,EAAI5uB,EAAGmY,EAAWmX,IAChCL,GAAcL,EAAI3rB,EAAGkV,EAAWoX,GACpC,CC7GA,SAASE,GAAmB9Y,EAAUyU,GAClC,OAAO0C,GHeX,SAA4BvN,EAAO6K,GAC/B,IAAKA,EACD,OAAO7K,EACX,MAAMmP,EAAUtE,EAAe,CAAEprB,EAAGugB,EAAMyN,KAAM/qB,EAAGsd,EAAMwN,MACnD4B,EAAcvE,EAAe,CAAEprB,EAAGugB,EAAM0N,MAAOhrB,EAAGsd,EAAM2N,SAC9D,MAAO,CACHH,IAAK2B,EAAQzsB,EACb+qB,KAAM0B,EAAQ1vB,EACdkuB,OAAQyB,EAAY1sB,EACpBgrB,MAAO0B,EAAY3vB,EAE3B,CG1BmC4vB,CAAmBjZ,EAASsI,wBAAyBmM,GACxF,C,cCaA,MAAMyE,GAAsB,IAAIvM,QAKhC,MAAMwM,GACF3F,YAAYjuB,GAIRkZ,KAAK2a,eAAiB,KACtB3a,KAAK4a,YAAa,EAClB5a,KAAK6a,iBAAmB,KACxB7a,KAAKuX,YAAc,CAAE3sB,EAAG,EAAGiD,EAAG,GAI9BmS,KAAK8a,aAAc,EACnB9a,KAAK+a,uBAAwB,EAI7B/a,KAAKgb,QC7BW,CACpBpwB,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,ID+BjCgR,KAAKlZ,cAAgBA,CACzB,CACAG,MAAMg0B,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,IAAqC,IAAjClb,KAAKlZ,cAAc6qB,UACnB,OAmFJ3R,KAAKmb,WAAa,IAAIrG,GAAWmG,EAAa,CAC1CzE,eAnFoBhM,IAGpBxK,KAAKob,gBACDF,GACAlb,KAAKkb,aAAa5P,GAAiBd,EAAO,QAAQW,MACtD,EA8EA0K,QA5EY,CAACrL,EAAOkD,KACpB,IAAInpB,EAEJ,MAAM,KAAE6a,EAAI,gBAAEic,EAAe,YAAEC,GAAgBtb,KAAK+P,aAChD3Q,GAASic,IACLrb,KAAK2a,gBACL3a,KAAK2a,iBACT3a,KAAK2a,eAAiBzN,GAAc9N,GAE/BY,KAAK2a,mBAGd3a,KAAK4a,YAAa,EAClB5a,KAAK6a,iBAAmB,KACxB7a,KAAKub,qBACDvb,KAAKlZ,cAAc+gB,aACnB7H,KAAKlZ,cAAc+gB,WAAW2T,oBAAqB,EACnDxb,KAAKlZ,cAAc+gB,WAAWlX,YAAS/D,GAK3C6rB,IAAUtB,IACN,IAAI5yB,EAAIkU,EACR,IAAIrC,EAAU4J,KAAKyb,mBAAmBtE,GAAM9c,OAAS,EAIrD,GAAI,UAAajE,GAAU,CACvB,MAAMslB,EAA8G,QAA9FjjB,EAA8C,QAAxClU,EAAKyb,KAAKlZ,cAAc+gB,kBAA+B,IAAPtjB,OAAgB,EAASA,EAAGke,cAA2B,IAAPhK,OAAgB,EAASA,EAAGkjB,UAAUxE,GAClK,GAAIuE,EAAc,CAEdtlB,EADe8gB,GAAWwE,IACNlgB,WAAWpF,GAAW,IAC9C,CACJ,CACA4J,KAAKuX,YAAYJ,GAAQ/gB,CAAO,IAGpCklB,SAA0DA,EAAY9Q,EAAOkD,GAChC,QAA5CnpB,EAAKyb,KAAKlZ,cAAc6W,sBAAmC,IAAPpZ,GAAyBA,EAAGopB,UAAU5D,GAAcoI,MAAM,GAAK,EAsCpH2D,OApCW,CAACtL,EAAOkD,KAEnB,MAAM,gBAAE2N,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAY9b,KAAK+P,WAE9E,IAAKsL,IAAoBrb,KAAK2a,eAC1B,OACJ,MAAM,OAAE1jB,GAAWyW,EAEnB,GAAIkO,GAA+C,OAA1B5b,KAAK6a,iBAM1B,OALA7a,KAAK6a,iBA8UrB,SAA6B5jB,EAAQ8kB,EAAgB,IACjD,IAAIC,EAAY,KACZ/wB,KAAKC,IAAI+L,EAAOpJ,GAAKkuB,EACrBC,EAAY,IAEP/wB,KAAKC,IAAI+L,EAAOrM,GAAKmxB,IAC1BC,EAAY,KAEhB,OAAOA,CACX,CAvVwCC,CAAoBhlB,QAEd,OAA1B+I,KAAK6a,mBACLgB,SAAkEA,EAAgB7b,KAAK6a,oBAK/F7a,KAAKkc,WAAW,IAAKxO,EAAKvC,MAAOlU,GACjC+I,KAAKkc,WAAW,IAAKxO,EAAKvC,MAAOlU,GAOjC+I,KAAKlZ,cAAc4W,SAKnBoe,SAAgDA,EAAOtR,EAAOkD,EAAK,EAOnE2I,aALiB,CAAC7L,EAAOkD,IAAS1N,KAAKpY,KAAK4iB,EAAOkD,IAMpD,CAAEzR,mBAAoB+D,KAAKlZ,cAAcq1B,yBAChD,CACAv0B,KAAK4iB,EAAOkD,GACR,MAAMkN,EAAa5a,KAAK4a,WAExB,GADA5a,KAAKoc,UACAxB,EACD,OACJ,MAAM,SAAE3nB,GAAaya,EACrB1N,KAAKhF,eAAe/H,GACpB,MAAM,UAAEopB,GAAcrc,KAAK+P,WAC3BsM,SAAsDA,EAAU7R,EAAOkD,EAC3E,CACA0O,SACI,IAAI73B,EAAIkU,EACRuH,KAAK4a,YAAa,EACd5a,KAAKlZ,cAAc+gB,aACnB7H,KAAKlZ,cAAc+gB,WAAW2T,oBAAqB,GAE5B,QAA1Bj3B,EAAKyb,KAAKmb,kBAA+B,IAAP52B,GAAyBA,EAAG4xB,MAC/DnW,KAAKmb,gBAAavuB,EAClB,MAAM,gBAAEyuB,GAAoBrb,KAAK+P,YAC5BsL,GAAmBrb,KAAK2a,iBACzB3a,KAAK2a,iBACL3a,KAAK2a,eAAiB,MAEmB,QAA5CliB,EAAKuH,KAAKlZ,cAAc6W,sBAAmC,IAAPlF,GAAyBA,EAAGkV,UAAU5D,GAAcoI,MAAM,EACnH,CACA+J,WAAW/E,EAAMmF,EAAQrlB,GACrB,MAAM,KAAEmI,GAASY,KAAK+P,WAEtB,IAAK9Y,IAAWslB,GAAWpF,EAAM/X,EAAMY,KAAK6a,kBACxC,OACJ,MAAM2B,EAAYxc,KAAKyb,mBAAmBtE,GAC1C,IAAIhhB,EAAO6J,KAAKuX,YAAYJ,GAAQlgB,EAAOkgB,GAEvCnX,KAAK8a,aAAe9a,KAAK8a,YAAY3D,KACrChhB,ENlKZ,SAA0BgV,GAAO,IAAExV,EAAG,IAAE3G,GAAOgsB,GAS3C,YARYpuB,IAAR+I,GAAqBwV,EAAQxV,EAE7BwV,EAAQ6P,GAAU,EAAAxqB,GAAA,GAAImF,EAAKwV,EAAO6P,EAAQrlB,KAAO1K,KAAK+D,IAAImc,EAAOxV,QAEpD/I,IAARoC,GAAqBmc,EAAQnc,IAElCmc,EAAQ6P,GAAU,EAAAxqB,GAAA,GAAIxB,EAAKmc,EAAO6P,EAAQhsB,KAAO/D,KAAK0K,IAAIwV,EAAOnc,IAE9Dmc,CACX,CMwJmBsR,CAAiBtmB,EAAM6J,KAAK8a,YAAY3D,GAAOnX,KAAKgb,QAAQ7D,KAEvEqF,EAAU70B,IAAIwO,EAClB,CACAolB,qBACI,MAAM,gBAAEmB,EAAe,YAAEtE,GAAgBpY,KAAK+P,YACxC,OAAEtN,GAAWzC,KAAKlZ,cAAc+gB,YAAc,CAAC,EAC/C8U,EAAkB3c,KAAK8a,YACzB4B,GAAmB5e,EAAY4e,GAC1B1c,KAAK8a,cACN9a,KAAK8a,YAAc9a,KAAK4c,yBAKxB5c,KAAK8a,eADL4B,IAAmBja,INpJnC,SAAiCkZ,GAAW,IAAEhD,EAAG,KAAEC,EAAI,OAAEE,EAAM,MAAED,IAC7D,MAAO,CACHjuB,EAAGktB,GAA4B6D,EAAU/wB,EAAGguB,EAAMC,GAClDhrB,EAAGiqB,GAA4B6D,EAAU9tB,EAAG8qB,EAAKG,GAEzD,CMgJmC+D,CAAwBpa,EAAOkZ,UAAWe,GAMrE1c,KAAKgb,QN7Fb,SAA4B5C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHttB,EAAGutB,GAAmBC,EAAa,OAAQ,SAC3CvqB,EAAGsqB,GAAmBC,EAAa,MAAO,UAElD,CMkFuB0E,CAAmB1E,GAK9BuE,IAAoB3c,KAAK8a,aACzBrY,GACAzC,KAAK8a,cACJ9a,KAAK+a,uBACNtC,IAAUtB,IACFnX,KAAKyb,mBAAmBtE,KACxBnX,KAAK8a,YAAY3D,GNtHrC,SAA+B1U,EAAQqY,GACnC,MAAMiC,EAAsB,CAAC,EAO7B,YANwBnwB,IAApBkuB,EAAYnlB,MACZonB,EAAoBpnB,IAAMmlB,EAAYnlB,IAAM8M,EAAO9M,UAE/B/I,IAApBkuB,EAAY9rB,MACZ+tB,EAAoB/tB,IAAM8rB,EAAY9rB,IAAMyT,EAAO9M,KAEhDonB,CACX,CM6G6CC,CAAsBva,EAAOkZ,UAAUxE,GAAOnX,KAAK8a,YAAY3D,IAC5F,GAGZ,CACAyF,wBACI,MAAQF,gBAAiB5B,EAAW,yBAAEmC,GAA6Bjd,KAAK+P,WACxE,IAAK+K,IAAgBhd,EAAYgd,GAC7B,OAAO,EACX,MAAMoC,EAAqBpC,EAAY1kB,SACvC,QAAiC,OAAvB8mB,EAA6B,0GACvC,MAAM,WAAErV,GAAe7H,KAAKlZ,cAE5B,IAAK+gB,IAAeA,EAAWpF,OAC3B,OAAO,EACX,MAAM0a,EDrNd,SAAwBxV,EAASyV,EAAoBnhB,GACjD,MAAMohB,EAAchD,GAAmB1S,EAAS1L,IAC1C,OAAEqhB,GAAWF,EAKnB,OAJIE,IACA1D,GAAcyD,EAAYzyB,EAAG0yB,EAAOrmB,OAAOrM,GAC3CgvB,GAAcyD,EAAYxvB,EAAGyvB,EAAOrmB,OAAOpJ,IAExCwvB,CACX,CC6M+BE,CAAeL,EAAoBrV,EAAW6G,KAAM1O,KAAKlZ,cAAcq1B,yBAC9F,IAAIqB,EN/JZ,SAAiC7B,EAAWwB,GACxC,MAAO,CACHvyB,EAAGmtB,GAA4B4D,EAAU/wB,EAAGuyB,EAAevyB,GAC3DiD,EAAGkqB,GAA4B4D,EAAU9tB,EAAGsvB,EAAetvB,GAEnE,CM0JkC4vB,CAAwB5V,EAAWpF,OAAOkZ,UAAWwB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EJvNpC,UAAiC,EAAEryB,EAAC,EAAEiD,IAClC,MAAO,CAAE8qB,IAAK9qB,EAAE8H,IAAKkjB,MAAOjuB,EAAEoE,IAAK8pB,OAAQjrB,EAAEmB,IAAK4pB,KAAMhuB,EAAE+K,IAC9D,CIqN6DgoB,CAAwBH,IACzExd,KAAK+a,wBAA0B2C,EAC3BA,IACAF,EAAsB9E,GAAwBgF,GAEtD,CACA,OAAOF,CACX,CACAxiB,eAAe/H,GACX,MAAM,KAAEmM,EAAI,aAAEwe,EAAY,YAAExF,EAAW,eAAEyF,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyB/d,KAAK+P,WACnG+K,EAAc9a,KAAK8a,aAAe,CAAC,EACnCkD,EAAqBvF,IAAUtB,IACjC,IAAI5yB,EACJ,IAAKg4B,GAAWpF,EAAM/X,EAAMY,KAAK6a,kBAC7B,OAEJ,IAAIh1B,EAAoG,QAAtFtB,EAAKu2B,aAAiD,EAASA,EAAY3D,UAA0B,IAAP5yB,EAAgBA,EAAK,CAAC,EAClIu5B,IACAj4B,EAAa,CAAE8P,IAAK,EAAG3G,IAAK,IAOhC,MAAM2L,EAAkByd,EAAc,IAAM,IACtCxd,EAAgBwd,EAAc,GAAK,IACnC9c,EAAU,CACZpO,KAAM,UACN+F,SAAU2qB,EAAe3qB,EAASkkB,GAAQ,EAC1Cxc,kBACAC,gBACA/D,aAAc,IACdhC,UAAW,EACXxH,UAAW,MACRwwB,KACAh4B,GAKP,OAAOma,KAAKie,wBAAwB9G,EAAM7b,EAAQ,IAGtD,OAAO/T,QAAQC,IAAIw2B,GAAoBl2B,KAAKi2B,EAChD,CACAE,wBAAwB9G,EAAMtxB,GAC1B,MAAM22B,EAAYxc,KAAKyb,mBAAmBtE,GAC1C,OAAO,SAAeA,EAAMqF,EAAW,EAAG32B,EAC9C,CACAu1B,gBACI3C,IAAUtB,GAASnX,KAAKyb,mBAAmBtE,GAAMvvB,QACrD,CAOA6zB,mBAAmBtE,GACf,IAAI5yB,EAAIkU,EACR,MAAMylB,EAAU,QAAU/G,EAAK5O,cACzB4V,EAAsBne,KAAKlZ,cAAcipB,WAAWmO,GAC1D,OAAOC,GAEDne,KAAKlZ,cAAcs3B,SAASjH,EAA4G,QAArG1e,EAAsD,QAAhDlU,EAAKyb,KAAKlZ,cAAcipB,WAAWtS,eAA4B,IAAPlZ,OAAgB,EAASA,EAAG4yB,UAA0B,IAAP1e,EAAgBA,EAAK,EAC/K,CACAyiB,aAAa/P,GACTsN,IAAUtB,IACN,MAAM,KAAE/X,GAASY,KAAK+P,WAEtB,IAAKwM,GAAWpF,EAAM/X,EAAMY,KAAK6a,kBAC7B,OACJ,MAAM,WAAEhT,GAAe7H,KAAKlZ,cACtB01B,EAAYxc,KAAKyb,mBAAmBtE,GAC1C,GAAItP,GAAcA,EAAWpF,OAAQ,CACjC,MAAM,IAAE9M,EAAG,IAAE3G,GAAQ6Y,EAAWpF,OAAOkZ,UAAUxE,GACjDqF,EAAU70B,IAAIwjB,EAAMgM,IAAQ,EAAA3mB,GAAA,GAAImF,EAAK3G,EAAK,IAC9C,IAER,CAMAqvB,iCACI,IAAI95B,EACJ,IAAKyb,KAAKlZ,cAAcsP,QACpB,OACJ,MAAM,KAAEgJ,EAAI,gBAAEsd,GAAoB1c,KAAK+P,YACjC,WAAElI,GAAe7H,KAAKlZ,cAC5B,IAAKgX,EAAY4e,KAAqB7U,IAAe7H,KAAK8a,YACtD,OAKJ9a,KAAKob,gBAKL,MAAMkD,EAAc,CAAE1zB,EAAG,EAAGiD,EAAG,GAC/B4qB,IAAUtB,IACN,MAAMqF,EAAYxc,KAAKyb,mBAAmBtE,GAC1C,GAAIqF,EAAW,CACX,MAAM7jB,EAAS6jB,EAAUniB,MACzBikB,EAAYnH,GNvQ5B,SAAoB3S,EAAQ7T,GACxB,IAAID,EAAS,GACb,MAAM6tB,EAAerH,GAAW1S,GAC1Bga,EAAetH,GAAWvmB,GAOhC,OANI6tB,EAAeD,EACf7tB,GAAS,EAAAgC,GAAA,GAAS/B,EAAOgF,IAAKhF,EAAO3B,IAAMuvB,EAAc/Z,EAAO7O,KAE3D4oB,EAAeC,IACpB9tB,GAAS,EAAAgC,GAAA,GAAS8R,EAAO7O,IAAK6O,EAAOxV,IAAMwvB,EAAc7tB,EAAOgF,OAE7D,EAAAtD,GAAA,GAAM,EAAG,EAAG3B,EACvB,CM4PoC,CAAW,CAAEiF,IAAKgD,EAAQ3J,IAAK2J,GAAUqH,KAAK8a,YAAY3D,GAClF,KAKJ,MAAM,kBAAEjU,GAAsBlD,KAAKlZ,cAAcipB,WACjD/P,KAAKlZ,cAAcsP,QAAQhN,MAAM2Z,UAAYG,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACqB,QAA1B3e,EAAKsjB,EAAW6G,YAAyB,IAAPnqB,GAAyBA,EAAGk6B,eAC/D5W,EAAW6W,eACX1e,KAAKub,qBAKL9C,IAAUtB,IACN,IAAKoF,GAAWpF,EAAM/X,EAAM,MACxB,OAIJ,MAAMod,EAAYxc,KAAKyb,mBAAmBtE,IACpC,IAAExhB,EAAG,IAAE3G,GAAQgR,KAAK8a,YAAY3D,GACtCqF,EAAU70B,KAAI,EAAA6I,GAAA,GAAImF,EAAK3G,EAAKsvB,EAAYnH,IAAO,GAEvD,CACAwH,eACI,IAAIp6B,EACJ,IAAKyb,KAAKlZ,cAAcsP,QACpB,OACJqkB,GAAoB9yB,IAAIqY,KAAKlZ,cAAekZ,MAC5C,MAIM4e,EAAsBjS,GAJZ3M,KAAKlZ,cAAcsP,QAIkB,eAAgBoU,IACjE,MAAM,KAAEpL,EAAI,aAAE0F,GAAe,GAAS9E,KAAK+P,WAC3C3Q,GAAQ0F,GAAgB9E,KAAK/Y,MAAMujB,EAAM,IAEvCqU,EAAyB,KAC3B,MAAM,gBAAEnC,GAAoB1c,KAAK+P,WAC7BjS,EAAY4e,KACZ1c,KAAK8a,YAAc9a,KAAK4c,wBAC5B,GAEE,WAAE/U,GAAe7H,KAAKlZ,cACtBg4B,EAA4BjX,EAAWuC,iBAAiB,UAAWyU,GACrEhX,IAAeA,EAAWpF,SACC,QAA1Ble,EAAKsjB,EAAW6G,YAAyB,IAAPnqB,GAAyBA,EAAGk6B,eAC/D5W,EAAW6W,gBAEfG,IAKA,MAAME,EAAqB/U,GAAYuC,OAAQ,UAAU,IAAMvM,KAAKqe,mCAK9DW,EAA2BnX,EAAWuC,iBAAiB,aAAa,EAAI3W,QAAOwrB,uBAC7Ejf,KAAK4a,YAAcqE,IACnBxG,IAAUtB,IACN,MAAM+H,EAAclf,KAAKyb,mBAAmBtE,GACvC+H,IAELlf,KAAKuX,YAAYJ,IAAS1jB,EAAM0jB,GAAMK,UACtC0H,EAAYv3B,IAAIu3B,EAAY7kB,MAAQ5G,EAAM0jB,GAAMK,WAAU,IAE9DxX,KAAKlZ,cAAc4W,SAE1B,IACD,MAAO,KACHqhB,IACAH,IACAE,IACAE,SAAoFA,GAA0B,CAEtH,CACAjP,WACI,MAAMtrB,EAAQub,KAAKlZ,cAAcipB,YAC3B,KAAE3Q,GAAO,EAAK,kBAAEwc,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEqB,GAAkB,EAAK,YAAEtE,EAAcF,GAAc,aAAE0F,GAAe,GAAUn5B,EAC1J,MAAO,IACAA,EACH2a,OACAwc,oBACAP,kBACAqB,kBACAtE,cACAwF,eAER,EAEJ,SAASrB,GAAWP,EAAW5c,EAAMyb,GACjC,SAAkB,IAATzb,GAAiBA,IAAS4c,GACT,OAArBnB,GAA6BA,IAAqBmB,EAC3D,CE7aA,MAAM5c,GAAO,CACTI,IAAK6Q,ICaT,UAAuB,MAAE8O,EAAK,WAAEC,EAAU,SAAEC,EAAQ,kBAAEC,EAAiB,cAAEx4B,IACrE,MAAMy4B,EAAeJ,GAASC,GAAcC,GAAYC,EAClDnE,GAAa,IAAA/d,QAAO,OACpB,mBAAEnB,IAAuB,IAAAtX,YAAWqX,GACpCgZ,EAAW,CACbwB,eAAgB8I,EAChBzJ,QAASuJ,EACTtJ,OAAQqJ,EACR/I,MAAO,CAAC5L,EAAOkD,KACXyN,EAAW/kB,QAAU,KACrBipB,GAAYA,EAAS7U,EAAOkD,EAAK,IAGzC,IAAA1lB,YAAU,KACqB,OAAvBmzB,EAAW/kB,SACX+kB,EAAW/kB,QAAQsgB,eAAe1B,EACtC,IAOJpI,GAAgB9lB,EAAe,cAAey4B,GAL9C,SAAuB/U,GACnB2Q,EAAW/kB,QAAU,IAAI0e,GAAWtK,EAAOwK,EAAU,CACjD/Y,sBAER,GAEA+R,IAAiB,IAAMmN,EAAW/kB,SAAW+kB,EAAW/kB,QAAQ+f,OACpE,IDrCI/W,KAAMiR,IEGV,SAAiB5rB,GACb,MAAQ+6B,aAAcC,EAAiB,cAAE34B,GAAkBrC,EACrD+6B,GAAe,QAAY,IAAM,IAAI9E,GAA0B5zB,MAGrE,IAAAkB,YAAU,IAAMy3B,GAAqBA,EAAkB54B,UAAU24B,IAAe,CAACA,EAAcC,KAE/F,IAAAz3B,YAAU,IAAMw3B,EAAab,gBAAgB,CAACa,GAClD,K,0BCfA,SAAS,GAAcj8B,GACnB,MAAwB,iBAAVA,GAAsBA,EAAMyJ,WAAW,SACzD,CAUA,MAAM0yB,GAAmB,uDASzB,SAASC,GAAiBvpB,EAASuR,EAASiY,EAAQ,IAChD,QAAUA,GAFG,EAEgB,yDAAyDxpB,yDACtF,MAAOypB,EAAO1P,GAVlB,SAA0B/Z,GACtB,MAAM0pB,EAAQJ,GAAiBK,KAAK3pB,GACpC,IAAK0pB,EACD,MAAO,CAAC,GACZ,MAAO,CAAED,EAAO1P,GAAY2P,EAC5B,MAAO,CAACD,EAAO1P,EACnB,CAI8B6P,CAAiB5pB,GAE3C,IAAKypB,EACD,OAEJ,MAAMrW,EAAW+C,OAAO0T,iBAAiBtY,GAASuY,iBAAiBL,GACnE,OAAIrW,EACOA,EAASvF,OAEX,GAAckM,GAEZwP,GAAiBxP,EAAUxI,EAASiY,EAAQ,GAG5CzP,CAEf,C,yBClCA,MAAMgQ,GAAiB,IAAIx5B,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEy5B,GAAmBtzB,GAAQqzB,GAAehe,IAAIrV,GAI9CuzB,GAAsB,CAAC98B,EAAOgK,KAGhChK,EAAMoE,IAAI4F,GAAI,GACdhK,EAAMoE,IAAI4F,EAAG,EAEX+yB,GAAiBx2B,GAAMA,IAAM,OAAUA,IAAM,EAAA6b,GACnD,IAAI4a,IACJ,SAAWA,GACPA,EAA4B,MAAI,QAChCA,EAA6B,OAAI,SACjCA,EAA2B,KAAI,OAC/BA,EAA4B,MAAI,QAChCA,EAA0B,IAAI,MAC9BA,EAA6B,OAAI,QACpC,CAPD,CAOGA,KAAyBA,GAAuB,CAAC,IACpD,MAAMC,GAAmB,CAACC,EAAQC,IAAQllB,WAAWilB,EAAOE,MAAM,MAAMD,IAClEE,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAShe,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMie,EAAWje,EAAU+c,MAAM,sBACjC,GAAIkB,EACA,OAAOR,GAAiBQ,EAAS,GAAIF,GAEpC,CACD,MAAML,EAAS1d,EAAU+c,MAAM,oBAC/B,OAAIW,EACOD,GAAiBC,EAAO,GAAII,GAG5B,CAEf,GAEEzd,GAAgB,IAAIzc,IAAI,CAAC,IAAK,IAAK,MACnCs6B,GAAgC,YAA2Bn0B,IAASsW,GAAcjB,IAAIrV,KAe5F,MAAMo0B,GAAmB,CAErB/6B,MAAO,EAAGyE,MAAOu2B,cAAc,IAAKC,eAAe,OAAUx2B,EAAEoE,IAAMpE,EAAE+K,IAAM6F,WAAW2lB,GAAe3lB,WAAW4lB,GAClHx7B,OAAQ,EAAGiI,MAAOwzB,aAAa,IAAKC,gBAAgB,OAAUzzB,EAAEmB,IAAMnB,EAAE8H,IAAM6F,WAAW6lB,GAAc7lB,WAAW8lB,GAClH3I,IAAK,CAACoI,GAASpI,SAAUnd,WAAWmd,GACpCC,KAAM,CAACmI,GAASnI,UAAWpd,WAAWod,GACtCE,OAAQ,EAAGjrB,MAAO8qB,SAAUnd,WAAWmd,IAAQ9qB,EAAEmB,IAAMnB,EAAE8H,KACzDkjB,MAAO,EAAGjuB,MAAOguB,UAAWpd,WAAWod,IAAShuB,EAAEoE,IAAMpE,EAAE+K,KAE1D/K,EAAGg2B,GAAuB,EAAG,IAC7B/yB,EAAG+yB,GAAuB,EAAG,KA+B3BW,GAAmC,CAACz6B,EAAe6J,EAAQD,EAAS,CAAC,EAAG+Y,EAAgB,CAAC,KAC3F9Y,EAAS,IAAKA,GACd8Y,EAAgB,IAAKA,GACrB,MAAM+X,EAAuBn+B,OAAOqR,KAAK/D,GAAQ8wB,OAAOrB,IAGxD,IAAIsB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GA4E7B,GA3EAJ,EAAqBn6B,SAASyF,IAC1B,MAAMvJ,EAAQuD,EAAcs3B,SAAStxB,GACrC,IAAKhG,EAAc+6B,SAAS/0B,GACxB,OACJ,IAAIgC,EAAO4B,EAAO5D,GACdg1B,GAAW,QAAuBhzB,GACtC,MAAMvB,EAAKoD,EAAO7D,GAClB,IAAIi1B,EAKJ,IAAI,QAAkBx0B,GAAK,CACvB,MAAMy0B,EAAez0B,EAAGnJ,OAClB69B,EAAsB,OAAV10B,EAAG,GAAc,EAAI,EACvCuB,EAAOvB,EAAG00B,GACVH,GAAW,QAAuBhzB,GAClC,IAAK,IAAI3K,EAAI89B,EAAW99B,EAAI69B,EAAc79B,IACjC49B,GAMD,SAAU,QAAuBx0B,EAAGpJ,MAAQ49B,EAAQ,2CALpDA,GAAS,QAAuBx0B,EAAGpJ,KACnC,QAAU49B,IAAWD,GAChBxB,GAAcwB,IAAaxB,GAAcyB,GAAU,gEAMpE,MAEIA,GAAS,QAAuBx0B,GAEpC,GAAIu0B,IAAaC,EAGb,GAAIzB,GAAcwB,IAAaxB,GAAcyB,GAAS,CAClD,MAAM3rB,EAAU7S,EAAM8W,MACC,iBAAZjE,GACP7S,EAAMoE,IAAI6T,WAAWpF,IAEP,iBAAP7I,EACPoD,EAAO7D,GAAO0O,WAAWjO,GAEpBxD,MAAMC,QAAQuD,IAAOw0B,IAAW,EAAApc,KACrChV,EAAO7D,GAAOS,EAAG9D,IAAI+R,YAE7B,MACUsmB,aAA2C,EAASA,EAAS/e,aAClEgf,aAAuC,EAASA,EAAOhf,aAC9C,IAATjU,GAAqB,IAAPvB,GAGF,IAATuB,EACAvL,EAAMoE,IAAIo6B,EAAOhf,UAAUjU,IAG3B6B,EAAO7D,GAAOg1B,EAAS/e,UAAUxV,IAMhCo0B,IACDD,EA9HpB,SAAyC56B,GACrC,MAAMo7B,EAAoB,GAW1B,OAVAjB,GAA8B55B,SAASyF,IACnC,MAAMvJ,EAAQuD,EAAcs3B,SAAStxB,QACvBF,IAAVrJ,IACA2+B,EAAkB56B,KAAK,CAACwF,EAAKvJ,EAAM8W,QACnC9W,EAAMoE,IAAImF,EAAIE,WAAW,SAAW,EAAI,GAC5C,IAGAk1B,EAAkB99B,QAClB0C,EAAc4W,SACXwkB,CACX,CAkHwBC,CAAgCr7B,GACpC66B,GAAsC,GAE1CC,EAAqBt6B,KAAKwF,GAC1B2c,EAAc3c,QACaF,IAAvB6c,EAAc3c,GACR2c,EAAc3c,GACd6D,EAAO7D,GACjBuzB,GAAoB98B,EAAOgK,GAEnC,IAEAq0B,EAAqBx9B,OAAQ,CAC7B,MAAMg+B,EAAUR,EAAqB39B,QAAQ,WAAa,EACpDsoB,OAAO8V,YACP,KACAC,EArHmB,EAAC3xB,EAAQ7J,EAAey7B,KACrD,MAAMC,EAAa17B,EAAcuzB,qBAC3B1S,EAAU7gB,EAAcsP,QACxBqsB,EAAuBxC,iBAAiBtY,IACxC,QAAE+a,GAAYD,EACd/xB,EAAS,CAAC,EAGA,SAAZgyB,GACA57B,EAAc67B,eAAe,UAAWhyB,EAAO+xB,SAAW,SAK9DH,EAAYl7B,SAASyF,IACjB4D,EAAO5D,GAAOo0B,GAAiBp0B,GAAK01B,EAAYC,EAAqB,IAGzE37B,EAAc4W,SACd,MAAMklB,EAAa97B,EAAcuzB,qBAQjC,OAPAkI,EAAYl7B,SAASyF,IAGjB,MAAMvJ,EAAQuD,EAAcs3B,SAAStxB,GACrCuzB,GAAoB98B,EAAOmN,EAAO5D,IAClC6D,EAAO7D,GAAOo0B,GAAiBp0B,GAAK81B,EAAYH,EAAqB,IAElE9xB,CAAM,EA0FekyB,CAAyBlyB,EAAQ7J,EAAe86B,GAaxE,OAXIF,EAAuBt9B,QACvBs9B,EAAuBr6B,SAAQ,EAAEyF,EAAKvJ,MAClCuD,EAAcs3B,SAAStxB,GAAKnF,IAAIpE,EAAM,IAI9CuD,EAAc4W,SAEVrB,GAAyB,OAAZ+lB,GACb7V,OAAOuW,SAAS,CAAEnK,IAAKyJ,IAEpB,CAAEzxB,OAAQ2xB,EAAiB7Y,gBACtC,CAEI,MAAO,CAAE9Y,SAAQ8Y,gBACrB,EASJ,SAASsZ,GAAej8B,EAAe6J,EAAQD,EAAQ+Y,GACnD,MAjNqB,CAAC9Y,GACftN,OAAOqR,KAAK/D,GAAQgE,KAAKyrB,IAgNzB4C,CAAiBryB,GAClB4wB,GAAiCz6B,EAAe6J,EAAQD,EAAQ+Y,GAChE,CAAE9Y,SAAQ8Y,gBACpB,CC/NA,MAAMwZ,GAAkB,CAACn8B,EAAe6J,EAAQD,EAAQ+Y,KACpD,MAAMD,EFuCV,SAA6B1iB,MAAoB6J,GAAU8Y,GACvD,MAAM9B,EAAU7gB,EAAcsP,QAC9B,KAAMuR,aAAmBub,SACrB,MAAO,CAAEvyB,SAAQ8Y,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzB3iB,EAAc6G,OAAOtG,SAAS9D,IAC1B,MAAM6S,EAAU7S,EAAM8W,MACtB,IAAK,GAAcjE,GACf,OACJ,MAAMoT,EAAWmW,GAAiBvpB,EAASuR,GACvC6B,GACAjmB,EAAMoE,IAAI6hB,EAAS,IAI3B,IAAK,MAAM1c,KAAO6D,EAAQ,CACtB,MAAMyF,EAAUzF,EAAO7D,GACvB,IAAK,GAAcsJ,GACf,SACJ,MAAMoT,EAAWmW,GAAiBvpB,EAASuR,GACtC6B,IAGL7Y,EAAO7D,GAAO0c,EAIVC,QAAwC7c,IAAvB6c,EAAc3c,KAC/B2c,EAAc3c,GAAOsJ,GAE7B,CACA,MAAO,CAAEzF,SAAQ8Y,gBACrB,CE5EqB0Z,CAAoBr8B,EAAe6J,EAAQ8Y,GAG5D,OAAOsZ,GAAej8B,EAFtB6J,EAAS6Y,EAAS7Y,OAE2BD,EAD7C+Y,EAAgBD,EAASC,cAC0C,ECVjE2Z,GAAuB,CAAEhtB,QAAS,MAClCitB,GAA2B,CAAEjtB,SAAS,G,qCCkB5C,MAAMktB,GAAejgC,OAAOqR,KAAKuK,GAC3BskB,GAAcD,GAAal/B,OAC3Bo/B,GAAoB,CACtB,iBACA,oBACA,SACA,UACA,sBACA,gBACA,uBACA,2BAwbJ,MAAM,GAAe,CAAC,aAAcvR,IAC9BwR,GAAkB,GAAar/B,OCndrC,MAAMs/B,WDgCN,MACI3O,aAAY,OAAEhY,EAAM,MAAEtY,EAAK,oBAAEyY,EAAmB,YAAEL,GAAgBpI,EAAU,CAAC,GAKzEuL,KAAK5J,QAAU,KAIf4J,KAAK/c,SAAW,IAAI0D,IAIpBqZ,KAAK5B,eAAgB,EACrB4B,KAAK7B,uBAAwB,EAQ7B6B,KAAK2jB,mBAAqB,KAM1B3jB,KAAKrS,OAAS,IAAIsU,IAKlBjC,KAAK2R,WAAY,EAKjB3R,KAAK4jB,mBAAqB,IAAI3hB,IAM9BjC,KAAK6jB,iBAAmB,CAAC,EAIzB7jB,KAAK8jB,OAAS,CAAC,EAMf9jB,KAAK+jB,uBAAyB,CAAC,EAC/B/jB,KAAKgkB,aAAe,IAAMhkB,KAAKnC,OAAO,SAAUmC,KAAKiD,cACrDjD,KAAKtC,OAAS,KACLsC,KAAK5J,UAEV4J,KAAKikB,eACLjkB,KAAKkkB,eAAelkB,KAAK5J,QAAS4J,KAAKkI,YAAalI,KAAKvb,MAAM2E,MAAO4W,KAAK6H,YAAW,EAE1F7H,KAAKmkB,eAAiB,IAAM,aAAYnkB,KAAKtC,QAAQ,GAAO,GAC5D,MAAM,aAAEuF,EAAY,YAAEiF,GAAgBrL,EACtCmD,KAAKiD,aAAeA,EACpBjD,KAAKokB,WAAa,IAAKnhB,GACvBjD,KAAKqkB,cAAgB5/B,EAAMgZ,QAAU,IAAKwF,GAAiB,CAAC,EAC5DjD,KAAKkI,YAAcA,EACnBlI,KAAKjD,OAASA,EACdiD,KAAKvb,MAAQA,EACbub,KAAK4f,MAAQ7iB,EAASA,EAAO6iB,MAAQ,EAAI,EACzC5f,KAAK9C,oBAAsBA,EAC3B8C,KAAKvL,QAAUA,EACfuL,KAAK7B,sBAAwBA,EAAsB1Z,GACnDub,KAAK5B,cAAgBA,EAAc3Z,GAC/Bub,KAAK5B,gBACL4B,KAAKwU,gBAAkB,IAAI7tB,KAE/BqZ,KAAKuT,uBAAyB/jB,QAAQuN,GAAUA,EAAO3G,SAWvD,MAAM,WAAEkuB,KAAeC,GAAwBvkB,KAAKqI,4BAA4B5jB,GAChF,IAAK,MAAMqI,KAAOy3B,EAAqB,CACnC,MAAMhhC,EAAQghC,EAAoBz3B,QACRF,IAAtBqW,EAAanW,KAAsB,IAAA3I,GAAcZ,KACjDA,EAAMoE,IAAIsb,EAAanW,IAAM,IACzB,EAAA03B,GAAA,GAAwBF,IACxBA,EAAWv9B,IAAI+F,GAG3B,CACJ,CAQAub,4BAA4Boc,GACxB,MAAO,CAAC,CACZ,CACA58B,MAAM0Z,GACF,IAAIhd,EACJyb,KAAK5J,QAAUmL,EACXvB,KAAK6H,YACL7H,KAAK6H,WAAWhgB,MAAM0Z,GAEtBvB,KAAKjD,QAAUiD,KAAK5B,gBAAkB4B,KAAK7B,wBAC3C6B,KAAK0kB,sBAA+C,QAAtBngC,EAAKyb,KAAKjD,cAA2B,IAAPxY,OAAgB,EAASA,EAAGogC,gBAAgB3kB,OAE5GA,KAAKrS,OAAOtG,SAAQ,CAAC9D,EAAOuJ,IAAQkT,KAAK4kB,kBAAkB93B,EAAKvJ,KAC3D8/B,GAAyBjtB,SE1JtC,WAEI,GADAitB,GAAyBjtB,SAAU,EAC9BiG,EAEL,GAAIkQ,OAAOsY,WAAY,CACnB,MAAMC,EAAmBvY,OAAOsY,WAAW,4BACrCE,EAA8B,IAAO3B,GAAqBhtB,QAAU0uB,EAAiBE,QAC3FF,EAAiBG,YAAYF,GAC7BA,GACJ,MAEI3B,GAAqBhtB,SAAU,CAEvC,CF8IY8uB,GAEJllB,KAAK2jB,mBAC4B,UAA7B3jB,KAAK9C,sBAE8B,WAA7B8C,KAAK9C,qBAEDkmB,GAAqBhtB,SAC/B4J,KAAKjD,QACLiD,KAAKjD,OAAO9Z,SAAS8D,IAAIiZ,MAC7BA,KAAKC,SAASD,KAAKvb,MACvB,CACA+c,UACI,IAAIjd,EAAIkU,EAAI0sB,EACe,QAA1B5gC,EAAKyb,KAAK6H,kBAA+B,IAAPtjB,GAAyBA,EAAGid,UAC/D,aAAkBxB,KAAKgkB,cACvB,aAAkBhkB,KAAKtC,QACvBsC,KAAK4jB,mBAAmBv8B,SAAS+9B,GAAWA,MACN,QAArC3sB,EAAKuH,KAAK0kB,6BAA0C,IAAPjsB,GAAyBA,EAAGzU,KAAKgc,MACxD,QAAtBmlB,EAAKnlB,KAAKjD,cAA2B,IAAPooB,GAAyBA,EAAGliC,SAAS+D,OAAOgZ,MAC3E,IAAK,MAAMlT,KAAOkT,KAAK8jB,OACnB9jB,KAAK8jB,OAAOh3B,GAAKu4B,QAErBrlB,KAAK5J,QAAU,IACnB,CACAwuB,kBAAkB93B,EAAKvJ,GACnB,MAAM+hC,EAAmB,QAAmBx4B,GACtCy4B,EAAiBhiC,EAAMiiC,UAAUC,IACnCzlB,KAAKiD,aAAanW,GAAO24B,EACzBzlB,KAAKvb,MAAM+T,UACP,aAAYwH,KAAKgkB,cAAc,GAAO,GACtCsB,GAAoBtlB,KAAK6H,aACzB7H,KAAK6H,WAAW6d,kBAAmB,EACvC,IAEEC,EAAwBpiC,EAAMqiC,gBAAgB5lB,KAAKmkB,gBACzDnkB,KAAK4jB,mBAAmBj8B,IAAImF,GAAK,KAC7By4B,IACAI,GAAuB,GAE/B,CACAE,iBAAiBC,GAIb,OAAK9lB,KAAK5J,SACL4J,KAAK+lB,0BACN/lB,KAAK9S,OAAS44B,EAAM54B,KAEjB8S,KAAK+lB,yBAAyB/lB,KAAK5J,QAAS0vB,EAAM1vB,SAD9C,CAEf,CACAwK,aAAaolB,EAAeC,EAAU1lB,EAAmBY,EAAc+kB,EAA2B7kB,GAC9F,MAAMV,EAAW,GAQjB,IAAK,IAAIxc,EAAI,EAAGA,EAAIo/B,GAAap/B,IAAK,CAClC,MAAMK,EAAO8+B,GAAan/B,IACpB,UAAE6a,EAAS,UAAEpC,GAAcqC,EAAmBza,GAMhDwa,EAAUgnB,IAAkBppB,GAC5B+D,EAASrZ,MAAK,IAAA+f,eAAczK,EAAW,CACnC9P,IAAKtI,KACFwhC,EACHl/B,cAAekZ,OAG3B,CACA,IAAKA,KAAK6H,YAAcqe,EAA2B,CAC/ClmB,KAAK6H,WAAa,IAAIqe,EAA0B/kB,EAAcnB,KAAKiD,aAAcjD,KAAKjD,QAAUiD,KAAKjD,OAAO8K,YAC5G,MAAM,SAAE5G,EAAQ,OAAEwB,EAAM,KAAErD,EAAI,gBAAEsd,EAAe,aAAEyJ,GAAiBH,EAClEhmB,KAAK6H,WAAWue,WAAW,CACvBnlB,WACAwB,SACA4jB,oBAAqB72B,QAAQ4P,IACxBsd,GAAmB5e,EAAY4e,GACpC51B,cAAekZ,KACfmkB,eAAgB,IAAMnkB,KAAKmkB,iBAQ3BmC,cAAiC,iBAAX7jB,EAAsBA,EAAS,OACrD8jB,uBAAwBllB,EACxB8kB,gBAER,CACA,OAAOxlB,CACX,CACAsjB,eACIjkB,KAAKwmB,MAAMxmB,KAAKkI,YAAalI,KAAKiD,aAAcjD,KAAKvL,QAASuL,KAAKvb,MACvE,CAMA41B,qBACI,OAAOra,KAAK5J,QACN4J,KAAKymB,2BAA2BzmB,KAAK5J,QAAS4J,KAAKvb,ORjQzC,CACpBmG,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,GQoQrC,CACA03B,eAAe55B,GACX,OAAOkT,KAAKiD,aAAanW,EAC7B,CACA61B,eAAe71B,EAAKvJ,GAChByc,KAAKiD,aAAanW,GAAOvJ,CAC7B,CAQAojC,qBAAqBh2B,EAAQi2B,GAAY,GACrC,OAAO5mB,KAAK6mB,iCAAiCl2B,EAAQqP,KAAKvb,MAAOmiC,EACrE,CAKA3mB,SAASxb,IACDA,EAAMye,mBAAqBlD,KAAKvb,MAAMye,oBACtClD,KAAKmkB,iBAETnkB,KAAKvb,MAAQA,EAIb,IAAK,IAAIN,EAAI,EAAGA,EAAIq/B,GAAkBp/B,OAAQD,IAAK,CAC/C,MAAM2I,EAAM02B,GAAkBr/B,GAC1B6b,KAAK+jB,uBAAuBj3B,KAC5BkT,KAAK+jB,uBAAuBj3B,YACrBkT,KAAK+jB,uBAAuBj3B,IAEvC,MAAM2e,EAAWhnB,EAAM,KAAOqI,GAC1B2e,IACAzL,KAAK+jB,uBAAuBj3B,GAAOkT,KAAK8mB,GAAGh6B,EAAK2e,GAExD,CACAzL,KAAK6jB,iBGjTb,SAAqClc,EAASxR,EAAMiF,GAChD,MAAM,WAAEkpB,GAAenuB,EACvB,IAAK,MAAMrJ,KAAOqJ,EAAM,CACpB,MAAM4wB,EAAY5wB,EAAKrJ,GACjBk6B,EAAY5rB,EAAKtO,GACvB,IAAI,IAAA3I,GAAc4iC,GAKdpf,EAAQsf,SAASn6B,EAAKi6B,IAClB,EAAAvC,GAAA,GAAwBF,IACxBA,EAAWv9B,IAAI+F,QAUlB,IAAI,IAAA3I,GAAc6iC,GAKnBrf,EAAQsf,SAASn6B,GAAK,QAAYi6B,KAC9B,EAAAvC,GAAA,GAAwBF,IACxBA,EAAWc,OAAOt4B,QAGrB,GAAIk6B,IAAcD,EAMnB,GAAIpf,EAAQka,SAAS/0B,GAAM,CACvB,MAAMo6B,EAAgBvf,EAAQyW,SAAStxB,IAEtCo6B,EAAcC,aAAeD,EAAcv/B,IAAIo/B,EACpD,KACK,CACD,MAAMtB,EAAc9d,EAAQ+e,eAAe55B,GAC3C6a,EAAQsf,SAASn6B,GAAK,aAA4BF,IAAhB64B,EAA4BA,EAAcsB,GAChF,CAER,CAEA,IAAK,MAAMj6B,KAAOsO,OACIxO,IAAduJ,EAAKrJ,IACL6a,EAAQyf,YAAYt6B,GAE5B,OAAOqJ,CACX,CH0PgCkxB,CAA4BrnB,KAAMA,KAAKqI,4BAA4B5jB,GAAQub,KAAK6jB,iBAC5G,CACA9T,WACI,OAAO/P,KAAKvb,KAChB,CAIA6iC,WAAW9iC,GACP,IAAID,EACJ,OAAsC,QAA9BA,EAAKyb,KAAKvb,MAAM4Z,gBAA6B,IAAP9Z,OAAgB,EAASA,EAAGC,EAC9E,CAIA+J,uBACI,OAAOyR,KAAKvb,MAAMoB,UACtB,CACAs2B,wBACI,OAAOnc,KAAKvb,MAAMwX,kBACtB,CACAsrB,wBACI,IAAIhjC,EACJ,OAAOyb,KAAK5B,cAAgB4B,KAA8B,QAAtBzb,EAAKyb,KAAKjD,cAA2B,IAAPxY,OAAgB,EAASA,EAAGgjC,uBAClG,CACAzU,kBAAkB0U,GAAgB,GAC9B,IAAIjjC,EAAIkU,EACR,GAAI+uB,EACA,OAA8B,QAAtBjjC,EAAKyb,KAAKjD,cAA2B,IAAPxY,OAAgB,EAASA,EAAGuuB,oBACtE,IAAK9S,KAAK7B,sBAAuB,CAC7B,MAAMI,GAAkC,QAAtB9F,EAAKuH,KAAKjD,cAA2B,IAAPtE,OAAgB,EAASA,EAAGqa,sBAAwB,CAAC,EAIrG,YAH2BlmB,IAAvBoT,KAAKvb,MAAMgZ,UACXc,EAAQd,QAAUuC,KAAKvb,MAAMgZ,SAE1Bc,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIpa,EAAI,EAAGA,EAAIs/B,GAAiBt/B,IAAK,CACtC,MAAMK,EAAO,GAAaL,GACpBya,EAAOoB,KAAKvb,MAAMD,IACpBwZ,EAAeY,KAAkB,IAATA,KACxBL,EAAQ/Z,GAAQoa,EAExB,CACA,OAAOL,CACX,CAIAomB,gBAAgB7W,GACZ,IAAIvpB,EACJ,MAAMkjC,EAAqBznB,KAAKunB,wBAChC,GAAIE,EAEA,OAD8C,QAA7CljC,EAAKkjC,EAAmBjT,uBAAoC,IAAPjwB,GAAyBA,EAAGwC,IAAI+mB,GAC/E,IAAM2Z,EAAmBjT,gBAAgBxtB,OAAO8mB,EAE/D,CAIAmZ,SAASn6B,EAAKvJ,GAENyc,KAAK6hB,SAAS/0B,IACdkT,KAAKonB,YAAYt6B,GACrBkT,KAAKrS,OAAOhG,IAAImF,EAAKvJ,GACrByc,KAAKiD,aAAanW,GAAOvJ,EAAM8W,MAC/B2F,KAAK4kB,kBAAkB93B,EAAKvJ,EAChC,CAIA6jC,YAAYt6B,GACR,IAAIvI,EACJyb,KAAKrS,OAAO3G,OAAO8F,GACyB,QAA3CvI,EAAKyb,KAAK4jB,mBAAmBvpB,IAAIvN,UAAyB,IAAPvI,GAAyBA,IAC7Eyb,KAAK4jB,mBAAmB58B,OAAO8F,UACxBkT,KAAKiD,aAAanW,GACzBkT,KAAK0nB,2BAA2B56B,EAAKkT,KAAKkI,YAC9C,CAIA2Z,SAAS/0B,GACL,OAAOkT,KAAKrS,OAAOwU,IAAIrV,EAC3B,CAKAsxB,SAAStxB,EAAK66B,GACV,GAAI3nB,KAAKvb,MAAMkJ,QAAUqS,KAAKvb,MAAMkJ,OAAOb,GACvC,OAAOkT,KAAKvb,MAAMkJ,OAAOb,GAE7B,IAAIvJ,EAAQyc,KAAKrS,OAAO0M,IAAIvN,GAK5B,YAJcF,IAAVrJ,QAAwCqJ,IAAjB+6B,IACvBpkC,GAAQ,QAAYokC,GACpB3nB,KAAKinB,SAASn6B,EAAKvJ,IAEhBA,CACX,CAMAqkC,UAAU96B,GACN,YAAkCF,IAA3BoT,KAAKiD,aAAanW,IAAuBkT,KAAK5J,QAE/C4J,KAAK6nB,sBAAsB7nB,KAAK5J,QAAStJ,EAAKkT,KAAKvL,SADnDuL,KAAKiD,aAAanW,EAE5B,CAKAg7B,cAAch7B,EAAKvJ,GACfyc,KAAKokB,WAAWt3B,GAAOvJ,CAC3B,CAKA+wB,cAAcxnB,GACV,IAAIvI,EACJ,MAAM,QAAEkZ,GAAYuC,KAAKvb,MACnBsjC,EAAsC,iBAAZtqB,GAA2C,iBAAZA,EACD,QAAvDlZ,GAAK,QAAwByb,KAAKvb,MAAOgZ,UAA6B,IAAPlZ,OAAgB,EAASA,EAAGuI,QAC5FF,EAIN,GAAI6Q,QAAgC7Q,IAArBm7B,EACX,OAAOA,EAMX,MAAMp3B,EAASqP,KAAKgoB,uBAAuBhoB,KAAKvb,MAAOqI,GACvD,YAAeF,IAAX+D,IAAyB,IAAAxM,GAAcwM,QAMR/D,IAA5BoT,KAAKqkB,cAAcv3B,SACDF,IAArBm7B,OACEn7B,EACAoT,KAAKokB,WAAWt3B,GARX6D,CASf,CACAm2B,GAAG7c,EAAWwD,GAIV,OAHKzN,KAAK8jB,OAAO7Z,KACbjK,KAAK8jB,OAAO7Z,GAAa,IAAI,MAE1BjK,KAAK8jB,OAAO7Z,GAAWljB,IAAI0mB,EACtC,CACA5P,OAAOoM,KAAcge,GACjB,IAAI1jC,EAC8B,QAAjCA,EAAKyb,KAAK8jB,OAAO7Z,UAA+B,IAAP1lB,GAAyBA,EAAGsZ,UAAUoqB,EACpF,GC/cAlC,yBAAyBryB,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEw0B,wBAAwBv0B,GAAS,GAAK,CACnD,CACAq0B,uBAAuBvjC,EAAOqI,GAC1B,IAAIvI,EACJ,OAA8B,QAAtBA,EAAKE,EAAM2E,aAA0B,IAAP7E,OAAgB,EAASA,EAAGuI,EACtE,CACA46B,2BAA2B56B,GAAK,KAAEqW,EAAI,MAAE/Z,WAC7B+Z,EAAKrW,UACL1D,EAAM0D,EACjB,CACA+5B,kCAAiC,WAAEhhC,EAAU,cAAE4jB,KAAkB9Y,IAAU,gBAAEgU,GAAmBwjB,GAC5F,IAAIz3B,GAAS,SAAUC,EAAQ9K,GAAc,CAAC,EAAGma,MAYjD,GARI2E,IACI8E,IACAA,EAAgB9E,EAAgB8E,IAChC9Y,IACAA,EAASgU,EAAgBhU,IACzBD,IACAA,EAASiU,EAAgBjU,KAE7By3B,EAAW,EACX,SAAwBnoB,KAAMrP,EAAQD,GACtC,MAAMU,EAAS6xB,GAAgBjjB,KAAMrP,EAAQD,EAAQ+Y,GACrDA,EAAgBrY,EAAOqY,cACvB9Y,EAASS,EAAOT,MACpB,CACA,MAAO,CACH9K,aACA4jB,mBACG9Y,EAEX,EGjCJ,MAAMy3B,WAA0B1E,GAC5BmE,sBAAsBtmB,EAAUzU,GAC5B,GAAI,QAAmBA,GAAM,CACzB,MAAMu7B,GAAc,QAAoBv7B,GACxC,OAAOu7B,GAAcA,EAAY/5B,SAAe,CACpD,CACK,CACD,MAAMg6B,GAVQ3gB,EAUyBpG,EATxCgL,OAAO0T,iBAAiBtY,IAUjBpkB,GAASsf,EAAc/V,GACvBw7B,EAAcpI,iBAAiBpzB,GAC/Bw7B,EAAcx7B,KAAS,EAC7B,MAAwB,iBAAVvJ,EAAqBA,EAAM0gB,OAAS1gB,CACtD,CAfR,IAA0BokB,CAgBtB,CACA8e,2BAA2BllB,GAAU,mBAAEtF,IACnC,OAAOoe,GAAmB9Y,EAAUtF,EACxC,CACAuqB,MAAMte,EAAajF,EAAcxO,EAAShQ,GACtCue,EAAgBkF,EAAajF,EAAcxO,EAAShQ,EAAMye,kBAC9D,CACAmF,4BAA4B5jB,GACxB,OAAO4jB,GAA4B5jB,EACvC,CACAy/B,eAAe3iB,EAAU2G,EAAaN,EAAWC,GAC7CH,GAAWnG,EAAU2G,EAAaN,EAAWC,EACjD,EC3BJ,MAAM0gB,WAAyB7E,GAC3BsE,uBAAuBvjC,EAAOqI,GAC1B,OAAOrI,EAAMqI,EACjB,CACA+6B,sBAAsBtmB,EAAUzU,GAC5B,IAAIvI,EACJ,OAAI,QAAmBuI,IACyB,QAAnCvI,GAAK,QAAoBuI,UAAyB,IAAPvI,OAAgB,EAASA,EAAG+J,UAAY,GAEhGxB,EAAOkb,GAAoB7F,IAAIrV,GAA0BA,EAAnBwa,GAAYxa,GAC3CyU,EAASinB,aAAa17B,GACjC,CACA25B,6BACI,MbZgB,CACpB77B,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,GacrC,CACAqZ,4BAA4B5jB,GACxB,OAAO,GAA4BA,EACvC,CACA+hC,MAAMte,EAAajF,EAAcxO,EAAShQ,GACtCshB,GAAcmC,EAAajF,EAAcxO,EAAShQ,EAAMye,kBAC5D,CACAghB,eAAe3iB,EAAU2G,EAAaN,EAAWC,GAC7CI,GAAU1G,EAAU2G,EAAaN,EAAWC,EAChD,EC7BJ,MAAM,GAAyB,CAACjL,EAAWnI,IAChC4N,EAAezF,GAChB,IAAI2rB,GAAiB9zB,EAAS,CAAEmP,4BAA4B,IAC5D,IAAIwkB,GAAkB3zB,EAAS,CAAEmP,4BAA4B,ICLvE,SAAS6kB,GAAgBC,EAAQvR,GAC7B,OAAIA,EAAKnoB,MAAQmoB,EAAKxhB,IACX,EACH+yB,GAAUvR,EAAKnoB,IAAMmoB,EAAKxhB,KAAQ,GAC9C,CAQA,MAAMgzB,GAAsB,CACxBC,QAAS,CAACjwB,EAAQkwB,KACd,IAAKA,EAAKl4B,OACN,OAAOgI,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI,EAAAgN,GAAA,KAAQhN,GAIR,OAAOA,EAHPA,EAAS6C,WAAW7C,EAK5B,CAOA,MAAO,GAFG8vB,GAAgB9vB,EAAQkwB,EAAKl4B,OAAO/F,OACpC69B,GAAgB9vB,EAAQkwB,EAAKl4B,OAAO9C,KAC1B,G,eChC5B,MAAMi7B,GAAW,QACXC,GAAmB,CACrBH,QAAS,CAACjwB,GAAUqwB,YAAWC,sBAC3B,MAAMC,EAAWvwB,EAIXwwB,EAAuBxwB,EAAO2J,SAAS,QACvC8mB,EAAe,GACjBD,IACAxwB,EAASA,EAAO6O,QAAQkY,IAAmBI,IACvCsJ,EAAa9hC,KAAKw4B,GACXgJ,OAGf,MAAMO,EAASt8B,GAAA,QAAc4L,GAE7B,GAAI0wB,EAAOjlC,OAAS,EAChB,OAAO8kC,EACX,MAAM33B,EAAWxE,GAAA,oBAA0B4L,GACrC1B,EAA8B,iBAAdoyB,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBr+B,EAAEpF,MAAQwjC,EAAUp+B,EAC7C2+B,EAASN,EAAgBp7B,EAAErI,MAAQwjC,EAAUn7B,EACnDw7B,EAAO,EAAIpyB,IAAWqyB,EACtBD,EAAO,EAAIpyB,IAAWsyB,EAOtB,MAAMC,GAAe,EAAAh5B,GAAA,GAAI84B,EAAQC,EAAQ,IAEP,iBAAvBF,EAAO,EAAIpyB,KAClBoyB,EAAO,EAAIpyB,IAAWuyB,GAEQ,iBAAvBH,EAAO,EAAIpyB,KAClBoyB,EAAO,EAAIpyB,IAAWuyB,GAC1B,IAAI14B,EAASS,EAAS83B,GACtB,GAAIF,EAAsB,CACtB,IAAIhlC,EAAI,EACR2M,EAASA,EAAO0W,QAAQshB,IAAU,KAC9B,MAAMW,EAAcL,EAAajlC,GAEjC,OADAA,IACOslC,CAAW,GAE1B,CACA,OAAO34B,CAAM,GC1CrB,MAAM44B,WAAiC,YAMnCC,oBACI,MAAM,cAAE7iC,EAAa,YAAE8iC,EAAW,kBAAEC,EAAiB,SAAE5oB,GAAajB,KAAKvb,OACnE,WAAEojB,GAAe/gB,E1EjB/B,IAA2BgjC,I0EkBDC,G1EjBtB1mC,OAAOC,OAAOif,EAAiBunB,G0EkBvBjiB,IACI+hB,EAAYI,OACZJ,EAAYI,MAAMjjC,IAAI8gB,GACtBgiB,GAAqBA,EAAkBhY,UAAY5Q,GACnD4oB,EAAkBhY,SAAShK,GAE/BA,EAAW6G,KAAKub,YAChBpiB,EAAWuC,iBAAiB,qBAAqB,KAC7CpK,KAAK4U,cAAc,IAEvB/M,EAAWue,WAAW,IACfve,EAAWpT,QACdmd,eAAgB,IAAM5R,KAAK4U,kBAGnClV,EAAsBE,gBAAiB,CAC3C,CACAG,wBAAwBmqB,GACpB,MAAM,iBAAEC,EAAgB,cAAErjC,EAAa,KAAEsY,EAAI,UAAEuS,GAAc3R,KAAKvb,MAC5DojB,EAAa/gB,EAAc+gB,WACjC,OAAKA,GASLA,EAAW8J,UAAYA,EACnBvS,GACA8qB,EAAUC,mBAAqBA,QACVv9B,IAArBu9B,EACAtiB,EAAWuiB,aAGXpqB,KAAK4U,eAELsV,EAAUvY,YAAcA,IACpBA,EACA9J,EAAWwiB,UAELxiB,EAAWyiB,YAMjB,kBAAgB,KACZ,IAAI/lC,GACmC,QAAhCA,EAAKsjB,EAAW0iB,kBAA+B,IAAPhmC,OAAgB,EAASA,EAAGimC,QAAQpmC,SAC/E4b,KAAK4U,cACT,KAIL,MAnCI,IAoCf,CACA1U,qBACI,MAAM,WAAE2H,GAAe7H,KAAKvb,MAAMqC,cAC9B+gB,IACAA,EAAW6G,KAAKub,aACXpiB,EAAWhN,kBAAoBgN,EAAW4iB,UAC3CzqB,KAAK4U,eAGjB,CACA8V,uBACI,MAAM,cAAE5jC,EAAa,YAAE8iC,EAAaC,kBAAmBc,GAAoB3qB,KAAKvb,OAC1E,WAAEojB,GAAe/gB,EACnB+gB,IACAA,EAAW+iB,6BACPhB,aAAiD,EAASA,EAAYI,QACtEJ,EAAYI,MAAM5E,OAAOvd,IACzB8iB,aAAuD,EAASA,EAAeE,aAC/EF,EAAeE,WAAWhjB,GAEtC,CACA+M,eACI,MAAM,aAAEA,GAAiB5U,KAAKvb,MAC9BmwB,SAA4DA,GAChE,CACAlX,SACI,OAAO,IACX,EAOJ,MAAMqsB,GAAyB,CAC3Be,aAAc,IACPnC,GACHoC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRC,oBAAqBrC,GACrBsC,qBAAsBtC,GACtBuC,uBAAwBvC,GACxBwC,wBAAyBxC,GACzByC,UAAWrC,IC3HTsC,GAAiB,CACnBnsB,cDuGJ,SAAuBza,GACnB,MAAOktB,EAAWiD,GAAgBlD,KAC5BkY,GAAc,IAAAjlC,YAAWkb,GAC/B,OAAQ,gBAA6B6pB,GAA0B,IAAKjlC,EAAOmlC,YAAaA,EAAaC,mBAAmB,IAAAllC,YAAWwb,GAA2BwR,UAAWA,EAAWiD,aAAcA,GACtM,G,0BExGA,MAAM0W,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQlnC,OACrBonC,GAAYjoC,GAA2B,iBAAVA,EAAqBiY,WAAWjY,GAASA,EACtEkoC,GAAQloC,GAA2B,iBAAVA,GAAsB,EAAAoiB,GAAA,KAAQpiB,GA4C7D,SAASmoC,GAAU/9B,EAAQg+B,GACvB,IAAIpnC,EACJ,OAAqC,QAA7BA,EAAKoJ,EAAOg+B,UAAgC,IAAPpnC,EAAgBA,EAAKoJ,EAAOm9B,YAC7E,CAwBA,MAAMc,GAAkBC,GAAS,EAAG,GAAKC,GAAA,IACnCC,GAAmBF,GAAS,GAAK,IAAMphC,GAAA,GAC7C,SAASohC,GAASl2B,EAAK3G,EAAK4D,GACxB,OAAQ/O,GAEAA,EAAI8R,EACG,EACP9R,EAAImL,EACG,EACJ4D,GAAO,EAAAF,GAAA,GAASiD,EAAK3G,EAAKnL,GAEzC,CCtFA,SAASmoC,GAAa7U,EAAM8U,GACxB9U,EAAKxhB,IAAMs2B,EAAWt2B,IACtBwhB,EAAKnoB,IAAMi9B,EAAWj9B,GAC1B,CAMA,SAASk9B,GAAY1S,EAAK2S,GACtBH,GAAaxS,EAAI5uB,EAAGuhC,EAAUvhC,GAC9BohC,GAAaxS,EAAI3rB,EAAGs+B,EAAUt+B,EAClC,CCVA,SAASu+B,GAAiBjhB,EAAOqM,EAAWhyB,EAAO+xB,EAAa8B,GAM5D,OAJAlO,EAAQgO,GADRhO,GAASqM,EACiB,EAAIhyB,EAAO+xB,QACpB3qB,IAAbysB,IACAlO,EAAQgO,GAAWhO,EAAO,EAAIkO,EAAU9B,IAErCpM,CACX,CAsBA,SAASkhB,GAAqBlV,EAAM2C,GAAahtB,EAAKitB,EAAUC,GAAYtpB,EAAQ47B,IAlBpF,SAAyBnV,EAAMK,EAAY,EAAGhyB,EAAQ,EAAGkL,EAAS,GAAK2oB,EAAU4S,EAAa9U,EAAMmV,EAAanV,GACzG,UAAaK,KACbA,EAAYhc,WAAWgc,GAEvBA,GADyB,EAAAhnB,GAAA,GAAI87B,EAAW32B,IAAK22B,EAAWt9B,IAAKwoB,EAAY,KAC1C8U,EAAW32B,KAE9C,GAAyB,iBAAd6hB,EACP,OACJ,IAAID,GAAc,EAAA/mB,GAAA,GAAIy7B,EAAWt2B,IAAKs2B,EAAWj9B,IAAK0B,GAClDymB,IAAS8U,IACT1U,GAAeC,GACnBL,EAAKxhB,IAAMy2B,GAAiBjV,EAAKxhB,IAAK6hB,EAAWhyB,EAAO+xB,EAAa8B,GACrElC,EAAKnoB,IAAMo9B,GAAiBjV,EAAKnoB,IAAKwoB,EAAWhyB,EAAO+xB,EAAa8B,EACzE,CAMIkT,CAAgBpV,EAAM2C,EAAWhtB,GAAMgtB,EAAWC,GAAWD,EAAWE,GAAYF,EAAWt0B,MAAOkL,EAAQ47B,EAClH,CAIA,MAAM,GAAQ,CAAC,IAAK,SAAU,WACxB,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASE,GAAoBhT,EAAKM,EAAYqS,EAAWM,GACrDJ,GAAqB7S,EAAI5uB,EAAGkvB,EAAY,GAAOqS,aAA6C,EAASA,EAAUvhC,EAAG6hC,aAA6C,EAASA,EAAU7hC,GAClLyhC,GAAqB7S,EAAI3rB,EAAGisB,EAAY,GAAOqS,aAA6C,EAASA,EAAUt+B,EAAG4+B,aAA6C,EAASA,EAAU5+B,EACtL,CCjDA,SAAS6+B,GAAgBj5B,GACrB,OAA2B,IAApBA,EAAM+jB,WAAmC,IAAhB/jB,EAAMjO,KAC1C,CACA,SAASmnC,GAAYl5B,GACjB,OAAOi5B,GAAgBj5B,EAAM7I,IAAM8hC,GAAgBj5B,EAAM5F,EAC7D,CACA,SAAS++B,GAAUl5B,EAAGC,GAClB,OAAQD,EAAE9I,EAAE+K,MAAQhC,EAAE/I,EAAE+K,KACpBjC,EAAE9I,EAAEoE,MAAQ2E,EAAE/I,EAAEoE,KAChB0E,EAAE7F,EAAE8H,MAAQhC,EAAE9F,EAAE8H,KAChBjC,EAAE7F,EAAEmB,MAAQ2E,EAAE9F,EAAEmB,GACxB,CACA,SAAS69B,GAAYrT,GACjB,OAAOtC,GAAWsC,EAAI5uB,GAAKssB,GAAWsC,EAAI3rB,EAC9C,C,aCdA,MAAMi/B,GACF/X,cACI/U,KAAKwqB,QAAU,EACnB,CACAzjC,IAAI8hC,IACA,SAAc7oB,KAAKwqB,QAAS3B,GAC5BA,EAAK1E,gBACT,CACAiB,OAAOyD,GAKH,IAJA,SAAW7oB,KAAKwqB,QAAS3B,GACrBA,IAAS7oB,KAAK+sB,WACd/sB,KAAK+sB,cAAWngC,GAEhBi8B,IAAS7oB,KAAKgtB,KAAM,CACpB,MAAMD,EAAW/sB,KAAKwqB,QAAQxqB,KAAKwqB,QAAQpmC,OAAS,GAChD2oC,GACA/sB,KAAKqqB,QAAQ0C,EAErB,CACJ,CACAzC,SAASzB,GACL,MAAMoE,EAAcjtB,KAAKwqB,QAAQ0C,WAAWC,GAAWtE,IAASsE,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI5oC,EAAI8oC,EAAa9oC,GAAK,EAAGA,IAAK,CACnC,MAAMgpC,EAASntB,KAAKwqB,QAAQrmC,GAC5B,IAAyB,IAArBgpC,EAAOxb,UAAqB,CAC5Bob,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACA/sB,KAAKqqB,QAAQ0C,IACN,EAKf,CACA1C,QAAQxB,EAAMuE,GACV,IAAI7oC,EACJ,MAAMwoC,EAAW/sB,KAAKgtB,KACtB,GAAInE,IAASkE,IAEb/sB,KAAK+sB,SAAWA,EAChB/sB,KAAKgtB,KAAOnE,EACZA,EAAKwE,OACDN,GAAU,CACVA,EAASxrB,UAAYwrB,EAAS5I,iBAC9B0E,EAAK1E,iBACL0E,EAAKyE,WAAaP,EACdK,IACAvE,EAAKyE,WAAWC,iBAAkB,GAElCR,EAASS,WACT3E,EAAK2E,SAAWT,EAASS,SACzB3E,EAAK2E,SAASvqB,aACV8pB,EAASU,iBAAmBV,EAAS9pB,eAEpB,QAApB1e,EAAKskC,EAAKna,YAAyB,IAAPnqB,OAAgB,EAASA,EAAGmpC,cACzD7E,EAAK8E,eAAgB,GAEzB,MAAM,UAAEC,GAAc/E,EAAKp0B,SACT,IAAdm5B,GACAb,EAASc,MAcjB,CACJ,CACAC,wBACI9tB,KAAKwqB,QAAQnjC,SAASwhC,IAClB,IAAItkC,EAAIkU,EAAI0sB,EAAI4I,EAAIC,EAC0B,QAA7Cv1B,GAAMlU,EAAKskC,EAAKp0B,SAASmd,sBAAmC,IAAPnZ,GAAyBA,EAAGzU,KAAKO,GACmB,QAAzGypC,EAAkC,QAA5B7I,EAAK0D,EAAKoF,oBAAiC,IAAP9I,OAAgB,GAAU4I,EAAK5I,EAAG1wB,SAASmd,sBAAmC,IAAPoc,GAAyBA,EAAGhqC,KAAK+pC,EAAG,GAE9J,CACA5J,iBACInkB,KAAKwqB,QAAQnjC,SAASwhC,IAClBA,EAAKtnB,UAAYsnB,EAAK1E,gBAAe,EAAM,GAEnD,CAKA+J,qBACQluB,KAAKgtB,MAAQhtB,KAAKgtB,KAAKQ,WACvBxtB,KAAKgtB,KAAKQ,cAAW5gC,EAE7B,EC1GJ,SAASuhC,GAAyB16B,EAAOu1B,EAAWoF,GAChD,IAAIrrB,EAAY,GAOhB,MAAMsrB,EAAa56B,EAAM7I,EAAE4sB,UAAYwR,EAAUp+B,EAC3C0jC,EAAa76B,EAAM5F,EAAE2pB,UAAYwR,EAAUn7B,EAWjD,IAVIwgC,GAAcC,KACdvrB,EAAY,eAAesrB,QAAiBC,YAM5B,IAAhBtF,EAAUp+B,GAA2B,IAAhBo+B,EAAUn7B,IAC/BkV,GAAa,SAAS,EAAIimB,EAAUp+B,MAAM,EAAIo+B,EAAUn7B,OAExDugC,EAAiB,CACjB,MAAM,OAAErgC,EAAM,QAAEC,EAAO,QAAEC,GAAYmgC,EACjCrgC,IACAgV,GAAa,UAAUhV,UACvBC,IACA+U,GAAa,WAAW/U,UACxBC,IACA8U,GAAa,WAAW9U,SAChC,CAKA,MAAMsgC,EAAgB96B,EAAM7I,EAAEpF,MAAQwjC,EAAUp+B,EAC1C4jC,EAAgB/6B,EAAM5F,EAAErI,MAAQwjC,EAAUn7B,EAIhD,OAHsB,IAAlB0gC,GAAyC,IAAlBC,IACvBzrB,GAAa,SAASwrB,MAAkBC,MAErCzrB,GAAa,MACxB,CCvCA,MAAM0rB,GAAiB,CAAC/6B,EAAGC,IAAMD,EAAEksB,MAAQjsB,EAAEisB,MCG7C,MAAM8O,GACF3Z,cACI/U,KAAK/c,SAAW,GAChB+c,KAAK2uB,SAAU,CACnB,CACA5nC,IAAI+mB,IACA,SAAc9N,KAAK/c,SAAU6qB,GAC7B9N,KAAK2uB,SAAU,CACnB,CACAvJ,OAAOtX,IACH,SAAW9N,KAAK/c,SAAU6qB,GAC1B9N,KAAK2uB,SAAU,CACnB,CACAtnC,QAAQomB,GACJzN,KAAK2uB,SAAW3uB,KAAK/c,SAAS+gB,KAAKyqB,IACnCzuB,KAAK2uB,SAAU,EACf3uB,KAAK/c,SAASoE,QAAQomB,EAC1B,E,eCEJ,MAAMmhB,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAI,GAAK,EACT,SAASC,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACHna,YAAYoa,EAAWlsB,EAAe,CAAC,EAAGlG,GAASgyB,aAAqD,EAASA,MAI7G/uB,KAAKzC,GAAK,KAIVyC,KAAKovB,YAAc,EAOnBpvB,KAAK/c,SAAW,IAAI0D,IAKpBqZ,KAAKvL,QAAU,CAAC,EAMhBuL,KAAKqvB,iBAAkB,EACvBrvB,KAAKwb,oBAAqB,EAO1Bxb,KAAK2tB,eAAgB,EACrB3tB,KAAK0lB,kBAAmB,EAKxB1lB,KAAKsvB,mBAAoB,EAIzBtvB,KAAKuvB,uBAAwB,EAC7BvvB,KAAKwvB,uBAAwB,EAK7BxvB,KAAK0tB,YAAa,EAIlB1tB,KAAKyvB,OAAQ,EAKbzvB,KAAK0vB,YAAa,EAIlB1vB,KAAK2vB,sBAAuB,EAS5B3vB,KAAKgpB,UAAY,CAAEp+B,EAAG,EAAGiD,EAAG,GAI5BmS,KAAK4vB,cAAgB,IAAI3tB,IAEzBjC,KAAK6vB,eAAiB,IAAI5tB,IAC1BjC,KAAK8vB,kBAAoB,KACjB9vB,KAAK0tB,aACL1tB,KAAK0tB,YAAa,EAClB1tB,KAAK+vB,oBACT,EAOJ/vB,KAAKgwB,iBAAmB,KACpBhwB,KAAKiwB,MAAM5oC,QAAQ6oC,IACnBlwB,KAAKiwB,MAAM5oC,QAAQ8oC,IACnBnwB,KAAKiwB,MAAM5oC,QAAQ+oC,GAAe,EAEtCpwB,KAAKqwB,cAAe,EACpBrwB,KAAKswB,WAAY,EACjBtwB,KAAKuwB,kBAAoB,EAKzBvwB,KAAKwwB,YAAc,IAAIvuB,IACvBjC,KAAKmvB,UAAYA,EACjBnvB,KAAKiD,aAAeA,EACpBjD,KAAK0O,KAAO3R,EAASA,EAAO2R,MAAQ3R,EAASiD,KAC7CA,KAAKywB,KAAO1zB,EAAS,IAAIA,EAAO0zB,KAAM1zB,GAAU,GAChDiD,KAAKjD,OAASA,EACdiD,KAAK4f,MAAQ7iB,EAASA,EAAO6iB,MAAQ,EAAI,EACzCuP,GAAanvB,KAAK0O,KAAKgiB,sBAAsBvB,EAAWnvB,MACxD,IAAK,IAAI7b,EAAI,EAAGA,EAAI6b,KAAKywB,KAAKrsC,OAAQD,IAClC6b,KAAKywB,KAAKtsC,GAAGwrC,sBAAuB,EAEpC3vB,KAAK0O,OAAS1O,OACdA,KAAKiwB,MAAQ,IAAIvB,GACzB,CACAtkB,iBAAiB5lB,EAAM0lB,GAInB,OAHKlK,KAAK4vB,cAAcztB,IAAI3d,IACxBwb,KAAK4vB,cAAcjoC,IAAInD,EAAM,IAAI,MAE9Bwb,KAAK4vB,cAAcv1B,IAAI7V,GAAMuC,IAAImjB,EAC5C,CACAymB,gBAAgBnsC,KAASyjC,GACrB,MAAM2I,EAAsB5wB,KAAK4vB,cAAcv1B,IAAI7V,GACnDosC,SAA0EA,EAAoB/yB,UAAUoqB,EAC5G,CACA4I,aAAarsC,GACT,OAAOwb,KAAK4vB,cAAcztB,IAAI3d,EAClC,CACAksC,sBAAsBvB,EAAWtG,GAC7B7oB,KAAK6vB,eAAeloC,IAAIwnC,EAAWtG,EACvC,CAIAhhC,MAAM0Z,EAAUosB,GAAgB,GAC5B,IAAIppC,EACJ,GAAIyb,KAAKuB,SACL,OACJvB,KAAKyvB,MACDluB,aAAoBuvB,YAAmC,QAArBvvB,EAASwvB,QAC/C/wB,KAAKuB,SAAWA,EAChB,MAAM,SAAEN,EAAQ,OAAEwB,EAAM,cAAE3b,GAAkBkZ,KAAKvL,QAUjD,GATI3N,IAAkBA,EAAcsP,SAChCtP,EAAce,MAAM0Z,GAExBvB,KAAK0O,KAAKuhB,MAAMlpC,IAAIiZ,MACG,QAAtBzb,EAAKyb,KAAKjD,cAA2B,IAAPxY,GAAyBA,EAAGtB,SAAS8D,IAAIiZ,MACxEA,KAAKmvB,WAAanvB,KAAK0O,KAAKmhB,eAAe7oC,OAAOgZ,KAAKmvB,WACnDxB,IAAkBlrB,GAAUxB,KAC5BjB,KAAK2tB,eAAgB,GAErBmB,EAAsB,CACtB,IAAIlzB,EACJ,MAAMo1B,EAAsB,IAAOhxB,KAAK0O,KAAK8gB,uBAAwB,EACrEV,EAAqBvtB,GAAU,KAC3BvB,KAAK0O,KAAK8gB,uBAAwB,EAClC5zB,GAAeA,IACfA,GAAc,EAAAlE,GAAA,GAAMs5B,EAAqB,KACrCtxB,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/CK,KAAKiwB,MAAM5oC,QAAQ4pC,IACvB,GAER,CACIhwB,GACAjB,KAAK0O,KAAKwiB,mBAAmBjwB,EAAUjB,OAGd,IAAzBA,KAAKvL,QAAQ9O,SACbmB,IACCma,GAAYwB,IACbzC,KAAKoK,iBAAiB,aAAa,EAAG3W,QAAOwrB,mBAAkBkS,2BAA0B1uB,OAAQ2uB,MAC7F,IAAI7sC,EAAIkU,EAAI0sB,EAAI4I,EAAIC,EACpB,GAAIhuB,KAAKqxB,yBAGL,OAFArxB,KAAKrP,YAAS/D,OACdoT,KAAKsxB,oBAAiB1kC,GAI1B,MAAM2kC,EAAmI,QAA/G94B,EAAwC,QAAlClU,EAAKyb,KAAKvL,QAAQ5O,kBAA+B,IAAPtB,EAAgBA,EAAKuC,EAAcyH,8BAA2C,IAAPkK,EAAgBA,EAAK+4B,IAChK,uBAAEC,EAAsB,0BAAEC,GAA+B5qC,EAAcipB,WAKvE4hB,GAAiB3xB,KAAK4xB,eACvBhF,GAAU5sB,KAAK4xB,aAAcR,IAC9BD,EAMEU,GAAgC5S,GAAoBkS,EAC1D,IAAgC,QAA1BhM,EAAKnlB,KAAKstB,kBAA+B,IAAPnI,OAAgB,EAASA,EAAG5jB,WAChEswB,GACC5S,IACI0S,IAAkB3xB,KAAKnF,kBAAoB,CAC5CmF,KAAKstB,aACLttB,KAAKiuB,aAAejuB,KAAKstB,WACzBttB,KAAKiuB,aAAaA,kBAAerhC,GAErCoT,KAAK8xB,mBAAmBr+B,EAAOo+B,GAC/B,MAAME,EAAmB,KAClB,SAAmBR,EAAkB,UACxCn5B,OAAQq5B,EACRn5B,WAAYo5B,GAEZ5qC,EAAc68B,qBACdoO,EAAiBr6B,MAAQ,EACzBq6B,EAAiB7kC,MAAO,GAE5B8S,KAAKhF,eAAe+2B,EACxB,MAOS9S,GAC0B,IAA3Bjf,KAAKuwB,mBACLU,GAAgBjxB,MAEpBA,KAAKyqB,WAA2D,QAA7CuD,GAAMD,EAAK/tB,KAAKvL,SAASmd,sBAAmC,IAAPoc,GAAyBA,EAAGhqC,KAAK+pC,IAE7G/tB,KAAK4xB,aAAeR,CAAS,GAGzC,CACA5vB,UACI,IAAIjd,EAAIkU,EACRuH,KAAKvL,QAAQwM,UAAYjB,KAAKoqB,aAC9BpqB,KAAK0O,KAAKuhB,MAAM7K,OAAOplB,MACI,QAA1Bzb,EAAKyb,KAAKuqB,kBAA+B,IAAPhmC,GAAyBA,EAAG6gC,OAAOplB,MAC/C,QAAtBvH,EAAKuH,KAAKjD,cAA2B,IAAPtE,GAAyBA,EAAGxV,SAAS+D,OAAOgZ,MAC3EA,KAAKuB,cAAW3U,EAChB,gBAAqBoT,KAAKgwB,iBAC9B,CAEAgC,cACIhyB,KAAKuvB,uBAAwB,CACjC,CACA0C,gBACIjyB,KAAKuvB,uBAAwB,CACjC,CACA2C,kBACI,OAAOlyB,KAAKuvB,uBAAyBvvB,KAAKwvB,qBAC9C,CACA6B,yBACI,IAAI9sC,EACJ,OAAQyb,KAAKwb,qBACe,QAAtBj3B,EAAKyb,KAAKjD,cAA2B,IAAPxY,OAAgB,EAASA,EAAG8sC,4BAC5D,CACR,CAEAc,cACI,IAAI5tC,EACAyb,KAAKkyB,oBAETlyB,KAAK0tB,YAAa,EACI,QAArBnpC,EAAKyb,KAAKiwB,aAA0B,IAAP1rC,GAAyBA,EAAG8C,QAAQ+qC,IAClEpyB,KAAKovB,cACT,CACAhF,WAAWiI,GAAwB,GAC/B,IAAI9tC,EAAIkU,EAAI0sB,EACZ,GAAInlB,KAAK0O,KAAKwjB,kBAEV,YAD8C,QAA7Cz5B,GAAMlU,EAAKyb,KAAKvL,SAASmd,sBAAmC,IAAPnZ,GAAyBA,EAAGzU,KAAKO,IAI3F,IADCyb,KAAK0O,KAAKgf,YAAc1tB,KAAK0O,KAAKyjB,cAC/BnyB,KAAK2tB,cACL,OACJ3tB,KAAK2tB,eAAgB,EACrB,IAAK,IAAIxpC,EAAI,EAAGA,EAAI6b,KAAKywB,KAAKrsC,OAAQD,IAAK,CACvC,MAAM0kC,EAAO7oB,KAAKywB,KAAKtsC,GACvB0kC,EAAK8G,sBAAuB,EAC5B9G,EAAKpK,aAAa,WACtB,CACA,MAAM,SAAExd,EAAQ,OAAEwB,GAAWzC,KAAKvL,QAClC,QAAiB7H,IAAbqU,IAA2BwB,EAC3B,OACJ,MAAMS,EAA0D,QAArCiiB,EAAKnlB,KAAKvL,QAAQ3N,qBAAkC,IAAPq+B,OAAgB,EAASA,EAAGpV,WAAW7M,kBAC/GlD,KAAKsyB,2BAA6BpvB,aAA6D,EAASA,EAAkBlD,KAAKiD,aAAc,IAC7IjD,KAAKuyB,iBACLF,GAAyBryB,KAAK2wB,gBAAgB,aAClD,CAEA1G,YAKI,GAJyBjqB,KAAKkyB,kBAQ1B,OAHAlyB,KAAKiyB,gBACLjyB,KAAK+vB,yBACL/vB,KAAKiwB,MAAM5oC,QAAQmrC,IAGlBxyB,KAAK0tB,aAEV1tB,KAAK0tB,YAAa,EAOd1tB,KAAK6vB,eAAenqB,OACpB1F,KAAK6vB,eAAexoC,QAAQorC,IAC5BzyB,KAAK6vB,eAAexK,SAKxBrlB,KAAKiwB,MAAM5oC,QAAQqrC,IAKnB1yB,KAAKiwB,MAAM5oC,QAAQq3B,IAKnB1e,KAAKiwB,MAAM5oC,QAAQsrC,IACnB3yB,KAAK+vB,oBAEL,eACA,kBACA,eACJ,CACAA,oBACI/vB,KAAKiwB,MAAM5oC,QAAQurC,IACnB5yB,KAAKwwB,YAAYnpC,QAAQwrC,GAC7B,CACAC,2BACI,gBAAe9yB,KAAKgwB,kBAAkB,GAAO,EACjD,CACApF,4BAMI,kBAAgB,KACR5qB,KAAK2tB,cACL3tB,KAAK0O,KAAKub,YAGVjqB,KAAK0O,KAAKohB,mBACd,GAER,CAIAyC,kBACQvyB,KAAKwtB,UAAaxtB,KAAKuB,WAE3BvB,KAAKwtB,SAAWxtB,KAAK+yB,UACzB,CACArU,eACI,IAAIn6B,EACJ,IAAKyb,KAAKuB,SACN,OAGJ,GADAvB,KAAKye,iBACCze,KAAKvL,QAAQ4xB,qBAAuBrmB,KAAKyqB,UAC1CzqB,KAAK2tB,eACN,OASJ,GAAI3tB,KAAKstB,aAAettB,KAAKstB,WAAW/rB,SACpC,IAAK,IAAIpd,EAAI,EAAGA,EAAI6b,KAAKywB,KAAKrsC,OAAQD,IAAK,CAC1B6b,KAAKywB,KAAKtsC,GAClBs6B,cACT,CAEJ,MAAMuU,EAAahzB,KAAKyC,OACxBzC,KAAKyC,OAASzC,KAAK+yB,SAAQ,GAC3B/yB,KAAKizB,gB3BxZO,CACpBroC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B0Z7BgR,KAAK2tB,eAAgB,EACrB3tB,KAAKipB,qBAAkBr8B,EACvBoT,KAAK2wB,gBAAgB,UAAW3wB,KAAKyC,OAAOkZ,WACN,QAArCp3B,EAAKyb,KAAKvL,QAAQ3N,qBAAkC,IAAPvC,GAAyBA,EAAGsZ,OAAO,gBAAiBmC,KAAKyC,OAAOkZ,UAAWqX,aAA+C,EAASA,EAAWrX,UAChM,CACA8C,aAAayU,EAAQ,WACjB,IAAIC,EAAmB3jC,QAAQwQ,KAAKvL,QAAQ0xB,cAAgBnmB,KAAKuB,UAC7DvB,KAAKsd,QACLtd,KAAKsd,OAAO8R,cAAgBpvB,KAAK0O,KAAK0gB,aACtCpvB,KAAKsd,OAAO4V,QAAUA,IACtBC,GAAmB,GAEnBA,IACAnzB,KAAKsd,OAAS,CACV8R,YAAapvB,KAAK0O,KAAK0gB,YACvB8D,QACAE,OAAQnE,EAAkBjvB,KAAKuB,UAC/BtK,OAAQ+3B,EAAchvB,KAAKuB,WAGvC,CACA2tB,iBACI,IAAI3qC,EACJ,IAAK2qC,EACD,OACJ,MAAMmE,EAAmBrzB,KAAK2tB,eAAiB3tB,KAAK2vB,qBAC9C2D,EAAgBtzB,KAAKipB,kBAAoB0D,GAAY3sB,KAAKipB,iBAC1D/lB,EAA0D,QAArC3e,EAAKyb,KAAKvL,QAAQ3N,qBAAkC,IAAPvC,OAAgB,EAASA,EAAGwrB,WAAW7M,kBACzGqwB,EAAyBrwB,aAA6D,EAASA,EAAkBlD,KAAKiD,aAAc,IACpIuwB,EAA8BD,IAA2BvzB,KAAKsyB,2BAChEe,IACCC,GACGhwB,GAAatD,KAAKiD,eAClBuwB,KACJtE,EAAelvB,KAAKuB,SAAUgyB,GAC9BvzB,KAAK2vB,sBAAuB,EAC5B3vB,KAAKmkB,iBAEb,CACA4O,QAAQU,GAAkB,GACtB,MAAMC,EAAU1zB,KAAKud,iBACrB,IAAI5B,EAAY3b,KAAK2zB,oBAAoBD,GA00BrD,IAAkBla,EAh0BN,OAJIia,IACA9X,EAAY3b,KAAKyzB,gBAAgB9X,IAo0B7CiY,IADcpa,EAj0BGmC,GAk0BH/wB,GACdgpC,GAAUpa,EAAI3rB,GAl0BC,CACHuhC,YAAapvB,KAAK0O,KAAK0gB,YACvByE,YAAaH,EACb/X,YACA1Y,aAAc,CAAC,EACfuB,OAAQxE,KAAKzC,GAErB,CACAggB,iBACI,MAAM,cAAEz2B,GAAkBkZ,KAAKvL,QAC/B,IAAK3N,EACD,M3BvdQ,CACpB8D,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2Byd7B,MAAMwqB,EAAM1yB,EAAcuzB,sBAEpB,OAAEiD,GAAWtd,KAAK0O,KAKxB,OAJI4O,IACA1D,GAAcJ,EAAI5uB,EAAG0yB,EAAOrmB,OAAOrM,GACnCgvB,GAAcJ,EAAI3rB,EAAGyvB,EAAOrmB,OAAOpJ,IAEhC2rB,CACX,CACAma,oBAAoBna,GAChB,MAAMsa,E3BleM,CACpBlpC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2Boe7Bk9B,GAAY4H,EAAkBta,GAK9B,IAAK,IAAIr1B,EAAI,EAAGA,EAAI6b,KAAKywB,KAAKrsC,OAAQD,IAAK,CACvC,MAAM0kC,EAAO7oB,KAAKywB,KAAKtsC,IACjB,OAAEm5B,EAAM,QAAE7oB,GAAYo0B,EAC5B,GAAIA,IAAS7oB,KAAK0O,MAAQ4O,GAAU7oB,EAAQ0xB,aAAc,CAKtD,GAAI7I,EAAO8V,OAAQ,CACflH,GAAY4H,EAAkBta,GAC9B,MAAQ8D,OAAQyW,GAAe/zB,KAAK0O,KAKhCqlB,IACAna,GAAcka,EAAiBlpC,GAAImpC,EAAW98B,OAAOrM,GACrDgvB,GAAcka,EAAiBjmC,GAAIkmC,EAAW98B,OAAOpJ,GAE7D,CACA+rB,GAAcka,EAAiBlpC,EAAG0yB,EAAOrmB,OAAOrM,GAChDgvB,GAAcka,EAAiBjmC,EAAGyvB,EAAOrmB,OAAOpJ,EACpD,CACJ,CACA,OAAOimC,CACX,CACAE,eAAexa,EAAKya,GAAgB,GAChC,MAAMC,E3BngBM,CACpBtpC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2BqgB7Bk9B,GAAYgI,EAAgB1a,GAC5B,IAAK,IAAIr1B,EAAI,EAAGA,EAAI6b,KAAKywB,KAAKrsC,OAAQD,IAAK,CACvC,MAAM0kC,EAAO7oB,KAAKywB,KAAKtsC,IAClB8vC,GACDpL,EAAKp0B,QAAQ0xB,cACb0C,EAAKvL,QACLuL,IAASA,EAAKna,MACd0L,GAAa8Z,EAAgB,CACzBtpC,GAAIi+B,EAAKvL,OAAOrmB,OAAOrM,EACvBiD,GAAIg7B,EAAKvL,OAAOrmB,OAAOpJ,IAG1ByV,GAAaulB,EAAK5lB,eAEvBmX,GAAa8Z,EAAgBrL,EAAK5lB,aACtC,CAIA,OAHIK,GAAatD,KAAKiD,eAClBmX,GAAa8Z,EAAgBl0B,KAAKiD,cAE/BixB,CACX,CACAT,gBAAgBja,GACZ,IAAIj1B,EACJ,MAAM4vC,E3B3hBM,CACpBvpC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B6hB7Bk9B,GAAYiI,EAAqB3a,GACjC,IAAK,IAAIr1B,EAAI,EAAGA,EAAI6b,KAAKywB,KAAKrsC,OAAQD,IAAK,CACvC,MAAM0kC,EAAO7oB,KAAKywB,KAAKtsC,GACvB,IAAK0kC,EAAKtnB,SACN,SACJ,IAAK+B,GAAaulB,EAAK5lB,cACnB,SACJ+V,GAAS6P,EAAK5lB,eAAiB4lB,EAAK0J,iBACpC,MAAM9F,E3BpiBE,CACpB7hC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2BuiBzBk9B,GAAYO,EADI5D,EAAKtL,kBAErBiP,GAAoB2H,EAAqBtL,EAAK5lB,aAAuC,QAAxB1e,EAAKskC,EAAK2E,gBAA6B,IAAPjpC,OAAgB,EAASA,EAAGo3B,UAAW8Q,EACxI,CAIA,OAHInpB,GAAatD,KAAKiD,eAClBupB,GAAoB2H,EAAqBn0B,KAAKiD,cAE3CkxB,CACX,CAIAC,eAAe3gC,GACXuM,KAAKq0B,YAAc5gC,EACnBuM,KAAKsvB,mBAAoB,EACzBtvB,KAAK0O,KAAKokB,0BACd,CACA1M,WAAW3xB,GACPuL,KAAKvL,QAAU,IACRuL,KAAKvL,WACLA,EACHm5B,eAAiChhC,IAAtB6H,EAAQm5B,WAA0Bn5B,EAAQm5B,UAE7D,CACA4E,oBACIxyB,KAAKsd,YAAS1wB,EACdoT,KAAKyC,YAAS7V,EACdoT,KAAKwtB,cAAW5gC,EAChBoT,KAAKsyB,gCAA6B1lC,EAClCoT,KAAKq0B,iBAAcznC,EACnBoT,KAAKrP,YAAS/D,EACdoT,KAAK2tB,eAAgB,CACzB,CAIAwC,qBACI,IAAI5rC,EAMJ,MAAMyoC,EAAOhtB,KAAKs0B,UAOlB,GANAt0B,KAAKsvB,oBAAsBtvB,KAAKsvB,kBAAoBtC,EAAKsC,mBACzDtvB,KAAK0lB,mBAAqB1lB,KAAK0lB,iBAAmBsH,EAAKtH,mBAKlD1lB,KAAKsvB,oBAAsBtvB,KAAKu0B,+BACjC,OACJ,MAAM,OAAE9xB,EAAM,SAAExB,GAAajB,KAAKvL,QAIlC,GAAKuL,KAAKyC,SAAYA,GAAUxB,GAAhC,CAQA,IAAKjB,KAAKq0B,cAAgBr0B,KAAKsxB,eAAgB,CAE3C,MAAMkD,EAAiBx0B,KAAKy0B,6BACxBD,GAAkBA,EAAe/xB,QACjCzC,KAAKw0B,eAAiBA,EACtBx0B,KAAKsxB,e3B1mBD,CACpB1mC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B4mBrBgR,KAAK00B,qB3B3mBD,CACpB9pC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B6mBrB6oB,GAAqB7X,KAAK00B,qBAAsB10B,KAAKyC,OAAOkZ,UAAW6Y,EAAe/xB,OAAOkZ,WAC7FuQ,GAAYlsB,KAAKsxB,eAAgBtxB,KAAK00B,uBAGtC10B,KAAKw0B,eAAiBx0B,KAAKsxB,oBAAiB1kC,CAEpD,CnClmBZ,IAAyB+D,EAAQgnB,EAAU5a,EmCumB/B,GAAKiD,KAAKsxB,gBAAmBtxB,KAAKq0B,YAuClC,GAlCKr0B,KAAKrP,SACNqP,KAAKrP,O3B7nBG,CACpB/F,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B+nBzBgR,KAAK20B,qB3B9nBG,CACpB/pC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,K2BooBzBgR,KAAKsxB,gBACLtxB,KAAK00B,uBAC2B,QAA9BnwC,EAAKyb,KAAKw0B,sBAAmC,IAAPjwC,OAAgB,EAASA,EAAGoM,SnCrnB3DA,EmCsnBOqP,KAAKrP,OnCtnBJgnB,EmCsnBY3X,KAAKsxB,enCtnBPv0B,EmCsnBuBiD,KAAKw0B,eAAe7jC,OnCrnBlF+mB,GAAiB/mB,EAAO/F,EAAG+sB,EAAS/sB,EAAGmS,EAAOnS,GAC9C8sB,GAAiB/mB,EAAO9C,EAAG8pB,EAAS9pB,EAAGkP,EAAOlP,ImCynB7BmS,KAAKq0B,aACN7kC,QAAQwQ,KAAKiuB,cAEbjuB,KAAKrP,OAASqP,KAAKg0B,eAAeh0B,KAAKyC,OAAOkZ,WAG9CuQ,GAAYlsB,KAAKrP,OAAQqP,KAAKyC,OAAOkZ,WAEzCpC,GAAcvZ,KAAKrP,OAAQqP,KAAKq0B,cAMhCnI,GAAYlsB,KAAKrP,OAAQqP,KAAKyC,OAAOkZ,WAKrC3b,KAAKu0B,+BAAgC,CACrCv0B,KAAKu0B,gCAAiC,EACtC,MAAMC,EAAiBx0B,KAAKy0B,6BACxBD,GACAhlC,QAAQglC,EAAevG,gBACnBz+B,QAAQwQ,KAAKiuB,gBAChBuG,EAAe//B,QAAQ0xB,cACxBqO,EAAe7jC,QACfqP,KAAKw0B,eAAiBA,EACtBx0B,KAAKsxB,e3BvqBD,CACpB1mC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2ByqBrBgR,KAAK00B,qB3BxqBD,CACpB9pC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B0qBrB6oB,GAAqB7X,KAAK00B,qBAAsB10B,KAAKrP,OAAQ6jC,EAAe7jC,QAC5Eu7B,GAAYlsB,KAAKsxB,eAAgBtxB,KAAK00B,uBAGtC10B,KAAKw0B,eAAiBx0B,KAAKsxB,oBAAiB1kC,CAEpD,CAjFU,CAkFd,CACA6nC,6BACI,GAAKz0B,KAAKjD,SACNic,GAAShZ,KAAKjD,OAAOkG,gBACrBgW,GAAejZ,KAAKjD,OAAOkG,cAE/B,OAAKjD,KAAKjD,OAAOu0B,gBAAkBtxB,KAAKjD,OAAOs3B,cAC3Cr0B,KAAKjD,OAAO0F,OACLzC,KAAKjD,OAGLiD,KAAKjD,OAAO03B,4BAE3B,CACArE,iBACI,IAAI7rC,EACJ,MAAM,kBAAE+qC,EAAiB,iBAAE5J,GAAqB1lB,KAChDA,KAAKsvB,kBAAoBtvB,KAAK0lB,kBAAmB,EACjD,MAAMsH,EAAOhtB,KAAKs0B,UACZM,EAAWplC,QAAQwQ,KAAKiuB,eAAiBjuB,OAASgtB,EACxD,IAAI6H,GAAU,EAKd,GAJIvF,IACAuF,GAAU,GACVD,GAAYlP,IACZmP,GAAU,GACVA,EACA,OACJ,MAAM,OAAEpyB,EAAM,SAAExB,GAAajB,KAAKvL,QAWlC,GANAuL,KAAKqvB,gBAAkB7/B,SAAgC,QAAtBjL,EAAKyb,KAAKjD,cAA2B,IAAPxY,OAAgB,EAASA,EAAG8qC,kBACvFrvB,KAAKnF,kBACLmF,KAAK80B,kBACJ90B,KAAKqvB,kBACNrvB,KAAKq0B,YAAcr0B,KAAKsxB,oBAAiB1kC,IAExCoT,KAAKyC,SAAYA,IAAUxB,EAC5B,OAKJirB,GAAYlsB,KAAKizB,gBAAiBjzB,KAAKyC,OAAOkZ,W9B/rB1D,SAAyBnC,EAAKwP,EAAW+L,EAAUC,GAAqB,GACpE,IAAIzwC,EAAIkU,EACR,MAAMw8B,EAAaF,EAAS3wC,OAC5B,IAAK6wC,EACD,OAGJ,IAAIpM,EACAp1B,EAFJu1B,EAAUp+B,EAAIo+B,EAAUn7B,EAAI,EAG5B,IAAK,IAAI1J,EAAI,EAAGA,EAAI8wC,EAAY9wC,IAC5B0kC,EAAOkM,EAAS5wC,GAChBsP,EAAQo1B,EAAKI,gBACuH,cAAjD,QAA7ExwB,EAA8B,QAAxBlU,EAAKskC,EAAKtnB,gBAA6B,IAAPhd,OAAgB,EAASA,EAAG6E,aAA0B,IAAPqP,OAAgB,EAASA,EAAGiqB,WAEnHsS,GACAnM,EAAKp0B,QAAQ0xB,cACb0C,EAAKvL,QACLuL,IAASA,EAAKna,MACd0L,GAAaZ,EAAK,CACd5uB,GAAIi+B,EAAKvL,OAAOrmB,OAAOrM,EACvBiD,GAAIg7B,EAAKvL,OAAOrmB,OAAOpJ,IAG3B4F,IAEAu1B,EAAUp+B,GAAK6I,EAAM7I,EAAEpF,MACvBwjC,EAAUn7B,GAAK4F,EAAM5F,EAAErI,MAEvB+zB,GAAcC,EAAK/lB,IAEnBuhC,GAAsB1xB,GAAaulB,EAAK5lB,eACxCmX,GAAaZ,EAAKqP,EAAK5lB,eAO/B+lB,EAAUp+B,EAAI6uB,GAAcuP,EAAUp+B,GACtCo+B,EAAUn7B,EAAI4rB,GAAcuP,EAAUn7B,EAC1C,C8B4pBYqnC,CAAgBl1B,KAAKizB,gBAAiBjzB,KAAKgpB,UAAWhpB,KAAKywB,KAAMmE,GACjE,MAAM,OAAEjkC,GAAWq8B,EACnB,IAAKr8B,EACD,OACCqP,KAAKipB,kBACNjpB,KAAKipB,gB3B3uBK,CACtBr+B,EAP0B,CAC1B4sB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,GAIb1pB,EAR0B,CAC1B2pB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,I2B8uBDvX,KAAKm1B,6B3B5uBK,CACtBvqC,EAP0B,CAC1B4sB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,GAIb1pB,EAR0B,CAC1B2pB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,K2BgvBL,MAAM6d,EAAiBp1B,KAAKgpB,UAAUp+B,EAChCyqC,EAAiBr1B,KAAKgpB,UAAUn7B,EAChCynC,EAA0Bt1B,KAAKu1B,oBAUrC9d,GAAazX,KAAKipB,gBAAiBjpB,KAAKizB,gBAAiBtiC,EAAQqP,KAAKiD,cACtEjD,KAAKu1B,oBAAsBpH,GAAyBnuB,KAAKipB,gBAAiBjpB,KAAKgpB,WAC3EhpB,KAAKu1B,sBAAwBD,GAC7Bt1B,KAAKgpB,UAAUp+B,IAAMwqC,GACrBp1B,KAAKgpB,UAAUn7B,IAAMwnC,IACrBr1B,KAAKqwB,cAAe,EACpBrwB,KAAKmkB,iBACLnkB,KAAK2wB,gBAAgB,mBAAoBhgC,GAEjD,CACAk9B,OACI7tB,KAAKswB,WAAY,CAErB,CACAjD,OACIrtB,KAAKswB,WAAY,CAErB,CACAnM,eAAeqR,GAAY,GACvB,IAAIjxC,EAAIkU,EAAI0sB,EACkC,QAA7C1sB,GAAMlU,EAAKyb,KAAKvL,SAAS0vB,sBAAmC,IAAP1rB,GAAyBA,EAAGzU,KAAKO,GACvFixC,IAAyC,QAA1BrQ,EAAKnlB,KAAKuqB,kBAA+B,IAAPpF,GAAyBA,EAAGhB,kBACzEnkB,KAAKiuB,eAAiBjuB,KAAKiuB,aAAa1sB,WACxCvB,KAAKiuB,kBAAerhC,EAE5B,CACAklC,mBAAmBr+B,EAAOo+B,GAA+B,GACrD,IAAIttC,EAAIkU,EACR,MAAM+0B,EAAWxtB,KAAKwtB,SAChBiI,GAAwBjI,aAA2C,EAASA,EAASvqB,eAAiB,CAAC,EACvGyyB,EAAc,IAAK11B,KAAKiD,cACxBoxB,E3BzxBQ,CACtBzpC,EAP0B,CAC1B4sB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,GAIb1pB,EAR0B,CAC1B2pB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,I2B4xBLvX,KAAKsxB,eAAiBtxB,KAAK00B,0BAAuB9nC,EAClDoT,KAAKu0B,gCAAkC1C,EACvC,MAAM8D,E3BvxBM,CACpB/qC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2ByxBvB4mC,GAA2BpI,aAA2C,EAASA,EAAShpB,WAAoC,QAAtBjgB,EAAKyb,KAAKyC,cAA2B,IAAPle,OAAgB,EAASA,EAAGigB,QAChKqxB,IAA4C,QAA1Bp9B,EAAKuH,KAAKuqB,kBAA+B,IAAP9xB,OAAgB,EAASA,EAAG+xB,QAAQpmC,SAAW,IAAM,EACzG0xC,EAAyBtmC,QAAQomC,IAClCC,IAC0B,IAA3B71B,KAAKvL,QAAQm5B,YACZ5tB,KAAKywB,KAAK97B,KAAKohC,KACpB/1B,KAAKuwB,kBAAoB,EACzBvwB,KAAKg2B,eAAkBr9B,IACnB,IAAIpU,EACJ,MAAMmO,EAAWiG,EAAS,IA2c1C,IAAgB7H,EAAQhC,EAAMvB,EAAI1J,EA1clBoyC,GAAa5B,EAAYzpC,EAAG6I,EAAM7I,EAAG8H,GACrCujC,GAAa5B,EAAYxmC,EAAG4F,EAAM5F,EAAG6E,GACrCsN,KAAKo0B,eAAeC,GAChBr0B,KAAKsxB,gBACLtxB,KAAK00B,sBACL10B,KAAKyC,SAC2B,QAA9Ble,EAAKyb,KAAKw0B,sBAAmC,IAAPjwC,OAAgB,EAASA,EAAGke,UACpEoV,GAAqB8d,EAAgB31B,KAAKyC,OAAOkZ,UAAW3b,KAAKw0B,eAAe/xB,OAAOkZ,WAmc3F7qB,EAlcWkP,KAAKsxB,eAkcRxiC,EAlcwBkR,KAAK00B,qBAkcvBnnC,EAlc6CooC,EAkczC9xC,EAlcyD6O,EAmcvFwjC,GAAQplC,EAAOlG,EAAGkE,EAAKlE,EAAG2C,EAAG3C,EAAG/G,GAChCqyC,GAAQplC,EAAOjD,EAAGiB,EAAKjB,EAAGN,EAAGM,EAAGhK,IAlchB+xC,IACA51B,KAAKytB,gBAAkBiI,ER9yB3C,SAAmB/kC,EAAQwlC,EAAQnJ,EAAMt6B,EAAUojC,EAAwBD,GACvE,IAAItxC,EAAIkU,EAAI0sB,EAAI4I,EACZ+H,GACAnlC,EAAO3K,SAAU,EAAAwK,GAAA,GAAI,EAGG,QAAvBjM,EAAKyoC,EAAKhnC,eAA4B,IAAPzB,EAAgBA,EAAK,EAAGqnC,GAAgBl5B,IACxE/B,EAAOylC,aAAc,EAAA5lC,GAAA,GAA8B,QAAzBiI,EAAK09B,EAAOnwC,eAA4B,IAAPyS,EAAgBA,EAAK,EAAG,EAAGszB,GAAiBr5B,KAElGmjC,IACLllC,EAAO3K,SAAU,EAAAwK,GAAA,GAA8B,QAAzB20B,EAAKgR,EAAOnwC,eAA4B,IAAPm/B,EAAgBA,EAAK,EAA2B,QAAvB4I,EAAKf,EAAKhnC,eAA4B,IAAP+nC,EAAgBA,EAAK,EAAGr7B,IAK3I,IAAK,IAAIvO,EAAI,EAAGA,EAAIonC,GAAYpnC,IAAK,CACjC,MAAMkyC,EAAc,SAAS/K,GAAQnnC,WACrC,IAAImyC,EAAe5K,GAAUyK,EAAQE,GACjCE,EAAa7K,GAAUsB,EAAMqJ,QACZzpC,IAAjB0pC,QAA6C1pC,IAAf2pC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA9K,GAAK6K,KAAkB7K,GAAK8K,IAE5B5lC,EAAO0lC,GAAeprC,KAAK+D,KAAI,EAAAwB,GAAA,GAAIg7B,GAAS8K,GAAe9K,GAAS+K,GAAa7jC,GAAW,IACxF,UAAa6jC,IAAe,UAAaD,MACzC3lC,EAAO0lC,IAAgB,MAI3B1lC,EAAO0lC,GAAeE,EAE9B,EAIIJ,EAAOpoC,QAAUi/B,EAAKj/B,UACtB4C,EAAO5C,QAAS,EAAAyC,GAAA,GAAI2lC,EAAOpoC,QAAU,EAAGi/B,EAAKj/B,QAAU,EAAG2E,GAElE,CQqwBoB8jC,CAAUd,EAAaD,EAAsBz1B,KAAKiD,aAAcvQ,EAAUojC,EAAwBD,IAEtG71B,KAAK0O,KAAKokB,2BACV9yB,KAAKmkB,iBACLnkB,KAAKuwB,kBAAoB79B,CAAQ,EAErCsN,KAAKg2B,eAAe,EACxB,CACAh7B,eAAevG,GACX,IAAIlQ,EAAIkU,EACRuH,KAAK2wB,gBAAgB,kBACY,QAAhCpsC,EAAKyb,KAAKnF,wBAAqC,IAAPtW,GAAyBA,EAAGqD,OACjEoY,KAAKiuB,eACyC,QAA7Cx1B,EAAKuH,KAAKiuB,aAAapzB,wBAAqC,IAAPpC,GAAyBA,EAAG7Q,QAElFoY,KAAK80B,mBACL,aAAkB90B,KAAK80B,kBACvB90B,KAAK80B,sBAAmBloC,GAO5BoT,KAAK80B,iBAAmB,cAAY,KAChCp1B,EAAsBC,wBAAyB,EAC/CK,KAAKnF,iBCpzBrB,SAAiB/L,EAAMvB,EAAI1H,EAAa,CAAC,GACrC,MAAMtC,GAAQ,IAAAY,GAAc2K,GAAQA,GAAO,QAAYA,GAEvD,OADA,SAAe,GAAIvL,EAAOgK,EAAI1H,GACvB,CACH+B,KAAM,IAAMrE,EAAMqE,OAClB6uC,YAAa,IAAMlzC,EAAMkzC,cAEjC,CD6yBwC9wC,CAAQ,EAxzBxB,IAwzB4C,IAC7C8O,EACH+D,SAAWG,IACP,IAAIpU,EACJyb,KAAKg2B,eAAer9B,GACQ,QAA3BpU,EAAKkQ,EAAQ+D,gBAA6B,IAAPjU,GAAyBA,EAAGP,KAAKyQ,EAASkE,EAAO,EAEzFL,WAAY,KACR,IAAI/T,EAC0B,QAA7BA,EAAKkQ,EAAQ6D,kBAA+B,IAAP/T,GAAyBA,EAAGP,KAAKyQ,GACvEuL,KAAK02B,mBAAmB,IAG5B12B,KAAKiuB,eACLjuB,KAAKiuB,aAAapzB,iBAAmBmF,KAAKnF,kBAE9CmF,KAAK80B,sBAAmBloC,CAAS,GAEzC,CACA8pC,oBACI,IAAInyC,EACAyb,KAAKiuB,eACLjuB,KAAKiuB,aAAapzB,sBAAmBjO,EACrCoT,KAAKiuB,aAAaV,qBAAkB3gC,GAEb,QAA1BrI,EAAKyb,KAAKuqB,kBAA+B,IAAPhmC,GAAyBA,EAAGupC,wBAC/D9tB,KAAKiuB,aACDjuB,KAAKnF,iBACDmF,KAAKytB,qBACD7gC,EACZoT,KAAK2wB,gBAAgB,oBACzB,CACAM,kBACI,IAAI1sC,EACAyb,KAAKnF,mBAC0B,QAA9BtW,EAAKyb,KAAKg2B,sBAAmC,IAAPzxC,GAAyBA,EAAGP,KAAKgc,KA31BhE,KA41BRA,KAAKnF,iBAAiBjT,QAE1BoY,KAAK02B,mBACT,CACAC,0BACI,MAAM3J,EAAOhtB,KAAKs0B,UAClB,IAAI,qBAAEK,EAAoB,OAAEhkC,EAAM,OAAE8R,EAAM,aAAEQ,GAAiB+pB,EAC7D,GAAK2H,GAAyBhkC,GAAW8R,EAAzC,CAOA,GAAIzC,OAASgtB,GACThtB,KAAKyC,QACLA,GACAm0B,GAA0B52B,KAAKvL,QAAQ6xB,cAAetmB,KAAKyC,OAAOkZ,UAAWlZ,EAAOkZ,WAAY,CAChGhrB,EAASqP,KAAKrP,Q3B93BN,CACpB/F,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2Bg4BzB,MAAM6nC,EAAU3f,GAAWlX,KAAKyC,OAAOkZ,UAAU/wB,GACjD+F,EAAO/F,EAAE+K,IAAMq3B,EAAKr8B,OAAO/F,EAAE+K,IAC7BhF,EAAO/F,EAAEoE,IAAM2B,EAAO/F,EAAE+K,IAAMkhC,EAC9B,MAAMC,EAAU5f,GAAWlX,KAAKyC,OAAOkZ,UAAU9tB,GACjD8C,EAAO9C,EAAE8H,IAAMq3B,EAAKr8B,OAAO9C,EAAE8H,IAC7BhF,EAAO9C,EAAEmB,IAAM2B,EAAO9C,EAAE8H,IAAMmhC,CAClC,CACA5K,GAAYyI,EAAsBhkC,GAMlCypB,GAAaua,EAAsB1xB,GAOnCwU,GAAazX,KAAKm1B,6BAA8Bn1B,KAAKizB,gBAAiB0B,EAAsB1xB,EA/BlF,CAgCd,CACAiuB,mBAAmBjwB,EAAU4nB,GACzB,IAAItkC,EAAIkU,EAAI0sB,EACPnlB,KAAKwwB,YAAYruB,IAAIlB,IACtBjB,KAAKwwB,YAAY7oC,IAAIsZ,EAAU,IAAI6rB,IAEzB9sB,KAAKwwB,YAAYn2B,IAAI4G,GAC7Bla,IAAI8hC,GACVA,EAAKwB,QAAQ,CACTxkC,WAA2D,QAA9CtB,EAAKskC,EAAKp0B,QAAQ8xB,8BAA2C,IAAPhiC,OAAgB,EAASA,EAAGsB,WAC/FunC,sBAAiJ,QAAzHjI,EAAoD,QAA9C1sB,EAAKowB,EAAKp0B,QAAQ8xB,8BAA2C,IAAP9tB,OAAgB,EAASA,EAAGs+B,mCAAgD,IAAP5R,OAAgB,EAASA,EAAGnhC,KAAKyU,EAAIowB,IAEtM,CACA4B,SACI,MAAMuM,EAAQh3B,KAAKuqB,WACnB,OAAOyM,GAAQA,EAAMhK,OAAShtB,IAClC,CACAs0B,UACI,IAAI/vC,EACJ,MAAM,SAAE0c,GAAajB,KAAKvL,QAC1B,OAAOwM,IAAuC,QAA1B1c,EAAKyb,KAAKuqB,kBAA+B,IAAPhmC,OAAgB,EAASA,EAAGyoC,OAAgBhtB,IACtG,CACAi3B,cACI,IAAI1yC,EACJ,MAAM,SAAE0c,GAAajB,KAAKvL,QAC1B,OAAOwM,EAAsC,QAA1B1c,EAAKyb,KAAKuqB,kBAA+B,IAAPhmC,OAAgB,EAASA,EAAGwoC,cAAWngC,CAChG,CACA29B,WACI,MAAM,SAAEtpB,GAAajB,KAAKvL,QAC1B,GAAIwM,EACA,OAAOjB,KAAK0O,KAAK8hB,YAAYn2B,IAAI4G,EACzC,CACAopB,SAAQ,WAAEqF,EAAU,WAAE7pC,EAAU,sBAAEunC,GAA2B,CAAC,GAC1D,MAAM4J,EAAQh3B,KAAKuqB,WACfyM,GACAA,EAAM3M,QAAQrqB,KAAMotB,GACpBsC,IACA1vB,KAAKipB,qBAAkBr8B,EACvBoT,KAAK0vB,YAAa,GAElB7pC,GACAma,KAAKomB,WAAW,CAAEvgC,cAC1B,CACAykC,WACI,MAAM0M,EAAQh3B,KAAKuqB,WACnB,QAAIyM,GACOA,EAAM1M,SAAStqB,KAK9B,CACAoyB,gBACI,MAAM,cAAEtrC,GAAkBkZ,KAAKvL,QAC/B,IAAK3N,EACD,OAEJ,IAAIowC,GAAY,EAKhB,MAAM,aAAEj0B,GAAiBnc,EAQzB,IAPImc,EAAalV,QACbkV,EAAajV,SACbiV,EAAahV,SACbgV,EAAa/U,WACbgpC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAIhzC,EAAI,EAAGA,EAAIyqC,GAAcxqC,OAAQD,IAAK,CAC3C,MAAM2I,EAAM,SAAW8hC,GAAczqC,GAEjC8e,EAAanW,KACbqqC,EAAYrqC,GAAOmW,EAAanW,GAChChG,EAAc67B,eAAe71B,EAAK,GAE1C,CAGAhG,SAA8DA,EAAc4W,SAE5E,IAAK,MAAM5Q,KAAOqqC,EACdrwC,EAAc67B,eAAe71B,EAAKqqC,EAAYrqC,IAIlDhG,EAAcq9B,gBAClB,CACArc,oBAAoBF,EAAY,CAAC,GAC7B,IAAIrjB,EAAIkU,EAAI0sB,EAEZ,MAAMiS,EAAS,CAAC,EAChB,IAAKp3B,KAAKuB,UAAYvB,KAAKyvB,MACvB,OAAO2H,EACX,IAAKp3B,KAAKswB,UACN,MAAO,CAAE+G,WAAY,UAGrBD,EAAOC,WAAa,GAExB,MAAMn0B,EAA0D,QAArC3e,EAAKyb,KAAKvL,QAAQ3N,qBAAkC,IAAPvC,OAAgB,EAASA,EAAGwrB,WAAW7M,kBAC/G,GAAIlD,KAAK0vB,WAQL,OAPA1vB,KAAK0vB,YAAa,EAClB0H,EAAOpxC,QAAU,GACjBoxC,EAAOE,cACH9uB,GAAmBZ,EAAU0vB,gBAAkB,GACnDF,EAAOr0B,UAAYG,EACbA,EAAkBlD,KAAKiD,aAAc,IACrC,OACCm0B,EAEX,MAAMpK,EAAOhtB,KAAKs0B,UAClB,IAAKt0B,KAAKipB,kBAAoBjpB,KAAKyC,SAAWuqB,EAAKr8B,OAAQ,CACvD,MAAM4mC,EAAc,CAAC,EAerB,OAdIv3B,KAAKvL,QAAQwM,WACbs2B,EAAYvxC,aACsB4G,IAA9BoT,KAAKiD,aAAajd,QACZga,KAAKiD,aAAajd,QAClB,EACVuxC,EAAYD,cACR9uB,GAAmBZ,EAAU0vB,gBAAkB,IAEnDt3B,KAAKqwB,eAAiB/sB,GAAatD,KAAKiD,gBACxCs0B,EAAYx0B,UAAYG,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNlD,KAAKqwB,cAAe,GAEjBkH,CACX,CACA,MAAMC,EAAiBxK,EAAKS,iBAAmBT,EAAK/pB,aACpDjD,KAAK22B,0BACLS,EAAOr0B,UAAYorB,GAAyBnuB,KAAKm1B,6BAA8Bn1B,KAAKgpB,UAAWwO,GAC3Ft0B,IACAk0B,EAAOr0B,UAAYG,EAAkBs0B,EAAgBJ,EAAOr0B,YAEhE,MAAM,EAAEnY,EAAC,EAAEiD,GAAMmS,KAAKipB,gBACtBmO,EAAO/zB,gBAAkB,GAAc,IAAXzY,EAAE8F,WAA4B,IAAX7C,EAAE6C,YAC7Cs8B,EAAKS,gBAKL2J,EAAOpxC,QACHgnC,IAAShtB,KACiG,QAAnGmlB,EAAuC,QAAjC1sB,EAAK++B,EAAexxC,eAA4B,IAAPyS,EAAgBA,EAAKuH,KAAKiD,aAAajd,eAA4B,IAAPm/B,EAAgBA,EAAK,EACjInlB,KAAKutB,gBACDvtB,KAAKiD,aAAajd,QAClBwxC,EAAepB,YAO7BgB,EAAOpxC,QACHgnC,IAAShtB,UACwBpT,IAA3B4qC,EAAexxC,QACXwxC,EAAexxC,QACf,QAC2B4G,IAA/B4qC,EAAepB,YACXoB,EAAepB,YACf,EAKlB,IAAK,MAAMtpC,KAAOyV,EAAiB,CAC/B,QAA4B3V,IAAxB4qC,EAAe1qC,GACf,SACJ,MAAM,QAAE87B,EAAO,QAAEmC,GAAYxoB,EAAgBzV,GACvC2qC,EAAY7O,EAAQ4O,EAAe1qC,GAAMkgC,GAC/C,GAAIjC,EAAS,CACT,MAAM2M,EAAM3M,EAAQ3mC,OACpB,IAAK,IAAID,EAAI,EAAGA,EAAIuzC,EAAKvzC,IACrBizC,EAAOrM,EAAQ5mC,IAAMszC,CAE7B,MAEIL,EAAOtqC,GAAO2qC,CAEtB,CAYA,OANIz3B,KAAKvL,QAAQwM,WACbm2B,EAAOE,cACHtK,IAAShtB,KACHwI,GAAmBZ,EAAU0vB,gBAAkB,GAC/C,QAEPF,CACX,CACAxE,gBACI5yB,KAAKstB,WAAattB,KAAKwtB,cAAW5gC,CACtC,CAEA+qC,YACI33B,KAAK0O,KAAKuhB,MAAM5oC,SAASwhC,IAAW,IAAItkC,EAAI,OAAwC,QAAhCA,EAAKskC,EAAKhuB,wBAAqC,IAAPtW,OAAgB,EAASA,EAAGqD,MAAM,IAC9HoY,KAAK0O,KAAKuhB,MAAM5oC,QAAQmrC,IACxBxyB,KAAK0O,KAAK8hB,YAAYnL,OAC1B,EAER,CACA,SAAS3G,GAAamK,GAClBA,EAAKnK,cACT,CACA,SAASiU,GAAmB9J,GACxB,IAAItkC,EAAIkU,EAAI0sB,EACZ,MAAMqI,GAAuC,QAA1BjpC,EAAKskC,EAAKyE,kBAA+B,IAAP/oC,OAAgB,EAASA,EAAGipC,WAAa3E,EAAK2E,SACnG,GAAI3E,EAAK4B,UACL5B,EAAKpmB,QACL+qB,GACA3E,EAAKgI,aAAa,aAAc,CAChC,MAAQlV,UAAWlZ,EAAQoxB,YAAa+D,GAAmB/O,EAAKpmB,QAC1D,cAAE6jB,GAAkBuC,EAAKp0B,QACzBmgC,EAAWpH,EAAShpB,SAAWqkB,EAAKpmB,OAAO+B,OAG3B,SAAlB8hB,EACA7N,IAAUtB,IACN,MAAM0gB,EAAejD,EACfpH,EAASqG,YAAY1c,GACrBqW,EAAS7R,UAAUxE,GACnB/yB,EAAS8yB,GAAW2gB,GAC1BA,EAAaliC,IAAM8M,EAAO0U,GAAMxhB,IAChCkiC,EAAa7oC,IAAM6oC,EAAaliC,IAAMvR,CAAM,IAG3CwyC,GAA0BtQ,EAAekH,EAAS7R,UAAWlZ,IAClEgW,IAAUtB,IACN,MAAM0gB,EAAejD,EACfpH,EAASqG,YAAY1c,GACrBqW,EAAS7R,UAAUxE,GACnB/yB,EAAS8yB,GAAWzU,EAAO0U,IACjC0gB,EAAa7oC,IAAM6oC,EAAaliC,IAAMvR,CAAM,IAGpD,MAAM0zC,E3B9oCY,CACtBltC,EAP0B,CAC1B4sB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,GAIb1pB,EAR0B,CAC1B2pB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,I2BipCTE,GAAaqgB,EAAar1B,EAAQ+qB,EAAS7R,WAC3C,MAAMoc,E3BhpCY,CACtBntC,EAP0B,CAC1B4sB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,GAIb1pB,EAR0B,CAC1B2pB,UAAW,EACXhyB,MAAO,EACPkL,OAAQ,EACR6mB,YAAa,I2BmpCLqd,EACAnd,GAAasgB,EAAalP,EAAKmL,eAAe4D,GAAgB,GAAOpK,EAASqG,aAG9Epc,GAAasgB,EAAat1B,EAAQ+qB,EAAS7R,WAE/C,MAAMsD,GAAoB0N,GAAYmL,GACtC,IAAI3G,GAA2B,EAC/B,IAAKtI,EAAKyE,WAAY,CAClB,MAAMkH,EAAiB3L,EAAK4L,6BAK5B,GAAID,IAAmBA,EAAelH,WAAY,CAC9C,MAAQE,SAAUwK,EAAgBv1B,OAAQw1B,GAAiBzD,EAC3D,GAAIwD,GAAkBC,EAAc,CAChC,MAAMC,E3B7pCF,CACpBttC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2B+pCrB6oB,GAAqBqgB,EAAkB1K,EAAS7R,UAAWqc,EAAerc,WAC1E,MAAMga,E3B/pCF,CACpB/qC,EAFqB,CAAG+K,IAAK,EAAG3G,IAAK,GAGrCnB,EAHqB,CAAG8H,IAAK,EAAG3G,IAAK,I2BiqCrB6oB,GAAqB8d,EAAgBlzB,EAAQw1B,EAAatc,WACrDiR,GAAUsL,EAAkBvC,KAC7BxE,GAA2B,EAEnC,CACJ,CACJ,CACAtI,EAAK8H,gBAAgB,YAAa,CAC9BluB,SACA+qB,WACA/5B,MAAOskC,EACPD,cACA7Y,mBACAkS,4BAER,MACStI,EAAK4B,WACoC,QAA7CtF,GAAM1sB,EAAKowB,EAAKp0B,SAASmd,sBAAmC,IAAPuT,GAAyBA,EAAGnhC,KAAKyU,IAO3FowB,EAAKp0B,QAAQ5O,gBAAa+G,CAC9B,CACA,SAASsjC,GAAoBrH,GAKzBA,EAAKyG,oBAAsBzG,EAAKyG,kBAAoB9/B,QAAQq5B,EAAK9rB,QAAU8rB,EAAK9rB,OAAOuyB,oBAIvFzG,EAAKnD,mBAAqBmD,EAAKnD,iBAAmBl2B,QAAQq5B,EAAK9rB,QAAU8rB,EAAK9rB,OAAO2oB,kBACzF,CACA,SAASkN,GAAc/J,GACnBA,EAAK+J,eACT,CACA,SAASJ,GAAkB3J,GACvBA,EAAK2J,mBACT,CACA,SAASE,GAAoB7J,GACzB,MAAM,cAAE/hC,GAAkB+hC,EAAKp0B,SAC3B3N,aAAqD,EAASA,EAAcipB,WAAWooB,wBACvFrxC,EAAc+W,OAAO,uBAEzBgrB,EAAKqG,gBACT,CACA,SAAS+B,GAAgBpI,GACrBA,EAAKoI,kBACLpI,EAAKwL,YAAcxL,EAAKyI,eAAiBzI,EAAKl4B,YAAS/D,CAC3D,CACA,SAASujC,GAAmBtH,GACxBA,EAAKsH,oBACT,CACA,SAASC,GAAevH,GACpBA,EAAKuH,gBACT,CACA,SAASgC,GAAcvJ,GACnBA,EAAKuJ,eACT,CACA,SAASS,GAAoBmE,GACzBA,EAAM9I,oBACV,CACA,SAAS+H,GAAanlC,EAAQ2C,EAAO5P,GACjCiN,EAAO0mB,WAAY,EAAAhnB,GAAA,GAAIiD,EAAM+jB,UAAW,EAAG3zB,GAC3CiN,EAAOtL,OAAQ,EAAAgL,GAAA,GAAIiD,EAAMjO,MAAO,EAAG3B,GACnCiN,EAAOJ,OAAS+C,EAAM/C,OACtBI,EAAOymB,YAAc9jB,EAAM8jB,WAC/B,CACA,SAAS2e,GAAQplC,EAAQhC,EAAMvB,EAAI1J,GAC/BiN,EAAO6E,KAAM,EAAAnF,GAAA,GAAI1B,EAAK6G,IAAKpI,EAAGoI,IAAK9R,GACnCiN,EAAO9B,KAAM,EAAAwB,GAAA,GAAI1B,EAAKE,IAAKzB,EAAGyB,IAAKnL,EACvC,CAKA,SAASkyC,GAAoBlN,GACzB,OAAQA,EAAK4E,sBAAwD7gC,IAArCi8B,EAAK4E,gBAAgB2I,WACzD,CACA,MAAM5E,GAA0B,CAC5B1rC,SAAU,IACVC,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAAS0sC,GAAe5J,EAAMsG,GAK1B,IAAIiJ,EAAavP,EAAKna,KACtB,IAAK,IAAIvqB,EAAI0kC,EAAK4H,KAAKrsC,OAAS,EAAGD,GAAK,EAAGA,IACvC,GAAIqL,QAAQq5B,EAAK4H,KAAKtsC,GAAGod,UAAW,CAChC62B,EAAavP,EAAK4H,KAAKtsC,GACvB,KACJ,CAEJ,MACMwjB,GADgBywB,GAAcA,IAAevP,EAAKna,KAAO0pB,EAAW72B,SAAWjF,UACvD+7B,cAAc,wBAAwBlJ,OAChExnB,GACAkhB,EAAKhhC,MAAM8f,GAAS,EAC5B,CACA,SAASisB,GAAUzc,GACfA,EAAKxhB,IAAM1K,KAAKiF,MAAMinB,EAAKxhB,KAC3BwhB,EAAKnoB,IAAM/D,KAAKiF,MAAMinB,EAAKnoB,IAC/B,CAKA,SAAS4nC,GAA0BtQ,EAAekH,EAAU/qB,GACxD,MAA0B,aAAlB6jB,GACe,oBAAlBA,IACIlP,GAAOyV,GAAYW,GAAWX,GAAYpqB,GAAS,GAChE,CE5xCA,MAAM61B,GAAyBzJ,GAAqB,CAChDC,qBAAsB,CAAC/wB,EAAKF,IAAWmM,GAAYjM,EAAK,SAAUF,GAClEmxB,cAAe,KAAM,CACjBpkC,EAAG0R,SAASi8B,gBAAgBC,YAAcl8B,SAASm8B,KAAKD,WACxD3qC,EAAGyO,SAASi8B,gBAAgBG,WAAap8B,SAASm8B,KAAKC,YAE3DzJ,kBAAmB,KAAM,ICNvB7R,GAAqB,CACvBhnB,aAASxJ,GAEP,GAAqBiiC,GAAqB,CAC5CG,cAAgBztB,IAAa,CACzB3W,EAAG2W,EAASi3B,WACZ3qC,EAAG0T,EAASm3B,YAEhB3J,cAAe,KACX,IAAK3R,GAAmBhnB,QAAS,CAC7B,MAAMuiC,EAAe,IAAIL,GAAuB,EAAG,CAAC,GACpDK,EAAa9wC,MAAM0kB,QACnBosB,EAAavS,WAAW,CAAED,cAAc,IACxC/I,GAAmBhnB,QAAUuiC,CACjC,CACA,OAAOvb,GAAmBhnB,OAAO,EAErC84B,eAAgB,CAAC3tB,EAAUhe,KACvBge,EAASnY,MAAM2Z,eAAsBnW,IAAVrJ,EAAsBA,EAAQ,MAAM,EAEnE0rC,kBAAoB1tB,GAAa/R,QAAuD,UAA/C+c,OAAO0T,iBAAiB1e,GAAUq3B,YCbzEC,GAAgB,IACfzxC,MACAmpB,MACAnR,MACAisB,IAQDjmC,GAAuBuc,GAAkB,CAAC/E,EAAWgM,ICjB3D,SAA+BhM,GAAW,mBAAEoK,GAAqB,GAASzG,EAAmBzD,EAAqB0D,GAI9G,MAAO,IAHY6B,EAAezF,GAC5B+M,GACAG,GAGFvJ,oBACAE,UAAWsG,GAAgBC,GAC3BlK,sBACA0D,4BACA5D,YAER,CDKsE,CAAsBA,EAAWgM,EAAQiwB,GAAe,GAAwB,K,yFEnBtJ,SAASC,EAAkBhsC,EAAKvJ,GAC5B,IAAIgB,EACJ,IAAIw0C,GAAmB,OAAoBjsC,GAI3C,OAHIisC,IAAqB,MACrBA,EAAmB,KAE8B,QAA7Cx0C,EAAKw0C,EAAiBD,yBAAsC,IAAPv0C,OAAgB,EAASA,EAAGP,KAAK+0C,EAAkBx1C,EACpH,C,+ECJA,MAAMy1C,EAAoB,I,QACnB,EAEH1zC,MAAK,IACL+I,gBAAiB,IACjB4qC,aAAc,IACdC,KAAM,IACNC,OAAQ,IAERC,YAAa,IACbC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,gBAAiB,IACjB/X,OAAM,IACNgY,aAAc,KAKZC,EAAuB5sC,GAAQksC,EAAkBlsC,E,+GCvBvD,MCIM6sC,EAAsB,CAAC,KAAQ,EAAAh0B,GAAI,KAAS,KAAS,EAAAi0B,GAAI,EAAAC,GDJlD,CACTtqC,KAAOzF,GAAY,SAANA,EACb4F,MAAQ5F,GAAMA,ICMZgwC,EAA0BhwC,GAAM6vC,EAAoBrqC,MAAK,EAAAC,EAAA,GAAczF,G,+ECT7E,MAAM,EAAM,IACL,KACHiZ,UAAW9X,KAAKiF,OCDd6pC,EAAmB,CAErBC,YAAa,EAAAr0B,GACbs0B,eAAgB,EAAAt0B,GAChBu0B,iBAAkB,EAAAv0B,GAClBw0B,kBAAmB,EAAAx0B,GACnBy0B,gBAAiB,EAAAz0B,GACjBmlB,aAAc,EAAAnlB,GACd00B,OAAQ,EAAA10B,GACRqlB,oBAAqB,EAAArlB,GACrBslB,qBAAsB,EAAAtlB,GACtBwlB,wBAAyB,EAAAxlB,GACzBulB,uBAAwB,EAAAvlB,GAExBxf,MAAO,EAAAwf,GACP20B,SAAU,EAAA30B,GACV/f,OAAQ,EAAA+f,GACR40B,UAAW,EAAA50B,GACXD,KAAM,EAAAC,GACNgT,IAAK,EAAAhT,GACLkT,MAAO,EAAAlT,GACPmT,OAAQ,EAAAnT,GACRiT,KAAM,EAAAjT,GAEN60B,QAAS,EAAA70B,GACT0b,WAAY,EAAA1b,GACZyb,aAAc,EAAAzb,GACd2b,cAAe,EAAA3b,GACfwb,YAAa,EAAAxb,GACb2J,OAAQ,EAAA3J,GACR80B,UAAW,EAAA90B,GACX+0B,YAAa,EAAA/0B,GACbg1B,aAAc,EAAAh1B,GACdi1B,WAAY,EAAAj1B,GAEZ5X,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,QAAS,KACT1I,MAAK,KACL2I,OAAQ,KACRC,OAAQ,KACRysC,OAAQ,KACRC,KAAM,KACNC,MAAO,KACPC,MAAO,KACPnmB,SAAU,EAAAlP,GACVs1B,WAAY,EAAAt1B,GACZu1B,WAAY,EAAAv1B,GACZw1B,WAAY,EAAAx1B,GACZ/a,EAAG,EAAA+a,GACH9X,EAAG,EAAA8X,GACH7X,EAAG,EAAA6X,GACHy1B,YAAa,EAAAz1B,GACbhD,qBAAsB,EAAAgD,GACtB3f,QAAS,KACTme,QAAS,KACTC,QAAS,KACTC,QAAS,EAAAsB,GAET01B,OAAQ,EAERC,YAAa,KACbC,cAAe,KACfC,WAAY,E,uDChEhB,MAAMC,EAAiB3xC,GAAOoD,GAASA,EAAKqC,KAAKzF,E,8ECAjD,MAAM4xC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIh1C,IAAI+0C,E,qICnB/B,SAASE,EAAqB90C,EAAeI,EAAYuN,EAAU,CAAC,GAEhE,IAAI/M,EACJ,GAFAZ,EAAc+W,OAAO,iBAAkB3W,GAEnC6C,MAAMC,QAAQ9C,GAAa,CAC3B,MAAME,EAAaF,EAAWuC,KAAKoyC,GAAYC,EAAeh1C,EAAe+0C,EAASpnC,KACtF/M,EAAYH,QAAQC,IAAIJ,EAC5B,MACK,GAA0B,iBAAfF,EACZQ,EAAYo0C,EAAeh1C,EAAeI,EAAYuN,OAErD,CACD,MAAMsnC,EAA2C,mBAAf70C,GAC5B,OAAeJ,EAAeI,EAAYuN,EAAQoN,QAClD3a,EACNQ,EAAYs0C,EAAcl1C,EAAei1C,EAAoBtnC,EACjE,CACA,OAAO/M,EAAUI,MAAK,IAAMhB,EAAc+W,OAAO,oBAAqB3W,IAC1E,CACA,SAAS40C,EAAeh1C,EAAe+0C,EAASpnC,EAAU,CAAC,GACvD,IAAIlQ,EACJ,MAAMilB,GAAW,OAAe1iB,EAAe+0C,EAASpnC,EAAQoN,QAChE,IAAI,WAAEhc,EAAaiB,EAAcyH,wBAA0B,CAAC,GAAMib,GAAY,CAAC,EAC3E/U,EAAQtN,qBACRtB,EAAa4O,EAAQtN,oBAMzB,MAAM+S,EAAesP,EACf,IAAMwyB,EAAcl1C,EAAe0iB,EAAU/U,GAC7C,IAAMlN,QAAQE,UAKdw0C,GAA+D,QAAxC13C,EAAKuC,EAAc0tB,uBAAoC,IAAPjwB,OAAgB,EAASA,EAAGmhB,MACnG,CAACw2B,EAAe,KACd,MAAM,cAAEpiC,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBnU,EAClE,OA4DZ,SAAyBiB,EAAe+0C,EAAS/hC,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGvF,GAC3G,MAAMrN,EAAa,GACb+0C,GAAsBr1C,EAAc0tB,gBAAgB9O,KAAO,GAAK3L,EAChEqiC,EAA+C,IAArBpiC,EAC1B,CAAC7V,EAAI,IAAMA,EAAI4V,EACf,CAAC5V,EAAI,IAAMg4C,EAAqBh4C,EAAI4V,EAS1C,OARAhQ,MAAM+E,KAAKhI,EAAc0tB,iBACpBxQ,KAAKq4B,GACLh1C,SAAQ,CAACymB,EAAO3pB,KACjBiD,EAAWE,KAAKw0C,EAAehuB,EAAO+tB,EAAS,IACxCpnC,EACHiD,MAAOoC,EAAgBsiC,EAAwBj4C,KAChD2D,MAAK,IAAMgmB,EAAMjQ,OAAO,oBAAqBg+B,KAAU,IAEvDt0C,QAAQC,IAAIJ,EACvB,CA3EmBk1C,CAAgBx1C,EAAe+0C,EAAS/hC,EAAgBoiC,EAAcniC,EAAiBC,EAAkBvF,EAAQ,EAE1H,IAAMlN,QAAQE,WAKd,KAAEmS,GAAS/T,EACjB,GAAI+T,EAAM,CACN,MAAO2iC,EAAOC,GAAiB,mBAAT5iC,EAChB,CAACM,EAAc+hC,GACf,CAACA,EAAoB/hC,GAC3B,OAAOqiC,IAAQz0C,KAAK00C,EACxB,CAEI,OAAOj1C,QAAQC,IAAI,CAAC0S,IAAgB+hC,EAAmBxnC,EAAQiD,QAEvE,CAIA,SAASskC,EAAcl1C,EAAeI,GAAY,MAAEwQ,EAAQ,EAAC,mBAAEvQ,EAAkB,KAAE+F,GAAS,CAAC,GACzF,IAAI3I,EACJ,IAAI,WAAEsB,EAAaiB,EAAcyH,uBAAsB,cAAEkb,KAAkB9Y,GAAW7J,EAAc6/B,qBAAqBz/B,GACzH,MAAMo9B,EAAax9B,EAAcs3B,SAAS,cACtCj3B,IACAtB,EAAasB,GACjB,MAAMC,EAAa,GACbq1C,EAAqBvvC,IAAiD,QAAvC3I,EAAKuC,EAAc6W,sBAAmC,IAAPpZ,OAAgB,EAASA,EAAGowB,WAAWznB,IAC3H,IAAK,MAAMJ,KAAO6D,EAAQ,CACtB,MAAMpN,EAAQuD,EAAcs3B,SAAStxB,GAC/B4c,EAAc/Y,EAAO7D,GAC3B,IAAKvJ,QACeqJ,IAAhB8c,GACC+yB,GACGC,EAAqBD,EAAoB3vC,GAC7C,SAEJ,IAAIqN,EAAkB,CAAEzC,WAAU7R,GAI9BiB,EAAc68B,oBAAsB,QAAmB72B,KACvDqN,EAAkB,IACXA,EACHjN,MAAM,EACNwK,MAAO,IAGf,IAAIhQ,GAAY,QAAeoF,EAAKvJ,EAAOmmB,EAAavP,IACpD,OAAwBmqB,KACxBA,EAAWv9B,IAAI+F,GACfpF,EAAYA,EAAUI,MAAK,IAAMw8B,EAAWc,OAAOt4B,MAEvD1F,EAAWE,KAAKI,EACpB,CACA,OAAOH,QAAQC,IAAIJ,GAAYU,MAAK,KAChC2hB,IAAiB,QAAU3iB,EAAe2iB,EAAc,GAEhE,CAiBA,SAAS2R,EAAct0B,GACnBA,EAAc6G,OAAOtG,SAAS9D,GAAUA,EAAMqE,QAClD,CACA,SAASy0C,EAAgB3oC,EAAGC,GACxB,OAAOD,EAAEmyB,iBAAiBlyB,EAC9B,CAOA,SAAS+oC,GAAqB,cAAElpB,EAAa,eAAEW,GAAkBrnB,GAC7D,MAAM6vC,EAAcnpB,EAAczvB,eAAe+I,KAAgC,IAAxBqnB,EAAernB,GAExE,OADAqnB,EAAernB,IAAO,EACf6vC,CACX,C,qECvHA,SAASC,EAAe91C,EAAeI,EAAY2a,GAC/C,MAAMpd,EAAQqC,EAAcipB,WAC5B,OAAO,OAAwBtrB,EAAOyC,OAAuB0F,IAAXiV,EAAuBA,EAASpd,EAAMod,OAf5F,SAAoB/a,GAChB,MAAMsP,EAAU,CAAC,EAEjB,OADAtP,EAAc6G,OAAOtG,SAAQ,CAAC9D,EAAOuJ,IAASsJ,EAAQtJ,GAAOvJ,EAAM8W,QAC5DjE,CACX,CAWoGymC,CAAW/1C,GAP/G,SAAqBA,GACjB,MAAMmM,EAAW,CAAC,EAElB,OADAnM,EAAc6G,OAAOtG,SAAQ,CAAC9D,EAAOuJ,IAASmG,EAASnG,GAAOvJ,EAAMmX,gBAC7DzH,CACX,CAG+HyH,CAAY5T,GAC3I,C,uBCrBA,SAASg2C,EAAwBr4C,EAAOyC,EAAY2a,EAAQk7B,EAAgB,CAAC,EAAG1mC,EAAkB,CAAC,GAsB/F,MAlB0B,mBAAfnP,IACPA,EAAaA,OAAsB0F,IAAXiV,EAAuBA,EAASpd,EAAMod,OAAQk7B,EAAe1mC,IAM/D,iBAAfnP,IACPA,EAAazC,EAAM4Z,UAAY5Z,EAAM4Z,SAASnX,IAOxB,mBAAfA,IACPA,EAAaA,OAAsB0F,IAAXiV,EAAuBA,EAASpd,EAAMod,OAAQk7B,EAAe1mC,IAElFnP,CACX,C,6KCpBA,MCAM81C,EAAqBlzC,GAAM,aAAayF,KAAKzF,G,+DCInD,MAAMmzC,EAAa,IAAI,IAAqB33C,EAAA,EAAOyH,EAAA,GAI7CmwC,EAAiBpzC,GAAMmzC,EAAW3tC,MAAK,EAAAC,EAAA,GAAczF,I,cCE3D,SAASqzC,EAAer2C,EAAegG,EAAKvJ,GACpCuD,EAAc+6B,SAAS/0B,GACvBhG,EAAcs3B,SAAStxB,GAAKnF,IAAIpE,GAGhCuD,EAAcmgC,SAASn6B,GAAK,OAAYvJ,GAEhD,CACA,SAAS65C,EAAUt2C,EAAeI,GAC9B,MAAMsiB,GAAW,OAAe1iB,EAAeI,GAC/C,IAAI,cAAEuiB,EAAgB,CAAC,EAAC,WAAE5jB,EAAa,CAAC,KAAM8K,GAAW6Y,EAAW1iB,EAAc6/B,qBAAqBnd,GAAU,GAAS,CAAC,EAC3H7Y,EAAS,IAAKA,KAAW8Y,GACzB,IAAK,MAAM3c,KAAO6D,EAAQ,CAEtBwsC,EAAer2C,EAAegG,GADhB,OAA6B6D,EAAO7D,IAEtD,CACJ,CACA,SAASuwC,EAAYv2C,EAAew2C,GACT,IAAIA,GAAehyC,UAC3BjE,SAASyF,IACpB,IAAIvI,EACJ,MAAMs3C,EAAU/0C,EAAcwgC,WAAWx6B,GACzC+uC,GAAWuB,EAAUt2C,EAAe+0C,GACK,QAAxCt3C,EAAKuC,EAAc0tB,uBAAoC,IAAPjwB,GAAyBA,EAAG8C,SAASymB,IAClFuvB,EAAYvvB,EAAOwvB,EAAc,GACnC,GAEV,CACA,SAASC,EAAUz2C,EAAeI,GAC9B,OAAI6C,MAAMC,QAAQ9C,GACPm2C,EAAYv2C,EAAeI,GAEP,iBAAfA,EACLm2C,EAAYv2C,EAAe,CAACI,SAGnCk2C,EAAUt2C,EAAeI,EAEjC,CACA,SAASs2C,EAAwB12C,EAAe6J,EAAQD,GACpD,IAAInM,EAAIkU,EACR,MAAMglC,EAAep6C,OAAOqR,KAAK/D,GAAQ8wB,QAAQ30B,IAAShG,EAAc+6B,SAAS/0B,KAC3E4wC,EAAeD,EAAar5C,OAClC,GAAKs5C,EAEL,IAAK,IAAIv5C,EAAI,EAAGA,EAAIu5C,EAAcv5C,IAAK,CACnC,MAAM2I,EAAM2wC,EAAat5C,GACnBw5C,EAAchtC,EAAO7D,GAC3B,IAAIvJ,EAAQ,KAKRwG,MAAMC,QAAQ2zC,KACdp6C,EAAQo6C,EAAY,IAOV,OAAVp6C,IACAA,EAAoG,QAA3FkV,EAA4B,QAAtBlU,EAAKmM,EAAO5D,UAAyB,IAAPvI,EAAgBA,EAAKuC,EAAc8gC,UAAU96B,UAAyB,IAAP2L,EAAgBA,EAAK9H,EAAO7D,IAMxIvJ,UAEiB,iBAAVA,IHhFc,iBAAiBgM,KGiFnBhM,IAAUy5C,EAAkBz5C,IAE/CA,EAAQiY,WAAWjY,IAEb25C,EAAc35C,IAAUwJ,EAAA,OAAa4wC,KAC3Cp6C,GAAQ,OAAkBuJ,EAAK6wC,IAEnC72C,EAAcmgC,SAASn6B,GAAK,OAAYvJ,SACpBqJ,IAAhB8D,EAAO5D,KACP4D,EAAO5D,GAAOvJ,GAEJ,OAAVA,GACAuD,EAAcghC,cAAch7B,EAAKvJ,GACzC,CACJ,CACA,SAASq6C,EAAwB9wC,EAAKjH,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWiH,IAAQjH,EAAoB,SAAKA,GAC7CiJ,IAC3B,CACA,SAAS+uC,EAAUltC,EAAQ9K,EAAYiB,GACnC,IAAIvC,EACJ,MAAMmM,EAAS,CAAC,EAChB,IAAK,MAAM5D,KAAO6D,EAAQ,CACtB,MAAMmtC,EAAmBF,EAAwB9wC,EAAKjH,GACtD6K,EAAO5D,QACkBF,IAArBkxC,EACMA,EACuC,QAAtCv5C,EAAKuC,EAAcs3B,SAAStxB,UAAyB,IAAPvI,OAAgB,EAASA,EAAG8V,KACzF,CACA,OAAO3J,CACX,C,qBCpHA,SAASqtC,EAAcC,EAAKC,IACG,IAAvBD,EAAI/5C,QAAQg6C,IACZD,EAAI12C,KAAK22C,EACjB,CACA,SAASC,EAAWF,EAAKC,GACrB,MAAME,EAAQH,EAAI/5C,QAAQg6C,GACtBE,GAAS,GACTH,EAAInrC,OAAOsrC,EAAO,EAC1B,C,+GCRA,MAAM9rC,EAAQ,CAACsD,EAAK3G,EAAKlF,IAAMmB,KAAK0K,IAAI1K,KAAK+D,IAAIlF,EAAG6L,GAAM3G,E,qECE1D,SAAS0I,EAAM+V,EAAU2wB,GACrB,MAAMn3C,EAAQo3C,YAAYC,MACpBC,EAAe,EAAG3oB,gBACpB,MAAMne,EAAUme,EAAY3uB,EACxBwQ,GAAW2mC,IACX,UAAgBG,GAChB9wB,EAAShW,EAAU2mC,GACvB,EAGJ,OADA,UAAUG,GAAc,GACjB,IAAM,UAAgBA,EACjC,C,qDCQA,MAAM/tC,EAAM,CAAC1B,EAAMvB,EAAImF,KAAcA,EAAW5D,EAAO4D,EAAWnF,EAAKuB,C,uDCrBvE,MAAMrE,EAAQ+zC,GAAQA,C,uDCOtB,MAAMC,EAAmB,CAAC/qC,EAAGC,IAAO7J,GAAM6J,EAAED,EAAE5J,IACxC4H,EAAO,IAAIgtC,IAAiBA,EAAa3qB,OAAO0qB,E,uDCItD,MAAM/rC,EAAW,CAAC5D,EAAMvB,EAAIhK,KACxB,MAAMo7C,EAAmBpxC,EAAKuB,EAC9B,OAA4B,IAArB6vC,EAAyB,GAAKp7C,EAAQuL,GAAQ6vC,CAAgB,C,4FCZzE,MAAMC,EAAiB90C,GACZ0F,QAAQ1F,GAAkB,iBAANA,GAAkBA,EAAE0G,KAAO1G,EAAE4e,SAEtDm2B,EAAgC/0C,IAE3B,OAAkBA,GAAKA,EAAEA,EAAE1F,OAAS,IAAM,EAAI0F,C,mECLzD,MAAMg1C,EACF/pB,cACI/U,KAAK++B,cAAgB,EACzB,CACAh4C,IAAImjB,GAEA,OADA,QAAclK,KAAK++B,cAAe70B,GAC3B,KAAM,QAAWlK,KAAK++B,cAAe70B,EAChD,CACArM,OAAOnK,EAAGC,EAAGE,GACT,MAAMmrC,EAAmBh/B,KAAK++B,cAAc36C,OAC5C,GAAK46C,EAEL,GAAyB,IAArBA,EAIAh/B,KAAK++B,cAAc,GAAGrrC,EAAGC,EAAGE,QAG5B,IAAK,IAAI1P,EAAI,EAAGA,EAAI66C,EAAkB76C,IAAK,CAKvC,MAAM+lB,EAAUlK,KAAK++B,cAAc56C,GACnC+lB,GAAWA,EAAQxW,EAAGC,EAAGE,EAC7B,CAER,CACAorC,UACI,OAAOj/B,KAAK++B,cAAc36C,MAC9B,CACAihC,QACIrlB,KAAK++B,cAAc36C,OAAS,CAChC,E,uDC9BJ,MAAM86C,EAAyBC,GAAsB,IAAVA,C,qECG3C,SAASC,EAAYC,GACjB,MAAMthC,GAAM,IAAAX,QAAO,MAInB,OAHoB,OAAhBW,EAAI3H,UACJ2H,EAAI3H,QAAUipC,KAEXthC,EAAI3H,OACf,C,uBCTA,SAASkpC,EAAkBrsC,EAAUssC,GACjC,OAAOA,EAAgBtsC,GAAY,IAAOssC,GAAiB,CAC/D,C,wHCIA,MAAMC,EASFzqB,YAAYsqB,GAjBA,IAAC97C,EAsBTyc,KAAKy/B,QAAU,SAMfz/B,KAAK8W,UAAY,EAMjB9W,KAAK0/B,YAAc,EAMnB1/B,KAAK2/B,kBAAoB,IAAI,IAM7B3/B,KAAK4/B,0BAA4B,IAAI,IAMrC5/B,KAAK6/B,kBAAoB,IAAI,IAQ7B7/B,KAAK8/B,kBAAmB,EACxB9/B,KAAK+/B,gBAAkB,CAACj2C,EAAG4T,GAAS,KAChCsC,KAAK5E,KAAO4E,KAAK5J,QACjB4J,KAAK5J,QAAUtM,EAEf,MAAM,MAAE2J,EAAK,UAAEmiB,IAAc,UACzB5V,KAAK0/B,cAAgB9pB,IACrB5V,KAAK8W,UAAYrjB,EACjBuM,KAAK0/B,YAAc9pB,EACnB,gBAAgB5V,KAAKggC,wBAGrBhgC,KAAK5E,OAAS4E,KAAK5J,SACnB4J,KAAK2/B,kBAAkB9hC,OAAOmC,KAAK5J,SAGnC4J,KAAK4/B,0BAA0BX,WAC/Bj/B,KAAK4/B,0BAA0B/hC,OAAOmC,KAAKtF,eAG3CgD,GACAsC,KAAK6/B,kBAAkBhiC,OAAOmC,KAAK5J,QACvC,EAUJ4J,KAAKggC,sBAAwB,IAAM,gBAAgBhgC,KAAKigC,eAUxDjgC,KAAKigC,cAAgB,EAAGrqB,gBAChBA,IAAc5V,KAAK0/B,cACnB1/B,KAAK5E,KAAO4E,KAAK5J,QACjB4J,KAAK4/B,0BAA0B/hC,OAAOmC,KAAKtF,eAC/C,EAEJsF,KAAKmnB,aAAc,EACnBnnB,KAAK5E,KAAO4E,KAAK5J,QAAUipC,EAC3Br/B,KAAK8/B,kBA9GIv8C,EA8GuByc,KAAK5J,SA7GjC/B,MAAMmH,WAAWjY,IA8GzB,CAiDAiiC,SAAS0a,GACL,OAAOlgC,KAAK2/B,kBAAkB54C,IAAIm5C,EACtC,CACAC,iBACIngC,KAAK2/B,kBAAkBta,OAC3B,CASAO,gBAAgBsa,GAGZ,OADAA,EAAalgC,KAAK3F,OACX2F,KAAK6/B,kBAAkB94C,IAAIm5C,EACtC,CAMAE,OAAOC,GACHrgC,KAAKqgC,cAAgBA,CACzB,CAgBA14C,IAAImC,EAAG4T,GAAS,GACPA,GAAWsC,KAAKqgC,cAIjBrgC,KAAKqgC,cAAcv2C,EAAGkW,KAAK+/B,iBAH3B//B,KAAK+/B,gBAAgBj2C,EAAG4T,EAKhC,CAQArD,MACI,OAAO2F,KAAK5J,OAChB,CAIAkqC,cACI,OAAOtgC,KAAK5E,IAChB,CAQAV,cAEI,OAAOsF,KAAK8/B,kBAEJ,OAAkBtkC,WAAWwE,KAAK5J,SAC9BoF,WAAWwE,KAAK5E,MAAO4E,KAAK8W,WAClC,CACV,CAaA7vB,MAAMS,GAEF,OADAsY,KAAKpY,OACE,IAAIL,SAASE,IAChBuY,KAAKmnB,aAAc,EACnBnnB,KAAKob,cAAgB1zB,EAAUD,EAAQ,IACxCK,MAAK,IAAMkY,KAAKugC,kBACvB,CAMA34C,OACQoY,KAAKob,eACLpb,KAAKob,gBACTpb,KAAKugC,gBACT,CAMA9J,cACI,QAASz2B,KAAKob,aAClB,CACAmlB,iBACIvgC,KAAKob,cAAgB,IACzB,CAUAolB,UACIxgC,KAAK2/B,kBAAkBta,QACvBrlB,KAAK6/B,kBAAkBxa,QACvBrlB,KAAKpY,MACT,EAEJ,SAASs3B,EAAYmgB,GACjB,OAAO,IAAIG,EAAYH,EAC3B,C,oEC5SA,SAASoB,EAAwBl9C,GAC7B,OAAOiM,SAAQ,IAAArL,GAAcZ,IAAUA,EAAMwD,IACjD,C,sDCJA,MAAM25C,EAAiBn9C,MAAaA,aAAqC,EAASA,EAAMmX,Y,gICAxF,MAAMimC,EAAmB,EAAI,GAAM,IAC7BC,EAAwC,oBAAhBvC,YACxB,IAAMA,YAAYC,MAClB,IAAMuC,KAAKvC,MACXwC,EAAgC,oBAAXv0B,OACpBkB,GAAalB,OAAO6D,sBAAsB3C,GAC1CA,GAAaszB,YAAW,IAAMtzB,EAASmzB,MAAmBD,GCFjE,IAAIK,GAAoB,EACpBC,GAAe,EACfC,GAAe,EACnB,MAAM,EAAQ,CACVztC,MAAO,EACPmiB,UAAW,GAETurB,EAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,EAAQD,EAAWptB,QAAO,CAACnB,EAAK9lB,KAClC8lB,EAAI9lB,GCnBR,SAA0Bm0C,GACtB,IAAII,EAAQ,GACRC,EAAiB,GACjBC,EAAW,EACXL,GAAe,EACfM,GAAiB,EACrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CACTC,SAAU,CAACn0B,EAAUo0B,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAaZ,EACjCc,EAASD,EAAoBV,EAAQC,EAQ3C,OAPIO,GACAJ,EAAY16C,IAAI0mB,IACc,IAA9Bu0B,EAAO/9C,QAAQwpB,KACfu0B,EAAO16C,KAAKmmB,GACRs0B,GAAqBb,IACrBK,EAAWF,EAAMj9C,SAElBqpB,CAAQ,EAEnB2O,OAAS3O,IACL,MAAM0wB,EAAQmD,EAAer9C,QAAQwpB,IACtB,IAAX0wB,GACAmD,EAAezuC,OAAOsrC,EAAO,GACjCsD,EAAYz6C,OAAOymB,EAAS,EAEhCw0B,QAAUC,IACN,GAAIhB,EACAM,GAAiB,MADrB,CAQA,GAJAN,GAAe,GACdG,EAAOC,GAAkB,CAACA,EAAgBD,GAC3CC,EAAel9C,OAAS,EACxBm9C,EAAWF,EAAMj9C,OACbm9C,EACA,IAAK,IAAIp9C,EAAI,EAAGA,EAAIo9C,EAAUp9C,IAAK,CAC/B,MAAMspB,EAAW4zB,EAAMl9C,GACvBspB,EAASy0B,GACLT,EAAYt/B,IAAIsL,KAChBk0B,EAAKC,SAASn0B,GACdwzB,IAER,CAEJC,GAAe,EACXM,IACAA,GAAiB,EACjBG,EAAKM,QAAQC,GAlBjB,CAmBA,GAGR,OAAOP,CACX,CDlCeQ,EAAiB,IAAOlB,GAAe,IAC3CruB,IACR,CAAC,GACEwvB,EAAOjB,EAAWptB,QAAO,CAACnB,EAAK9lB,KACjC,MAAM60C,EAAOP,EAAMt0C,GAMnB,OALA8lB,EAAI9lB,GAAO,CAACm1C,EAASJ,GAAY,EAAOC,GAAY,KAC3Cb,GACDoB,IACGV,EAAKC,SAASK,EAASJ,EAAWC,IAEtClvB,CAAG,GACX,CAAC,GACE0vB,EAAanB,EAAWptB,QAAO,CAACnB,EAAK9lB,KACvC8lB,EAAI9lB,GAAOs0C,EAAMt0C,GAAKsvB,OACfxJ,IACR,CAAC,GACE2vB,EAAYpB,EAAWptB,QAAO,CAACnB,EAAK9lB,KACtC8lB,EAAI9lB,GAAO,IAAMs0C,EAAMt0C,GAAKm1C,QAAQ,GAC7BrvB,IACR,CAAC,GACE4vB,EAAeC,GAAWrB,EAAMqB,GAAQR,QAAQ,GAChDS,EAAgB9sB,IAClBqrB,GAAe,EACf,EAAMxtC,MAAQutC,EACRL,EACA11C,KAAK+D,IAAI/D,KAAK0K,IAAIigB,EAAY,EAAMA,UAzC3B,IAyCmD,GAClE,EAAMA,UAAYA,EAClBsrB,GAAe,EACfC,EAAW95C,QAAQm7C,GACnBtB,GAAe,EACXD,IACAD,GAAoB,EACpBF,EAAY4B,GAChB,EAEEL,EAAY,KACdpB,GAAe,EACfD,GAAoB,EACfE,GACDJ,EAAY4B,EAAa,EAE3BC,EAAe,IAAM,EAE3B,O,qEE/BA,MAAMzzC,EAAM,CACRK,MAAM,E,QAAApL,GAAc,KACpBuL,MA9BJ,SAAkB5F,GACd,IAAI84C,EAAI,GACJ3uC,EAAI,GACJN,EAAI,GACJD,EAAI,GAiBR,OAhBI5J,EAAE1F,OAAS,GACXw+C,EAAI94C,EAAE+4C,OAAO,EAAG,GAChB5uC,EAAInK,EAAE+4C,OAAO,EAAG,GAChBlvC,EAAI7J,EAAE+4C,OAAO,EAAG,GAChBnvC,EAAI5J,EAAE+4C,OAAO,EAAG,KAGhBD,EAAI94C,EAAE+4C,OAAO,EAAG,GAChB5uC,EAAInK,EAAE+4C,OAAO,EAAG,GAChBlvC,EAAI7J,EAAE+4C,OAAO,EAAG,GAChBnvC,EAAI5J,EAAE+4C,OAAO,EAAG,GAChBD,GAAKA,EACL3uC,GAAKA,EACLN,GAAKA,EACLD,GAAKA,GAEF,CACH3D,IAAK+yC,SAASF,EAAG,IACjB5yC,MAAO8yC,SAAS7uC,EAAG,IACnBhE,KAAM6yC,SAASnvC,EAAG,IAClB7D,MAAO4D,EAAIovC,SAASpvC,EAAG,IAAM,IAAM,EAE3C,EAIIqP,UAAW,c,mGC7Bf,MAAM3T,EAAO,CACTG,MAAM,IAAApL,GAAc,MAAO,OAC3BuL,OAAO,OAAW,MAAO,aAAc,aACvCqT,UAAW,EAAGpT,MAAKC,aAAYC,YAAWC,MAAOizC,EAAU,KAC/C,QACJ93C,KAAKiF,MAAMP,GACX,KACA,gBAAkB,QAASC,IAC3B,KACA,gBAAkB,QAASC,IAC3B,MACA,QAAS,eAAgBkzC,IACzB,I,mGCZZ,MAAMz9C,EAAQ,CACViK,KAAOzF,GAAM,SAAUA,IAAM,SAASA,IAAM,SAAUA,GACtD4F,MAAQ5F,GACA,SAAUA,GACH,UAAWA,GAEb,SAAUA,GACR,UAAWA,GAGX,UAAUA,GAGzBiZ,UAAYjZ,IACD,QAASA,GACVA,EACAA,EAAE/F,eAAe,OACb,cAAe+F,GACf,cAAeA,G,yFCnBjC,MAAMk5C,GAAe,QAAM,EAAG,KACxBC,EAAU5/C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG,MAAS,CAAEyf,UAAYjZ,GAAMmB,KAAKiF,MAAM8yC,EAAal5C,MAC/FqF,EAAO,CACTI,MAAM,IAAApL,GAAc,MAAO,OAC3BuL,OAAO,OAAW,MAAO,QAAS,QAClCqT,UAAW,EAAGhT,MAAKC,QAAOC,OAAMH,MAAOizC,EAAU,KAAQ,QACrDE,EAAQlgC,UAAUhT,GAClB,KACAkzC,EAAQlgC,UAAU/S,GAClB,KACAizC,EAAQlgC,UAAU9S,GAClB,MACA,QAAS,eAAgB8yC,IACzB,I,4FCfR,MAAMG,EAAgB,CAACh2C,EAAMi2C,IAAcr5C,GAChC0F,SAAS,QAAS1F,IAAM,UAAsBA,IAAMA,EAAEkD,WAAWE,IACnEi2C,GAAY9/C,OAAOS,UAAUC,eAAeC,KAAK8F,EAAGq5C,IAEvDC,EAAa,CAACC,EAAOC,EAAOC,IAAWz5C,IACzC,KAAK,QAASA,GACV,OAAOA,EACX,MAAO4J,EAAGC,EAAGE,EAAG/D,GAAShG,EAAEg2B,MAAM,MACjC,MAAO,CACH,CAACujB,GAAQ7nC,WAAW9H,GACpB,CAAC4vC,GAAQ9nC,WAAW7H,GACpB,CAAC4vC,GAAQ/nC,WAAW3H,GACpB/D,WAAiBlD,IAAVkD,EAAsB0L,WAAW1L,GAAS,EACpD,C,+ECZL,MAAM0zC,EAAc,IAAI78C,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAAS88C,EAAmB35C,GACxB,IAAKtF,EAAMjB,GAASuG,EAAE45C,MAAM,GAAI,GAAG/iB,MAAM,KACzC,GAAa,gBAATn8B,EACA,OAAOsF,EACX,MAAO4Z,GAAUngB,EAAMu8B,MAAM,OAAe,GAC5C,IAAKpc,EACD,OAAO5Z,EACX,MAAM65C,EAAOpgD,EAAMikB,QAAQ9D,EAAQ,IACnC,IAAIikB,EAAe6b,EAAYrhC,IAAI3d,GAAQ,EAAI,EAG/C,OAFIkf,IAAWngB,IACXokC,GAAgB,KACbnjC,EAAO,IAAMmjC,EAAegc,EAAO,GAC9C,CACA,MAAMC,EAAgB,oBAChBniB,EAASp+B,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG,KAAU,CAAEw1C,kBAAoBhvC,IACvE,MAAM+5C,EAAY/5C,EAAEg2B,MAAM8jB,GAC1B,OAAOC,EAAYA,EAAUp6C,IAAIg6C,GAAoB5kC,KAAK,KAAO/U,CAAC,G,yFChB1E,MAAMg6C,EAAa,OACbC,EAAc,OAOpB,SAAS5yC,EAAQrH,GACI,iBAANA,IACPA,EAAI,GAAGA,KACX,MAAM6D,EAAS,GACf,IAAI2D,EAAY,EAChB,MAAM0yC,EAASl6C,EAAEg2B,MAAM,MACnBkkB,IACA1yC,EAAY0yC,EAAO5/C,OACnB0F,EAAIA,EAAE0d,QAAQ,KAAYs8B,GAC1Bn2C,EAAOrG,QAAQ08C,EAAOv6C,IAAI,aAE9B,MAAMw6C,EAAUn6C,EAAEg2B,MAAM,MAKxB,OAJImkB,IACAn6C,EAAIA,EAAE0d,QAAQ,KAAYu8B,GAC1Bp2C,EAAOrG,QAAQ28C,EAAQx6C,IAAI,cAExB,CAAEkE,SAAQ2D,YAAW4yC,UAAWp6C,EAC3C,CACA,SAAS4F,EAAM5F,GACX,OAAOqH,EAAQrH,GAAG6D,MACtB,CACA,SAASw2C,EAAkBr6C,GACvB,MAAM,OAAE6D,EAAM,UAAE2D,EAAS,UAAE4yC,GAAc/yC,EAAQrH,GAC3CiH,EAAYpD,EAAOvJ,OACzB,OAAQ0F,IACJ,IAAIgH,EAASozC,EACb,IAAK,IAAI//C,EAAI,EAAGA,EAAI4M,EAAW5M,IAC3B2M,EAASA,EAAO0W,QAAQrjB,EAAImN,EAAYwyC,EAAaC,EAAa5/C,EAAImN,EAAY,cAAgBxH,EAAE3F,KAAM,QAAS2F,EAAE3F,KAEzH,OAAO2M,CAAM,CAErB,CACA,MAAMszC,EAAwBt6C,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMiD,EAAU,CAAEwC,KA5ClB,SAAczF,GACV,IAAIvF,EAAIkU,EAAI0sB,EAAI4I,EAChB,OAAQ15B,MAAMvK,KACV,QAASA,KAC6E,QAApF2O,EAAoC,QAA9BlU,EAAKuF,EAAEg2B,MAAM,aAAgC,IAAPv7B,OAAgB,EAASA,EAAGH,cAA2B,IAAPqU,EAAgBA,EAAK,IAA2F,QAApFs1B,EAAoC,QAA9B5I,EAAKr7B,EAAEg2B,MAAM,aAAgC,IAAPqF,OAAgB,EAASA,EAAG/gC,cAA2B,IAAP2pC,EAAgBA,EAAK,GAAK,CACxP,EAuCwBr+B,QAAOy0C,oBAAmBrL,kBALlD,SAA2BhvC,GACvB,MAAMsH,EAAS1B,EAAM5F,GAErB,OADoBq6C,EAAkBr6C,EAC/Bu6C,CAAYjzC,EAAO3H,IAAI26C,GAClC,E,sHC/CA,MAAM1gC,EAAS,CACXnU,KAAOzF,GAAmB,iBAANA,EACpB4F,MAAO8L,WACPuH,UAAYjZ,GAAMA,GAEhBgG,EAAQzM,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAS,CAAEX,WAAW,QAAM,EAAG,KACvEvd,EAAQnC,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGogB,GAAS,CAAEpV,QAAS,G,8LCNlE,MAAMg2C,EAAkBX,IAAS,CAC7Bp0C,KAAOzF,IAAM,QAASA,IAAMA,EAAEy6C,SAASZ,IAAiC,IAAxB75C,EAAE62B,MAAM,KAAKv8B,OAC7DsL,MAAO8L,WACPuH,UAAYjZ,GAAM,GAAGA,IAAI65C,MAEvBa,EAAUF,EAAe,OACzBG,EAAUH,EAAe,KACzB3+B,EAAK2+B,EAAe,MACpBzK,EAAKyK,EAAe,MACpB1K,EAAK0K,EAAe,MACpBI,EAAqBrhD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGmhD,GAAU,CAAE/0C,MAAQ5F,GAAM26C,EAAQ/0C,MAAM5F,GAAK,IAAKiZ,UAAYjZ,GAAM26C,EAAQ1hC,UAAc,IAAJjZ,I,gLCZjJ,MAAMuI,EAAQ,CAACsD,EAAK3G,IAASlF,GAAMmB,KAAK+D,IAAI/D,KAAK0K,IAAI7L,EAAGkF,GAAM2G,GACxDgvC,EAAY76C,GAAOA,EAAI,EAAI4vB,OAAO5vB,EAAE86C,QAAQ,IAAM96C,EAClD+6C,EAAa,uBACbC,EAAa,+HACbC,EAAmB,mHACzB,SAASC,EAASl7C,GACd,MAAoB,iBAANA,CAClB,C","sources":["webpack://volunteer/./node_modules/react-apple-emojis/dist/DataContext.js","webpack://volunteer/./node_modules/react-apple-emojis/dist/EmojiProvider.js","webpack://volunteer/./node_modules/react-apple-emojis/dist/Emoji.js","webpack://volunteer/./src/components/Home/CharacterCard.tsx","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/animation-controls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/use-animation.mjs","webpack://volunteer/./src/components/Home/Introduce.tsx","webpack://volunteer/./src/pages/Home.tsx","webpack://volunteer/./node_modules/hey-listen/dist/hey-listen.es.js","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/events/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/warn-once.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://volunteer/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://volunteer/./node_modules/framesync/dist/es/on-next-frame.mjs","webpack://volunteer/./node_modules/framesync/dist/es/index.mjs","webpack://volunteer/./node_modules/framesync/dist/es/create-render-step.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/hex.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/hsla.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/rgba.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/color/utils.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/complex/filter.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/complex/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/numbers/index.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/numbers/units.mjs","webpack://volunteer/./node_modules/style-value-types/dist/es/utils.mjs"],"sourcesContent":["import { createContext } from 'react';\nexport default createContext({});\n//# sourceMappingURL=DataContext.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport PropTypes from 'prop-types';\nimport DataContext from './DataContext';\nfunction EmojiProvider({ data, children }) {\n    if (!data) {\n        throw new Error('Please pass a data value to EmojiProvider');\n    }\n    return (_jsx(DataContext.Provider, Object.assign({ value: data }, { children: children })));\n}\nEmojiProvider.propTypes = {\n    data: PropTypes.object.isRequired,\n};\nexport default EmojiProvider;\n//# sourceMappingURL=EmojiProvider.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext } from 'react';\nimport propTypes from 'prop-types';\nimport DataContext from './DataContext';\nfunction Emoji(_a) {\n    var { name } = _a, props = __rest(_a, [\"name\"]);\n    const data = useContext(DataContext);\n    const url = data[name];\n    if (!url) {\n        console.warn(`Emoji ${name}'s URL could not be found.`);\n    }\n    return (_jsx(\"img\", Object.assign({ src: url, alt: name, \"aria-label\": name }, props)));\n}\nEmoji.propTypes = {\n    name: propTypes.string.isRequired,\n};\nexport default Emoji;\n//# sourceMappingURL=Emoji.js.map","import React, { useState } from \"react\";\nimport { Emoji, EmojiProvider } from \"react-apple-emojis\";\nimport emojiData from \"react-apple-emojis/src/data.json\";\nimport { motion } from \"framer-motion\";\n\ninterface CharacterCardData {\n  color: string;\n  title: string;\n  content: JSX.Element;\n  icon: string;\n  fontSize?: string;\n}\n\nfunction CharacterCard(props: CharacterCardData) {\n  let [tapped, setTapped] = useState(false);\n\n  return (\n    <motion.div\n      className={`flex flex-col select-none cursor-pointer gap-2 items-center justify-center rounded-[20px] shadow-round w-[350px] h-[200px] ${props.color}`}\n      whileHover={{\n        scale: 1.05,\n      }}\n      whileTap={{\n        scale: 1.02,\n      }}\n      onTap={() => {\n        setTapped(!tapped);\n      }}\n      animate={{\n        height: tapped ? 450 : 200,\n      }}\n      transition={{\n        duration: 0.15,\n        ease: \"easeOut\",\n      }}\n    >\n      <motion.div\n        className=\"flex flex-col gap-2 items-center\"\n        animate={{ opacity: tapped ? 0 : 1 }}\n        transition={{ duration: 0.1 }}\n      >\n        <div>\n          <EmojiProvider data={emojiData}>\n            <Emoji name={props.icon} width={45} />\n          </EmojiProvider>\n        </div>\n        <div className={`text-white font-bold ${props.fontSize}`}>\n          {props.title}\n        </div>\n      </motion.div>\n      <motion.div\n        className={`absolute ${\n          tapped ? \"visible\" : \"collapse\"\n        } text-lg text-white`}\n        animate={{ opacity: tapped ? 1 : 0 }}\n        transition={{ duration: 0.1 }}\n      >\n        {props.content}\n      </motion.div>\n    </motion.div>\n  );\n}\n\nexport default CharacterCard;\n","import { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    let hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    const pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    const subscribers = new Set();\n    const controls = {\n        subscribe(visualElement) {\n            subscribers.add(visualElement);\n            return () => void subscribers.delete(visualElement);\n        },\n        start(definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                const animations = [];\n                subscribers.forEach((visualElement) => {\n                    animations.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride,\n                    }));\n                });\n                return Promise.all(animations);\n            }\n            else {\n                return new Promise((resolve) => {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve,\n                    });\n                });\n            }\n        },\n        set(definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach((visualElement) => {\n                setValues(visualElement, definition);\n            });\n        },\n        stop() {\n            subscribers.forEach((visualElement) => {\n                stopAnimation(visualElement);\n            });\n        },\n        mount() {\n            hasMounted = true;\n            pendingAnimations.forEach(({ animation, resolve }) => {\n                controls.start(...animation).then(resolve);\n            });\n            return () => {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    const controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\nconst useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import React from \"react\";\nimport Introduce_Image from \"../../config/Introduce.json\";\nimport { motion, useAnimationControls } from \"framer-motion\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst Banner = (props: { content: string; url: string; key: number }) => {\n  return (\n    <motion.div>\n      <motion.div className=\"flex w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\">\n        <img src={props?.url} key={props.key} alt={props?.content} />\n      </motion.div>\n    </motion.div>\n  );\n};\n\nconst CarouselBanner = () => {\n  let imageList = Introduce_Image.data.map((data) => data.url);\n\n  let [image1, setImage1] = useState(imageList[imageList.length - 1]);\n  let [image2, setImage2] = useState(imageList[0]);\n  let [image3, setImage3] = useState(imageList[1]);\n  let [image4, setImage4] = useState(imageList[2]);\n\n  const control1 = useAnimationControls();\n  const control2 = useAnimationControls();\n  const control3 = useAnimationControls();\n  const control4 = useAnimationControls();\n\n  let bannerIndex = 0;\n\n  useEffect(() => {\n    setInterval(() => {\n      control1.start({ height: 0, transition: { duration: 0.5 } }).then(() => {\n        control1.set({ height: 450 });\n        control2.set({ scale: 1 });\n        control3.set({ scale: 0.95 });\n        control4.set({ scale: 0.9 });\n\n        if (bannerIndex > imageList.length) bannerIndex = 0;\n        else bannerIndex++;\n\n        let trunk = imageList.shift();\n        imageList.push(trunk!);\n\n        setImage1(\n          bannerIndex === 0\n            ? imageList[imageList.length - 1]\n            : imageList[imageList.length - 1]\n        );\n        setImage2(imageList[0]);\n        setImage3(imageList[1]);\n        setImage4(imageList[2]);\n      });\n      control2.start({ scale: 0.95, transition: { duration: 0.5 } });\n      control3.start({ scale: 1, transition: { duration: 0.5 } });\n      control4.start({ scale: 0.95, transition: { duration: 0.5 } });\n    }, 5000);\n  }, []);\n\n  return (\n    <div>\n      <motion.div className=\"flex flex-col h-[520px] w-[850px] overflow-hidden\">\n        <div className=\"flex flex-col relative -top-[415px] left-5\">\n          <motion.img\n            style={{ scale: 0.95 }}\n            animate={control1}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image1}\n          />\n          <motion.img\n            animate={control2}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image2}\n          />\n          <motion.img\n            style={{ scale: 0.95 }}\n            animate={control3}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image3}\n          />\n          <motion.img\n            style={{ scale: 0.9 }}\n            animate={control4}\n            className=\"w-[800px] h-[450px] object-cover rounded-3xl shadow-round overflow-hidden\"\n            src={image4}\n          />\n        </div>\n        <div className=\"absolute h-[10px] w-[850px] bg-gradient-to-b from-white to-transparent\" />\n        <div className=\"absolute top-[765px] h-[10px] w-[850px] bg-gradient-to-t from-white to-transparent\" />\n      </motion.div>\n    </div>\n  );\n};\n\nfunction Introduce({ className = \"\" }) {\n  return (\n    <div className={className + \" flex\"}>\n      <div className=\"flex\">\n        <CarouselBanner />\n      </div>\n      <div className=\"flex flex-col mt-[100px]\">\n        <div className=\"text-[40px] ml-[50px] mb-[35px]\">\n          <b> 「つながる場」 </b>をつくる\n        </div>\n        <div className=\"text-[20px] ml-[90px]\">\n          Community Labは、<b className=\"text-[#3CB3EC]\">現役大学生</b>\n          が子供たちに\n          <br />\n          様々な分野のイベントやコンテンツを提供する\n          <b className=\"text-[#3CB3EC]\">教育コミュニティ</b>\n          です。\n          <br />\n          <br />\n          ​年齢や学校の枠を越え\n          <br />\n          生涯に渡って交流する仲間と\n          <b className=\"text-[#3CB3EC]\"> 「つながる場」 </b>\n          をつくります。\n          <br />\n          <br />\n          <b className=\"text-[15px] text-[#3CB3EC]\">詳細はこちらへ！</b>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Introduce;\n","import React from \"react\";\nimport { Emoji, EmojiProvider } from \"react-apple-emojis\";\nimport CharacterCard from \"../components/Home/CharacterCard\";\nimport Introduce from \"../components/Home/Introduce\";\nimport emojiData from \"react-apple-emojis/src/data.json\";\n\ninterface CharacterCardContent {\n  color: string;\n  title: string;\n  icon: string;\n  fontSize: string;\n  content: JSX.Element;\n}\n\nconst IntroducePanel = () => {\n  return <Introduce className=\"m-[120px]\" />;\n};\n\nconst CharacterCardPanel = () => {\n  const contents: CharacterCardContent[] = [\n    {\n      color: \"bg-rose-400\",\n      title: \"専門性が高い\",\n      icon: \"flexed-biceps\",\n      fontSize: \"text-3xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          メンバーみんな、それぞれの大学で\n          <br />\n          専門分野を中心に学問を修め、\n          <b className=\"underline decoration-[3px] decoration-rose-500 decoration-wavy underline-offset-4\">\n            最先端の生きた技術や知識を勉強\n          </b>\n          しています。\n          <br />\n          <br />\n          ​そうして得た知識や技術、経験を\n          <b className=\"underline decoration-[3px] decoration-rose-500 decoration-wavy underline-offset-4\">\n            本質を損なうことなく分かりやすく\n          </b>\n          噛み砕いて\n          <b className=\"underline decoration-[3px] decoration-rose-500 decoration-wavy underline-offset-4\">\n            子どもたちの学びへと還元\n          </b>\n          します。\n        </div>\n      ),\n    },\n    {\n      color: \"bg-sky-400\",\n      title: \"多様なコンテンツ\",\n      icon: \"party-popper\",\n      fontSize: \"text-3xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          Community Labには現在20人以上\n          <br />\n          メンバーがいますが、\n          <br />\n          それぞれに違った専門分野や特技、\n          <br />\n          趣味があります。\n          <br />\n          <br />\n          多様な背景を持ち、異なる大学に通う\n          <br />\n          メンバーが集まっているからこそ、\n          <br />\n          その分\n          <b className=\"underline decoration-sky-500 decoration-[3px] decoration-wavy underline-offset-4\">\n            多様な学びや経験を子どもたちに\n            <br />\n            提供\n          </b>\n          することができます。\n        </div>\n      ),\n    },\n    {\n      color: \"bg-emerald-400\",\n      title: \"子ども達との距離が近い\",\n      icon: \"family-man-woman-girl-boy\",\n      fontSize: \"text-2xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          <p>\n            メンバーは全員\n            <b className=\"underline decoration-[3px] decoration-wavy decoration-emerald-500 underline-offset-4\">\n              現役大学生\n            </b>\n            なので、\n          </p>\n          <p>年齢的にも心理的にも</p>\n          <br />\n          <p>\n            <b className=\"underline decoration-[3px] decoration-wavy decoration-emerald-500 underline-offset-4\">\n              子どもたちとの距離が近く、\n              <br />\n              コミュニケーションを\n              <br />\n              取りやすい\n            </b>\n            のが強みです。\n          </p>\n          <br />\n          また年齢が近いからこそ、\n          <br />\n          子どもたちの\n          <br />\n          <p>\n            <b className=\"underline decoration-[3px] decoration-wavy decoration-emerald-500 underline-offset-4\">\n              理想像(ロールモデル)になれる\n            </b>\n            と\n          </p>\n          自負しています。\n        </div>\n      ),\n    },\n    {\n      color: \"bg-orange-400\",\n      title: \"主体性行動力\",\n      icon: \"man-running-light-skin-tone\",\n      fontSize: \"text-3xl\",\n      content: (\n        <div className=\"flex flex-col\">\n          Community Labでは\n          <br />\n          活動理念に共感したメンバーが、\n          <br />\n          時間や熱意を捧げて\n          <b className=\"underline decoration-orange-500 decoration-[3px] decoration-wavy underline-offset-4\">\n            主体的にこの\n            <br />\n            活動に取り組んでいます。\n          </b>\n          <br />\n          <br />\n          また社会人と比べて多くの\n          <br />\n          時間があるため、\n          <br />\n          学びのチャンスがあれば\n          <br />\n          <b className=\"underline decoration-orange-500 decoration-[3px] decoration-wavy underline-offset-4\">\n            積極的にアクションを\n            <br />\n            起こす行動力があります。\n          </b>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-col items-center gap-10\">\n      <div className=\"flex flex-row gap-2\">\n        <p className=\"text-4xl\">\n          <b className=\"underline decoration-pink-500 decoration-4 underline-offset-4 decoration-wavy\">\n            大学生\n          </b>\n          だから届けられる価値\n        </p>\n        {/* <EmojiProvider data={emojiData}>\n          <Emoji name=\"person-raising-hand\" width={48} />\n        </EmojiProvider> */}\n      </div>\n      <div className={`flex flex-row justify-center gap-7`}>\n        {contents.map((content) => (\n          <CharacterCard\n            color={content.color}\n            title={content.title}\n            icon={content.icon}\n            fontSize={content.fontSize}\n            content={content.content}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction Home() {\n  return (\n    <div className=\"flex flex-col gap-44\">\n      <IntroducePanel />\n      <CharacterCardPanel />\n    </div>\n  );\n}\n\nexport default Home;\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst createBackIn = (power = 1.525) => (p) => p * p * ((power + 1) * p - power);\nconst backIn = createBackIn();\nconst backOut = reverseEasing(backIn);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut, createBackIn };\n","import { createBackIn } from './back.mjs';\n\nconst createAnticipate = (power) => {\n    const backEasing = createBackIn(power);\n    return (p) => (p *= 2) < 1\n        ? 0.5 * backEasing(p)\n        : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n};\nconst anticipate = createAnticipate();\n\nexport { anticipate };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { complex } from 'style-value-types';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isKeyframesTarget } from './is-keyframes-target.mjs';\n\nconst underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (to) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: to === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframes = (values) => ({\n    type: \"keyframes\",\n    duration: 0.8,\n    values,\n});\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, to) => {\n    let transitionFactory;\n    if (isKeyframesTarget(to)) {\n        transitionFactory = keyframes;\n    }\n    else {\n        transitionFactory =\n            defaultTransitions[valueKey] || defaultTransitions.default;\n    }\n    return { to, ...transitionFactory(to) };\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { rgba, hsla, hex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from 'style-value-types';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ from = 0.0, to = 1.0, restSpeed = 2, restDelta = 0.01, ...options }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                // TODO Resolve these calculations with the above\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport sync, { cancelSync } from 'framesync';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = { decay, keyframes, spring };\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ from, autoplay = true, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let { to } = options;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = options\n        .duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[Array.isArray(to) ? \"keyframes\" : type];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, from, to)) {\n        interpolateFromNumber = interpolate([0, 100], [from, to], {\n            clamp: false,\n        });\n        from = 0;\n        to = 100;\n    }\n    const animation = animator({ ...options, from, to });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0)\n                computedDuration !== null && computedDuration !== void 0 ? computedDuration : (computedDuration = elapsed);\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay === null || onPlay === void 0 ? void 0 : onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop === null || onStop === void 0 ? void 0 : onStop();\n            driverControls.stop();\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ velocity = 0, from = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    let amplitude = power * velocity;\n    const ideal = from + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - from;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from './easing.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { getDefaultTransition } from './default-transitions.mjs';\nimport { warning } from 'hey-listen';\nimport { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { inertia } from '../legacy-popmotion/inertia.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nlet legacyRepeatWarning = false;\n/**\n * Convert Framer Motion's Transition type into Popmotion-compatible options.\n */\nfunction convertTransitionToAnimationOptions({ ease, times, yoyo, flip, loop, ...transition }) {\n    const options = { ...transition };\n    if (times)\n        options[\"offset\"] = times;\n    /**\n     * Convert any existing durations from seconds to milliseconds\n     */\n    if (transition.duration)\n        options[\"duration\"] = secondsToMilliseconds(transition.duration);\n    if (transition.repeatDelay)\n        options.repeatDelay = secondsToMilliseconds(transition.repeatDelay);\n    /**\n     * Map easing names to Popmotion's easing functions\n     */\n    if (ease) {\n        options[\"ease\"] = isEasingArray(ease)\n            ? ease.map(easingDefinitionToFunction)\n            : easingDefinitionToFunction(ease);\n    }\n    /**\n     * Support legacy transition API\n     */\n    if (transition.type === \"tween\")\n        options.type = \"keyframes\";\n    /**\n     * TODO: These options are officially removed from the API.\n     */\n    if (yoyo || loop || flip) {\n        warning(!legacyRepeatWarning, \"yoyo, loop and flip have been removed from the API. Replace with repeat and repeatType options.\");\n        legacyRepeatWarning = true;\n        if (yoyo) {\n            options.repeatType = \"reverse\";\n        }\n        else if (loop) {\n            options.repeatType = \"loop\";\n        }\n        else if (flip) {\n            options.repeatType = \"mirror\";\n        }\n        options.repeat = loop || yoyo || flip || transition.repeat;\n    }\n    /**\n     * TODO: Popmotion 9 has the ability to automatically detect whether to use\n     * a keyframes or spring animation, but does so by detecting velocity and other spring options.\n     * It'd be good to introduce a similar thing here.\n     */\n    if (transition.type !== \"spring\")\n        options.type = \"keyframes\";\n    return options;\n}\n/**\n * Get the delay for a value by checking Transition with decreasing specificity.\n */\nfunction getDelayFromTransition(transition, key) {\n    var _a, _b;\n    const valueTransition = getValueTransition(transition, key) || {};\n    return (_b = (_a = valueTransition.delay) !== null && _a !== void 0 ? _a : transition.delay) !== null && _b !== void 0 ? _b : 0;\n}\nfunction hydrateKeyframes(options) {\n    if (Array.isArray(options.to) && options.to[0] === null) {\n        options.to = [...options.to];\n        options.to[0] = options.from;\n    }\n    return options;\n}\nfunction getPopmotionAnimationOptions(transition, options, key) {\n    if (Array.isArray(options.to) && transition.duration === undefined) {\n        transition.duration = 0.8;\n    }\n    hydrateKeyframes(options);\n    /**\n     * Get a default transition if none is determined to be defined.\n     */\n    if (!isTransitionDefined(transition)) {\n        transition = {\n            ...transition,\n            ...getDefaultTransition(key, options.to),\n        };\n    }\n    return {\n        ...options,\n        ...convertTransitionToAnimationOptions(transition),\n    };\n}\n/**\n *\n */\nfunction getAnimation(key, value, target, transition, onComplete) {\n    const valueTransition = getValueTransition(transition, key) || {};\n    let origin = valueTransition.from !== undefined ? valueTransition.from : value.get();\n    const isTargetAnimatable = isAnimatable(key, target);\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(key, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    const isOriginAnimatable = isAnimatable(key, origin);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${key} from \"${origin}\" to \"${target}\". ${origin} is not an animatable value - to enable this animation set ${origin} to a value animatable to ${target} via the \\`style\\` property.`);\n    function start() {\n        const options = {\n            from: origin,\n            to: target,\n            velocity: value.getVelocity(),\n            onComplete,\n            onUpdate: (v) => value.set(v),\n        };\n        return valueTransition.type === \"inertia\" ||\n            valueTransition.type === \"decay\"\n            ? inertia({ ...options, ...valueTransition })\n            : animate({\n                ...getPopmotionAnimationOptions(valueTransition, options, key),\n                onUpdate: (v) => {\n                    options.onUpdate(v);\n                    valueTransition.onUpdate && valueTransition.onUpdate(v);\n                },\n                onComplete: () => {\n                    options.onComplete();\n                    valueTransition.onComplete && valueTransition.onComplete();\n                },\n            });\n    }\n    function set() {\n        const finalTarget = resolveFinalValueInKeyframes(target);\n        value.set(finalTarget);\n        onComplete();\n        valueTransition.onUpdate && valueTransition.onUpdate(finalTarget);\n        valueTransition.onComplete && valueTransition.onComplete();\n        return { stop: () => { } };\n    }\n    return !isOriginAnimatable ||\n        !isTargetAnimatable ||\n        valueTransition.type === false\n        ? set\n        : start;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n/**\n * Start animation on a MotionValue. This function is an interface between\n * Framer Motion and Popmotion\n */\nfunction startAnimation(key, value, target, transition = {}) {\n    if (instantAnimationState.current) {\n        transition = { type: false };\n    }\n    return value.start((onComplete) => {\n        let controls;\n        const animation = getAnimation(key, value, target, transition, onComplete);\n        const delayBy = getDelayFromTransition(transition, key);\n        const start = () => (controls = animation());\n        let cancelDelay;\n        if (delayBy) {\n            cancelDelay = delay(start, secondsToMilliseconds(delayBy));\n        }\n        else {\n            start();\n        }\n        return () => {\n            cancelDelay && cancelDelay();\n            controls && controls.stop();\n        };\n    });\n}\n\nexport { convertTransitionToAnimationOptions, getDelayFromTransition, getPopmotionAnimationOptions, getValueTransition, getZeroUnit, hydrateKeyframes, isTransitionDefined, isZero, startAnimation };\n","import { animate } from './index.mjs';\nimport { getFrameData } from 'framesync';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nfunction inertia({ from = 0, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function boundaryNearest(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(from)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({ from, velocity, to: boundaryNearest(from) });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + from;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = boundaryNearest(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, getFrameData().delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ from: v, to: boundary, velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            from,\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from 'style-value-types';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from 'style-value-types';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\n\nfunction useSVGProps(props, visualState) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        var _a;\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = (_a = props[type]) !== null && _a !== void 0 ? _a : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = getFrameData();\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = getFrameData();\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    var _a;\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : (_a = dragElastic[label]) !== null && _a !== void 0 ? _a : 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { percent } from 'style-value-types';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            var _a;\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (_a = constraints === null || constraints === void 0 ? void 0 : constraints[axis]) !== null && _a !== void 0 ? _a : {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return startAnimation(axis, axisValue, 0, transition);\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a, _b;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (_b = (_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) !== null && _b !== void 0 ? _b : 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { px, number } from 'style-value-types';\nimport { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import sync, { cancelSync } from 'framesync';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.onChange((latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.onRenderRequest(this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue);\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.6.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.6.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from 'style-value-types';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import sync from 'framesync';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { percent, px } from 'style-value-types';\nimport { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    var _a, _b, _c, _d;\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // (follow?.opacity as number) ?? 0,\n        // TODO Reinstate this if only child\n        (_a = lead.opacity) !== null && _a !== void 0 ? _a : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix((_b = follow.opacity) !== null && _b !== void 0 ? _b : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix((_c = follow.opacity) !== null && _c !== void 0 ? _c : 1, (_d = lead.opacity) !== null && _d !== void 0 ? _d : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    var _a;\n    return (_a = values[radiusName]) !== null && _a !== void 0 ? _a : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { percent } from 'style-value-types';\nimport { mix } from '../../utils/mix.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import sync, { cancelSync, flushSync } from 'framesync';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { startAnimation } from './utils/transitions.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    startAnimation(\"\", value, to, transition);\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { filter, complex } from 'style-value-types';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color, filter } from 'style-value-types';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from 'style-value-types';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { px, degrees, scale, alpha, progressPercentage } from 'style-value-types';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { startAnimation } from '../../animation/utils/transitions.mjs';\nimport { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        let animation = startAnimation(key, value, valueTarget, valueTransition);\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color, complex } from 'style-value-types';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { complex } from 'style-value-types';\nimport { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import sync, { cancelSync } from 'framesync';\n\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import sync, { getFrameData } from 'framesync';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.6.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Functions to notify when the `MotionValue` updates.\n         *\n         * @internal\n         */\n        this.updateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the velocity updates.\n         *\n         * @internal\n         */\n        this.velocityUpdateSubscribers = new SubscriptionManager();\n        /**\n         * Functions to notify when the `MotionValue` updates and `render` is set to `true`.\n         *\n         * @internal\n         */\n        this.renderSubscribers = new SubscriptionManager();\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = getFrameData();\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current) {\n                this.updateSubscribers.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.velocityUpdateSubscribers.getSize()) {\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render) {\n                this.renderSubscribers.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                this.velocityUpdateSubscribers.notify(this.getVelocity());\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.onChange(updateOpacity)\n     *     const unsubscribeY = y.onChange(updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @public\n     */\n    onChange(subscription) {\n        return this.updateSubscribers.add(subscription);\n    }\n    clearListeners() {\n        this.updateSubscribers.clear();\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` requests a render.\n     *\n     * @param subscriber - A function that's provided the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @internal\n     */\n    onRenderRequest(subscription) {\n        // Render immediately\n        subscription(this.get());\n        return this.renderSubscribers.add(subscription);\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n        }).then(() => this.clearAnimation());\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation)\n            this.stopAnimation();\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.updateSubscribers.clear();\n        this.renderSubscribers.clear();\n        this.stop();\n    }\n}\nfunction motionValue(init) {\n    return new MotionValue(init);\n}\n\nexport { MotionValue, motionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = '';\n    let g = '';\n    let b = '';\n    let a = '';\n    if (v.length > 5) {\n        r = v.substr(1, 2);\n        g = v.substr(3, 2);\n        b = v.substr(5, 2);\n        a = v.substr(7, 2);\n    }\n    else {\n        r = v.substr(1, 1);\n        g = v.substr(2, 1);\n        b = v.substr(3, 1);\n        a = v.substr(4, 1);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString('#'),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString('hsl', 'hue'),\n    parse: splitColor('hue', 'saturation', 'lightness'),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return ('hsla(' +\n            Math.round(hue) +\n            ', ' +\n            percent.transform(sanitize(saturation)) +\n            ', ' +\n            percent.transform(sanitize(lightness)) +\n            ', ' +\n            sanitize(alpha.transform(alpha$1)) +\n            ')');\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty('red')\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { number, alpha } from '../numbers/index.mjs';\nimport { sanitize, clamp } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = clamp(0, 255);\nconst rgbUnit = Object.assign(Object.assign({}, number), { transform: (v) => Math.round(clampRgbUnit(v)) });\nconst rgba = {\n    test: isColorString('rgb', 'red'),\n    parse: splitColor('red', 'green', 'blue'),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => 'rgba(' +\n        rgbUnit.transform(red) +\n        ', ' +\n        rgbUnit.transform(green) +\n        ', ' +\n        rgbUnit.transform(blue) +\n        ', ' +\n        sanitize(alpha.transform(alpha$1)) +\n        ')',\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\nconst maxDefaults = new Set(['brightness', 'contrast', 'saturate', 'opacity']);\nfunction applyDefaultFilter(v) {\n    let [name, value] = v.slice(0, -1).split('(');\n    if (name === 'drop-shadow')\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, '');\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + '(' + defaultValue + unit + ')';\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = Object.assign(Object.assign({}, complex), { getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(' ') : v;\n    } });\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = '${c}';\nconst numberToken = '${n}';\nfunction test(v) {\n    var _a, _b, _c, _d;\n    return (isNaN(v) &&\n        isString(v) &&\n        ((_b = (_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = v.match(colorRegex)) === null || _c === void 0 ? void 0 : _c.length) !== null && _d !== void 0 ? _d : 0) > 0);\n}\nfunction analyse(v) {\n    if (typeof v === 'number')\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, tokenised: v };\n}\nfunction parse(v) {\n    return analyse(v).values;\n}\nfunction createTransformer(v) {\n    const { values, numColors, tokenised } = analyse(v);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors ? color.transform(v[i]) : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === 'number' ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { complex };\n","import { clamp } from '../utils.mjs';\n\nconst number = {\n    test: (v) => typeof v === 'number',\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = Object.assign(Object.assign({}, number), { transform: clamp(0, 1) });\nconst scale = Object.assign(Object.assign({}, number), { default: 1 });\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(' ').length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType('deg');\nconst percent = createUnitType('%');\nconst px = createUnitType('px');\nconst vh = createUnitType('vh');\nconst vw = createUnitType('vw');\nconst progressPercentage = Object.assign(Object.assign({}, percent), { parse: (v) => percent.parse(v) / 100, transform: (v) => percent.transform(v * 100) });\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const clamp = (min, max) => (v) => Math.max(Math.min(v, max), min);\nconst sanitize = (v) => (v % 1 ? Number(v.toFixed(5)) : v);\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === 'string';\n}\n\nexport { clamp, colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["createContext","EmojiProvider","data","children","Error","DataContext","Provider","Object","assign","value","propTypes","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Emoji","_a","name","props","url","useContext","console","warn","src","alt","tapped","setTapped","useState","React","motion","className","color","whileHover","scale","whileTap","onTap","animate","height","transition","duration","ease","opacity","emojiData","icon","width","fontSize","title","content","animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations","forEach","push","Promise","all","resolve","animation","set","stop","mount","then","useAnimationControls","useEffect","CarouselBanner","imageList","Introduce_Image","image1","setImage1","image2","setImage2","image3","setImage3","image4","setImage4","control1","control2","control3","control4","bannerIndex","setInterval","trunk","shift","style","IntroducePanel","Introduce","CharacterCardPanel","contents","map","CharacterCard","warning","invariant","isKeyframesTarget","v","Array","isArray","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","easeIn","easeOut","reverse","easeInOut","mirror","createBackIn","power","backIn","backOut","backInOut","anticipate","backEasing","pow","createAnticipate","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","x1","y1","x2","y2","undefined","isAnimatable","key","complex","startsWith","underDampedSpring","type","stiffness","damping","restSpeed","criticallyDampedSpring","to","sqrt","linearTween","keyframes","values","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","backgroundColor","default","getDefaultTransition","valueKey","transitionFactory","instantAnimationState","hueToRgb","q","mixLinearColor","from","fromExpo","max","colorTypes","hex","rgba","hsla","asRGBA","find","test","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","getMixer","origin","target","mixComplex","mixArray","output","numValues","blendValue","fromThis","mixObject","analyse","parsed","numNumbers","numColors","template","originStats","targetStats","pipe","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","clamp","isClamp","inputLength","interpolator","progressInRange","progress","defaultEasing","easing","splice","safeMin","findSpring","bounce","velocity","mass","envelope","derivative","maxDuration","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","f","g","initialGuess","result","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","resolveVelocity","createSpring","initialVelocity","initialDelta","undampedAngularFreq","min","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","flipTarget","needsInterpolation","_t","types","decay","timeConstant","modifyTarget","amplitude","ideal","offset","times","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","loopElapsed","elapsed","delay","framesync","update","passTimestamp","autoplay","driver","repeat","repeatMax","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate","_b","driverControls","latest","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","legacyRepeatWarning","convertTransitionToAnimationOptions","yoyo","flip","loop","isEasingArray","getPopmotionAnimationOptions","hydrateKeyframes","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","getAnimation","valueTransition","getValueTransition","get","isTargetAnimatable","isZero","getZeroUnit","isOriginAnimatable","getVelocity","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","boundaryNearest","startAnimation","startSpring","boundary","heading","prev","checkBoundary","inertia","finalTarget","parseFloat","potentialUnitType","delayBy","getDelayFromTransition","cancelDelay","acos","mirrorEasing","reverseEasing","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","useCallback","instance","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","layout","translateAlias","transformPerspective","sortTransformProps","isCSSVariable","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","number","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","size","px","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","useSVGProps","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","camelToDash","str","replace","toLowerCase","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","eventHandler","button","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","window","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapStart","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","variantChildren","setAnimateFunction","makeAnimator","getState","safeToRemove","distance","PanSession","constructor","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","timestamp","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","direction","getCurrentDirection","updateAxis","getTransformPagePoint","cancel","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","getValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","checkAndConvertChangedValueTypes","targetPositionalKeys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","Element","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","DOMVisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","willChange","initialMotionValues","is","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","remove","clear","valueIsTransform","removeOnChange","onChange","latestValue","isTransformDirty","removeOnRenderRequest","onRenderRequest","sortNodePosition","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","makeTargetAnimatable","canMutate","makeTargetAnimatableFromInstance","on","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","compareDocumentPosition","isMounted","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle","getAnimatableNone","defaultValueType","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","zIndex","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","animateVisualElement","variant","animateVariant","resolvedDefinition","animateTarget","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animationTypeState","shouldBlockAnimation","shouldBlock","resolveVariant","getCurrent","resolveVariantFromProps","currentValues","isZeroValueString","valueTypes","findValueType","setMotionValue","setTarget","setVariants","variantLabels","setValues","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","addUniqueItem","arr","item","removeItem","index","timeout","performance","now","checkElapsed","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","subscriptions","numSubscriptions","getSize","secondsToMilliseconds","seconds","useConstant","init","velocityPerSecond","frameDuration","MotionValue","version","lastUpdated","updateSubscribers","velocityUpdateSubscribers","renderSubscribers","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","velocityCheck","subscription","clearListeners","attach","passiveEffect","getPrevious","clearAnimation","destroy","isWillChangeMotionValue","isMotionValue","defaultTimestep","getCurrentTime","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","process","frameData","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","getFrameData","r","substr","parseInt","alpha$1","clampRgbUnit","rgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorToken","numberToken","colors","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","toFixed","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}