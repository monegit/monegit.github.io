{"version":3,"file":"b7a9711f57e84e845fcdd7733db0daf292ba9f98-d3ebd5b72c702ba6c110.js","mappings":"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","sources":["webpack://portfolio/./node_modules/hey-listen/dist/hey-listen.es.js","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/use-dom-event.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/utils/event-type.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/events/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/warn-once.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/PanSession.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/handoff.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/store-id.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    const origin = keyframes[0];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframes.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restSpeed = 2, restDelta = 0.01, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working within what looks like a 0-1 range, change the default restDelta\n         * to 0.01\n         */\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(target - origin) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let latest;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes.length > 2 ? \"keyframes\" : type];\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            const state = animation.next(Math.max(0, elapsed));\n            latest = state.value;\n            if (interpolateFromNumber)\n                latest = interpolateFromNumber(latest);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(latest);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls.stop();\n        },\n        sample: (t) => {\n            return animation.next(Math.max(0, t));\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    let { keyframes, duration = 0.3, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        const sampleAnimation = animate(options);\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        let t = 0;\n        while (!state.done) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return () => {\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        const { currentTime } = animation;\n        if (currentTime) {\n            const sampleAnimation = animate(options);\n            value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n        }\n        sync.update(() => animation.cancel());\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return () => { };\n    };\n    return elapsed ? delay(setValue, -elapsed) : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { supports } from './waapi/supports.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            const animation = inertia(options);\n            return () => animation.stop();\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        const canAccelerateAnimation = supports.waapi() &&\n            acceleratedValues.has(valueName) &&\n            !options.repeatDelay &&\n            options.repeatType !== \"mirror\" &&\n            options.damping !== 0 &&\n            visualElement &&\n            element instanceof HTMLElement &&\n            !visualElement.getProps().onUpdate;\n        if (canAccelerateAnimation) {\n            /**\n             * If this animation is capable of being run via WAAPI, then do so.\n             */\n            return createAcceleratedAnimation(value, valueName, options);\n        }\n        else {\n            /**\n             * Otherwise, fall back to the main thread.\n             */\n            const animation = animate(options);\n            return () => animation.stop();\n        }\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * If we have optimised appear animations to handoff from, trigger animateChanges\n     * from a synchronous useLayoutEffect to ensure there's no flash of incorrectly\n     * styled component in the event of a hydration error.\n     */\n    useIsomorphicLayoutEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useIsomorphicLayoutEffect(() => () => visualElement && visualElement.notify(\"Unmount\"), []);\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","const animationProps = [\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileDrag\",\n    \"whileInView\",\n];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\n    \"whileInView\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n];\n/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"layout\",\n    \"layoutId\",\n    \"layoutDependency\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"drag\",\n    \"dragControls\",\n    \"dragListener\",\n    \"dragConstraints\",\n    \"dragDirectionLock\",\n    \"dragSnapToOrigin\",\n    \"_dragX\",\n    \"_dragY\",\n    \"dragElastic\",\n    \"dragMomentum\",\n    \"dragPropagation\",\n    \"dragTransition\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"layoutScroll\",\n    ...inViewProps,\n    ...tapProps,\n    ...animationProps,\n    ...panProps,\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return validMotionProps.has(key);\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, elementProps);\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) || isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props) {\n    const newValues = scrapeMotionValuesFromProps$1(props);\n    for (const key in props) {\n        if (isMotionValue(props[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props);\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","function isMouseEvent(event) {\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n        return !!(event.pointerType === \"mouse\");\n    }\n    return event instanceof MouseEvent;\n}\nfunction isTouchEvent(event) {\n    const hasTouches = !!event.touches;\n    return hasTouches;\n}\n\nexport { isMouseEvent, isTouchEvent };\n","import { isTouchEvent } from '../gestures/utils/event-type.mjs';\n\n/**\n * Filters out events not attached to the primary pointer (currently left mouse button)\n * @param eventHandler\n */\nfunction filterPrimaryPointer(eventHandler) {\n    return (event) => {\n        const isMouseEvent = event instanceof MouseEvent;\n        const isPrimaryPointer = !isMouseEvent ||\n            (isMouseEvent && event.button === 0);\n        if (isPrimaryPointer) {\n            eventHandler(event);\n        }\n    };\n}\nconst defaultPagePoint = { pageX: 0, pageY: 0 };\nfunction pointFromTouch(e, pointType = \"page\") {\n    const primaryTouch = e.touches[0] || e.changedTouches[0];\n    const point = primaryTouch || defaultPagePoint;\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction pointFromMouse(point, pointType = \"page\") {\n    return {\n        x: point[pointType + \"X\"],\n        y: point[pointType + \"Y\"],\n    };\n}\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: isTouchEvent(event)\n            ? pointFromTouch(event, pointType)\n            : pointFromMouse(event, pointType),\n    };\n}\nconst wrapHandler = (handler, shouldFilterPrimaryPointer = false) => {\n    const listener = (event) => handler(event, extractEventInfo(event));\n    return shouldFilterPrimaryPointer\n        ? filterPrimaryPointer(listener)\n        : listener;\n};\n\nexport { extractEventInfo, wrapHandler };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { wrapHandler } from './event-info.mjs';\nimport { supportsPointerEvents, supportsTouchEvents, supportsMouseEvents } from './utils.mjs';\n\nconst mouseEventNames = {\n    pointerdown: \"mousedown\",\n    pointermove: \"mousemove\",\n    pointerup: \"mouseup\",\n    pointercancel: \"mousecancel\",\n    pointerover: \"mouseover\",\n    pointerout: \"mouseout\",\n    pointerenter: \"mouseenter\",\n    pointerleave: \"mouseleave\",\n};\nconst touchEventNames = {\n    pointerdown: \"touchstart\",\n    pointermove: \"touchmove\",\n    pointerup: \"touchend\",\n    pointercancel: \"touchcancel\",\n};\nfunction getPointerEventName(name) {\n    if (supportsPointerEvents()) {\n        return name;\n    }\n    else if (supportsTouchEvents()) {\n        return touchEventNames[name];\n    }\n    else if (supportsMouseEvents()) {\n        return mouseEventNames[name];\n    }\n    return name;\n}\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, getPointerEventName(eventName), handler && wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","import { isBrowser } from '../utils/is-browser.mjs';\n\n// We check for event support via functions in case they've been mocked by a testing suite.\nconst supportsPointerEvents = () => isBrowser && window.onpointerdown === null;\nconst supportsTouchEvents = () => isBrowser && window.ontouchstart === null;\nconst supportsMouseEvents = () => isBrowser && window.onmousedown === null;\n\nexport { supportsMouseEvents, supportsPointerEvents, supportsTouchEvents };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { isMouseEvent } from './utils/event-type.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\n\nfunction createHoverEvent(visualElement, isActive, callback) {\n    return (event, info) => {\n        if (!isMouseEvent(event) || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", onHoverStart || whileHover\n        ? createHoverEvent(visualElement, true, onHoverStart)\n        : undefined, { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", onHoverEnd || whileHover\n        ? createHoverEvent(visualElement, false, onHoverEnd)\n        : undefined, { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","const warned = new Set();\nfunction warnOnce(condition, message, element) {\n    if (condition || warned.has(message))\n        return;\n    console.warn(message);\n    if (element)\n        console.warn(element);\n    warned.add(message);\n}\n\nexport { warnOnce };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { env } from '../../../utils/process.mjs';\nimport { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (env !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { usePointerEvent, addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart || onTap || onTapCancel || onPointerDown),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? onTapCancel && onTapCancel(event, info)\n            : onTap && onTap(event, info);\n    }\n    function onPointerCancel(event, info) {\n        if (!checkPointerEnd())\n            return;\n        onTapCancel && onTapCancel(event, info);\n    }\n    function onPointerDown(event, info) {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        visualElement.animationState &&\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        onTapStart && onTapStart(event, info);\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? onPointerDown : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = () => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    };\n    const onBlur = () => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    };\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isMouseEvent, isTouchEvent } from './utils/event-type.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n            if (isMouseEvent(event) && event.buttons === 0) {\n                this.handlePointerUp(event, info);\n                return;\n            }\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (isTouchEvent(event) && event.touches.length > 1)\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: AnyPointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst setAndResetVelocity = (value, to) => {\n    // Looks odd but setting it twice doesn't render, it'll just\n    // set both prev and current to the latest value\n    value.set(to, false);\n    value.set(to);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        setAndResetVelocity(value, origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                setAndResetVelocity(value, to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { env } from '../utils/process.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"Unmount\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures(renderedProps, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (env !== \"production\" && preloadedFeatures && isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props), this.prevMotionValues);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (this.hasValue(key))\n            this.removeValue(key);\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n        this.bindToMotionValue(key, value);\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    /**\n     * Get a motion value for this key. If called with a default\n     * value, we'll create one if none exists.\n     */\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"7.10.3\", `Attempting to mix Framer Motion versions ${nextValue.version} with 7.10.3 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props) {\n        return scrapeMotionValuesFromProps(props);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = (_c = this.options.visualElement) === null || _c === void 0 ? void 0 : _c.getProps().transformTemplate;\n            this.prevTransformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            const transformTemplateValue = transformTemplate === null || transformTemplate === void 0 ? void 0 : transformTemplate(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues))\n                return undefined;\n            if ((this.parent.relativeTarget || this.parent.targetDelta) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            this.relativeTarget = this.relativeTargetOrigin = undefined;\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b, _c;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_c = (_b = valuesToRender.opacity) !== null && _b !== void 0 ? _b : this.latestValues.opacity) !== null && _c !== void 0 ? _c : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                const corrected = correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { appearStoreId } from './store-id.mjs';\n\nfunction handoffOptimizedAppearAnimation(id, name) {\n    const { MotionAppearAnimations } = window;\n    const animationId = appearStoreId(id, transformProps.has(name) ? \"transform\" : name);\n    const animation = MotionAppearAnimations && MotionAppearAnimations.get(animationId);\n    if (animation) {\n        /**\n         * We allow the animation to persist until the next frame:\n         *   1. So it continues to play until Framer Motion is ready to render\n         *      (avoiding a potential flash of the element's original state)\n         *   2. As all independent transforms share a single transform animation, stopping\n         *      it synchronously would prevent subsequent transforms from handing off.\n         */\n        sync.render(() => {\n            /**\n             * Animation.cancel() throws so it needs to be wrapped in a try/catch\n             */\n            try {\n                animation.cancel();\n                MotionAppearAnimations.delete(animationId);\n            }\n            catch (e) { }\n        });\n        return animation.currentTime || 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport { handoffOptimizedAppearAnimation };\n","const appearStoreId = (id, value) => `${id}: ${value}`;\n\nexport { appearStoreId };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { handoffOptimizedAppearAnimation } from '../../animation/optimized-appear/handoff.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        let valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * Make animation instant if this is a transform prop and we should reduce motion.\n         */\n        if (visualElement.shouldReduceMotion && transformProps.has(key)) {\n            valueTransition = {\n                ...valueTransition,\n                type: false,\n                delay: 0,\n            };\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (!value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = handoffOptimizedAppearAnimation(appearId, key);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"7.10.3\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @privateRemarks\n     *\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\n     *\n     * ```jsx\n     * useOnChange(x, () => {})\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect) {\n        this.passiveEffect = passiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(animation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.stopAnimation = animation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.stopAnimation) {\n            this.stopAnimation();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.stopAnimation;\n    }\n    clearAnimation() {\n        this.stopAnimation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["warning","invariant","instantAnimationState","easeIn","p","easeOut","reverse","easeInOut","mirror","hueToRgb","q","t","mixLinearColor","from","to","v","fromExpo","Math","sqrt","max","colorTypes","hex","rgba","hsla","asRGBA","color","type","find","test","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mix","getMixer","origin","target","mixComplex","mixArray","output","numValues","length","blendValue","map","fromThis","i","mixObject","key","undefined","template","complex","originStats","targetStats","numColors","numNumbers","pipe","values","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","Array","isArray","numMixers","mixer","easingFunction","push","interpolate","input","clamp","isClamp","inputLength","interpolator","progressInRange","progress","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","backOut","backIn","backInOut","easingLookup","linear","circIn","circInOut","circOut","anticipate","pow","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","state","done","value","absoluteTimes","offset","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","easing","splice","next","flipTarget","safeMin","findSpring","bounce","velocity","mass","envelope","derivative","maxDuration","dampingRatio","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","approximateRoot","isNaN","stiffness","damping","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restSpeed","restDelta","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","min","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","current","currentVelocity","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","start","stop","animate","driver","repeat","repeatMax","repeatType","repeatDelay","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","_a","_b","driverControls","latest","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","call","animation","reverseElapsed","hasRepeatDelayElapsed","sample","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","createAcceleratedAnimation","valueName","sampleAnimation","pregeneratedKeyframes","element","fill","iterations","direction","animateStyle","owner","onfinish","set","currentTime","setWithVelocity","cancel","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","default","getDefaultTransition","valueKey","isAnimatable","startsWith","featureTests","waapi","Object","hasOwnProperty","Element","prototype","results","supports","acceleratedValues","Set","createMotionValueAnimation","transition","valueTransition","isTargetAnimatable","get","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","prev","checkBoundary","inertia","visualElement","has","HTMLElement","getProps","isKeyframesTarget","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","isZero","parseFloat","indexOf","getZeroUnit","potentialUnitType","getValueTransition","acos","mirrorEasing","reverseEasing","frameData","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","index","delete","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","forEach","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","presenceId","id","blockInitialAnimation","initial","render","animationState","animateChanges","notify","isRefObject","ref","isVariantLabel","isAnimationControls","variantProps","isControllingVariants","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","getSnapshotBeforeUpdate","this","setProps","componentDidUpdate","children","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","lazyStrictMode","initialLayoutGroupConfig","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","layout","translateAlias","transformPerspective","sortTransformProps","isCSSVariable","getValueAsType","transform","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","number","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","sort","trim","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","size","px","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","width","height","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","toUpperCase","resolveMotionValue","unwrappedValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","AnimationType","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","touches","defaultPagePoint","pageX","pageY","pointFromTouch","pointType","point","changedTouches","pointFromMouse","extractEventInfo","wrapHandler","shouldFilterPrimaryPointer","listener","eventHandler","button","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","onpointerdown","ontouchstart","onmousedown","addPointerEvent","usePointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","margin","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","onPointerDown","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","onPointerCancel","whileFocus","Focus","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","prevLength","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","createAnimationState","animations","Promise","animateList","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","protectedKeys","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","needsAnimating","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","resolve","variantChildren","setAnimateFunction","makeAnimator","getState","subscribe","safeToRemove","then","distance","PanSession","constructor","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","getValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","dragControls","groupDragControls","cssVariableRegex","getVariableValue","depth","token","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","positionalKeys","isPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","checkAndConvertChangedValueTypes","targetPositionalKeys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","hasValue","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","shouldReduceMotion","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","willChange","initialMotionValues","is","_props","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","_c","remove","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","sortNodePosition","other","sortInstanceNodePosition","renderedProps","isStrict","ProjectionNodeConstructor","layoutScroll","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","getStaticValue","makeTargetAnimatable","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","addValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","getVariant","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","parsed","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","super","arguments","getAttribute","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","replace","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","prevProps","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","_d","_e","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","getPrevLead","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","documentNode","position","featureBundle","motion","camelToDash","str","getAnimatableNone","defaultValueType","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","skewX","skewY","translateX","translateY","translateZ","perspective","zIndex","fillOpacity","strokeOpacity","numOctaves","testValueType","transformPropOrder","transformProps","handoffOptimizedAppearAnimation","MotionAppearAnimations","appearStoreId","optimizedAppearDataAttribute","animateVisualElement","variant","animateVariant","resolvedDefinition","animateTarget","transitionOverride","getAnimation","getChildAnimations","forwardDelay","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","animationTypeState","shouldBlockAnimation","appearId","shouldBlock","resolveVariant","getCurrent","resolveVariantFromProps","currentValues","isZeroValueString","valueTypes","findValueType","setMotionValue","setTarget","setVariants","variantLabels","setValues","checkTargetForNewValues","newValueKeys","numNewValues","targetValue","getOriginFromTransition","getOrigin","transitionOrigin","addUniqueItem","arr","item","removeItem","timeout","checkElapsed","any","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","subscriptions","numSubscriptions","getSize","secondsToMilliseconds","seconds","useConstant","init","velocityPerSecond","frameDuration","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","r","substring","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorToken","numberToken","analyseComplexValue","colors","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isWillChangeMotionValue","isMotionValue"],"sourceRoot":""}